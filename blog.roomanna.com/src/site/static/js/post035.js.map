{"version":3,"sources":["webpack:///post035.js","webpack:///./src/post035/main.js","webpack:///./src/post035/pointwindow.js","webpack:///./src/post035/slidingwindow.js","webpack:///./src/common/deque.js","webpack:///./~/d3/build/d3.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","drawCanvas","ctx","globalCompositeOperation","clearRect","w","h","i","points","length","fillStyle","windowSize","COLOR_ACTIVE","COLOR_EXTRA","fillRect","halfPt","winW","win","maxX","minX","winH","maxY","minY","strokeStyle","COLOR_BORDER","lineWidth","strokeRect","drawPoints","elems","d3","select","selectAll","data","enter","append","merge","classed","x","html","exit","remove","drawWindows","rows","newrow","text","label","cells","index","value","draw","defineProperty","PointWindow","undefined","_pointwindow","_pointwindow2","_d","maxPoints","canvasDom","document","getElementById","parseInt","getAttribute","getContext","addEventListener","evt","splice","offsetX","offsetY","add","pop","57","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_slidingwindow","_slidingwindow2","size","this","minx_","Min","miny_","maxx_","Max","maxy_","y","toArray","get","58","_deque","_deque2","Entry","SlidingWindow","compare","deque_","count_","size_","compare_","item","curr","peekTail","popTail","pushTail","peekHead","popHead","head","a","b","59","Item","next","prev","Deque","head_","tail_","test","array","push","60","global","factory","ascendingComparator","f","d","ascending","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","Map","map$1","object","map","each","set","Array","isArray","o","n","createObject","setObject","createMap","setMap","Set","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","computeUpperHullIndexes","indexes","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","Infinity","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","c","end","apply","noabort","r","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","p","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","extend","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","indexOf","type","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","range","filter","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","width","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","id","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","order","tickExit","tickEnter","attr","line","left","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","height","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","i1","sumValue","minValue","maxValue","newRatio","minRatio","i0","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","cross$1","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw"],"mappings":"AAAAA,cAAc,IAERC,EACA,SAASC,EAAQC,EAASC,GAE/B,YAeA,SAASC,GAAwBC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIE,KAAa,IAAW,MAAPF,EAAe,IAAK,GAAIG,KAAOH,GAAWI,OAAOC,UAAUC,eAAeC,KAAKP,EAAKG,KAAMD,EAAOC,GAAOH,EAAIG,GAAgC,OAAtBD,GAAOM,QAAUR,EAAYE,EAElQ,QAASO,GAAuBT,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQQ,QAASR,GCGxF,QAASU,KACPC,EAAIC,yBAA2B,cAC/BD,EAAIE,UAAU,EAAG,EAAGC,EAAGC,EACvB,KAAK,GAAIC,GAAI,EAAGA,EAAIC,EAAOC,OAAQF,IACjCL,EAAIQ,UAAaH,EAAII,EAAcC,EAAeC,EAClDX,EAAIY,SAASN,EAAOD,GAAG,GAAKQ,EAAQP,EAAOD,GAAG,GAAKQ,EAAiB,EAATA,EAAqB,EAATA,EAEzE,IAAIC,GAAOC,EAAIC,KAAOD,EAAIE,KACtBC,EAAOH,EAAII,KAAOJ,EAAIK,IAC1BpB,GAAIqB,YAAcC,EAClBtB,EAAIuB,UAAYA,EAChBvB,EAAIwB,WAAWT,EAAIE,KAAMF,EAAIK,KAAMN,EAAMI,GAG3C,QAASO,KACP,GAAMC,GAAQC,EACXC,OAAO,WACPC,UAAU,cACVC,KAAKxB,EAERoB,GACGK,QACEC,OAAO,QACTC,MAAMP,GACJQ,QAAQ,SAAS,GACjBA,QAAQ,SAAU,SAACC,EAAG9B,GAAJ,MAAUA,GAAII,IAChC2B,KAAK,SAACD,GAAD,UAAWA,EAAE,GAAb,IAAmBA,EAAE,GAArB,MAEVT,EAAMW,OAAOC,SAGf,QAASC,KACP,GAAMC,GAAOb,EACVC,OAAO,YACPA,OAAO,SACPC,UAAU,MACVC,KAAKf,EAAIe,QAENW,EAASD,EACZT,QACEC,OAAO,KAEZS,GACGT,OAAO,MACPU,KAAK,SAACP,GAAD,MAAOA,GAAEQ,QAEjBF,EACGT,OAAO,MAEVQ,EAAKH,OAAOC,QAEZ,IAAMM,GAAQjB,EACXC,OAAO,YACPA,OAAO,SACPC,UAAU,MACVD,OAAO,MACPC,UAAU,aACVC,KAAK,SAACK,GAAD,MAAOA,GAAEL,MAEjBc,GACGb,QACEC,OAAO,OACTC,MAAMW,GACJV,QAAQ,SAAS,GACjBA,QAAQ,SAAU,SAACC,EAAG9B,GAAJ,MAAe,IAALA,IAC5B+B,KAAK,SAACD,GAAD,6BAA8BA,EAAEU,MAAhC,gCAAqEV,EAAEW,MAAvE,YAEVF,EACGP,OACAC,SAGL,QAASS,KACPhD,IACA0B,IACAc,ID7FD9C,OAAOuD,eAAe9D,EAAS,cAC7B4D,OAAO,IAET5D,EAAQ+D,YAAcC,MCVvB,IAAAC,GAAAhE,EAAA,IDcKiE,EAAgBtD,EAAuBqD,GCb5CE,EAAAlE,EAAA,IAAYwC,EDiBFvC,EAAwBiE,GCf5B5C,EAAa,EACb6C,EAAY,GACZzC,EAAS,EACTU,EAAY,EAEZgC,EAAYC,SAASC,eAAe,UAMpCtD,GALYqD,SAASC,eAAe,UAC1BD,SAASC,eAAe,QACxBD,SAASC,eAAe,QACxBD,SAASC,eAAe,QACxBD,SAASC,eAAe,QAC9BC,SAASH,EAAUI,aAAa,WACpCvD,EAAIsD,SAASH,EAAUI,aAAa,WACpC3D,EAAMuD,EAAUK,WAAW,MAE3BlD,EAAe,UACfC,EAAc,UACdW,EAAe,UAEjBhB,KACAS,EAAM,GAAAqC,GAAAvD,QAAgBY,EAgF1B8C,GAAUM,iBAAiB,QAAS,SAASC,GAG3C,IAFAxD,EAAOyD,OAAO,EAAG,GAAID,EAAIE,QAASF,EAAIG,UACtClD,EAAImD,IAAIJ,EAAIE,QAASF,EAAIG,SAClB3D,EAAOC,OAAS+C,GACrBhD,EAAO6D,KAETpB,ODID7D,ECDQ+D,YDCcG,EAAcvD,SAI/BuE,GACA,SAASnF,EAAQC,EAASC,GAE/B,YAYA,SAASW,GAAuBT,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQQ,QAASR,GAEvF,QAASgF,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhH/E,OAAOuD,eAAe9D,EAAS,cAC7B4D,OAAO,GAGT,IAAI2B,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIvE,GAAI,EAAGA,EAAIuE,EAAMrE,OAAQF,IAAK,CAAE,GAAIwE,GAAaD,EAAMvE,EAAIwE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMvF,OAAOuD,eAAe2B,EAAQE,EAAWrF,IAAKqF,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYP,EAAiBH,EAAY7E,UAAWuF,GAAiBC,GAAaR,EAAiBH,EAAaW,GAAqBX,ME9HjiBY,EAAAhG,EAAA,IFkIKiG,EAAkBtF,EAAuBqF,GEhIzBlC,EFsIF,WErIjB,QAAAA,GAAYoC,GAAMhB,EAAAiB,KAAArC,GAChBqC,KAAKC,MAAQ,GAAAH,GAAAvF,QAAkBwF,EAAMD,EAAAvF,QAAc2F,KACnDF,KAAKG,MAAQ,GAAAL,GAAAvF,QAAkBwF,EAAMD,EAAAvF,QAAc2F,KACnDF,KAAKI,MAAQ,GAAAN,GAAAvF,QAAkBwF,EAAMD,EAAAvF,QAAc8F,KACnDL,KAAKM,MAAQ,GAAAR,GAAAvF,QAAkBwF,EAAMD,EAAAvF,QAAc8F,KF8KpD,MAnCAlB,GAAaxB,IACXzD,IAAK,MACLsD,MAAO,SE1INX,EAAG0D,GACLP,KAAKC,MAAMrB,IAAI/B,GACfmD,KAAKI,MAAMxB,IAAI/B,GACfmD,KAAKG,MAAMvB,IAAI2B,GACfP,KAAKM,MAAM1B,IAAI2B,MF6IdrG,IAAK,OACLsD,MAAO,WE1HR,QACIH,MAAO,OAAQb,KAAMwD,KAAKC,MAAMO,YAChCnD,MAAO,OAAQb,KAAMwD,KAAKG,MAAMK,YAChCnD,MAAO,OAAQb,KAAMwD,KAAKI,MAAMI,YAChCnD,MAAO,OAAQb,KAAMwD,KAAKM,MAAME,eF0HnCtG,IAAK,OACLuG,IAAK,WE/IN,MAAOT,MAAKC,MAAMzC,OAAS,KFmJ1BtD,IAAK,OACLuG,IAAK,WEhJN,MAAOT,MAAKG,MAAM3C,OAAS,KFoJ1BtD,IAAK,OACLuG,IAAK,WEjJN,MAAOT,MAAKI,MAAM5C,OAAS,KFqJ1BtD,IAAK,OACLuG,IAAK,WElJN,MAAOT,MAAKM,MAAM9C,OAAS,MFuJrBG,IAGT/D,GAAQW,QEtLYoD,GF0Lf+C,GACA,SAAS/G,EAAQC,EAASC,GAE/B,YAYA,SAASW,GAAuBT,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQQ,QAASR,GAEvF,QAASgF,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhH/E,OAAOuD,eAAe9D,EAAS,cAC7B4D,OAAO,GAGT,IAAI2B,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIvE,GAAI,EAAGA,EAAIuE,EAAMrE,OAAQF,IAAK,CAAE,GAAIwE,GAAaD,EAAMvE,EAAIwE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMvF,OAAOuD,eAAe2B,EAAQE,EAAWrF,IAAKqF,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYP,EAAiBH,EAAY7E,UAAWuF,GAAiBC,GAAaR,EAAiBH,EAAaW,GAAqBX,MGrMjiB0B,EAAA9G,EAAA,IHyMK+G,EAAUpG,EAAuBmG,GGvMhCE,EACJ,QAAAA,GAAYtD,EAAOC,GAAOuB,EAAAiB,KAAAa,GACxBb,KAAKzC,MAAQA,EACbyC,KAAKxC,MAAQA,GAIIsD,EH6MA,WG5MnB,QAAAA,GAAYf,EAAMgB,GAAShC,EAAAiB,KAAAc,GACzBd,KAAKgB,OAAS,GAAAJ,GAAArG,QACdyF,KAAKiB,OAAS,EACdjB,KAAKkB,MAAQnB,EACbC,KAAKmB,SAAWJ,EHyPjB,MAvCA5B,GAAa2B,IACX5G,IAAK,MACLsD,MAAO,SGjNN4D,GAEF,IADA,GAAIC,GAAOrB,KAAKgB,OAAOM,WAChBD,GAAQA,EAAK9D,OAAS,IAAMyC,KAAKmB,SAASE,EAAK7D,MAAO4D,IAC3DpB,KAAKgB,OAAOO,UACZF,EAAOrB,KAAKgB,OAAOM,UAKrB,KAHAtB,KAAKgB,OAAOQ,SAAS,GAAIX,GAAMb,KAAKiB,OAAQG,IAC5CpB,KAAKiB,SACLI,EAAOrB,KAAKgB,OAAOS,WACZJ,GAAQA,EAAK9D,MAASyC,KAAKiB,OAASjB,KAAKkB,OAC9ClB,KAAKgB,OAAOU,UACZL,EAAOrB,KAAKgB,OAAOS,cHqNpBvH,IAAK,UACLsD,MAAO,WG5MR,MAAOwC,MAAKgB,OAAOR,aHgNlBtG,IAAK,QACLuG,IAAK,WGtNN,GAAIkB,GAAO3B,KAAKgB,OAAOS,UACvB,OAAOE,IAAQA,EAAKnE,OAAS,UH0N5BtD,IAAK,MACLsD,MAAO,SGpNCoE,EAAEC,GAAK,MAAOD,GAAIC,KHwN1B3H,IAAK,MACLsD,MAAO,SGxNCoE,EAAEC,GAAK,MAAOD,GAAIC,MH6NrBf,IAGTlH,GAAQW,QGjQYuG,GHqQfgB,GACA,SAASnI,EAAQC,GAEtB,YAQA,SAASmF,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhH/E,OAAOuD,eAAe9D,EAAS,cAC7B4D,OAAO,GAGT,IAAI2B,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIvE,GAAI,EAAGA,EAAIuE,EAAMrE,OAAQF,IAAK,CAAE,GAAIwE,GAAaD,EAAMvE,EAAIwE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMvF,OAAOuD,eAAe2B,EAAQE,EAAWrF,IAAKqF,IAAiB,MAAO,UAAUN,EAAaU,EAAYC,GAAiJ,MAA9HD,IAAYP,EAAiBH,EAAY7E,UAAWuF,GAAiBC,GAAaR,EAAiBH,EAAaW,GAAqBX,MIvR3hB8C,EACJ,QAAAA,GAAYvE,GAAOuB,EAAAiB,KAAA+B,GACjB/B,KAAKxC,MAAQA,EACbwC,KAAKgC,KAAO,KACZhC,KAAKiC,KAAO,MAIKC,EJ2RR,WI1RX,QAAAA,KAAcnD,EAAAiB,KAAAkC,GACZlC,KAAKmC,MAAQ,KACbnC,KAAKoC,MAAQ,KJ+Xd,MA/FAjD,GAAa+C,IACXhI,IAAK,WACLsD,MAAO,SI/RDzC,GACP,GAAMqG,GAAO,GAAIW,GAAKhH,EACtBqG,GAAKY,KAAOhC,KAAKmC,MACbnC,KAAKmC,QACPnC,KAAKmC,MAAMF,KAAOb,GAEpBpB,KAAKmC,MAAQf,EACRpB,KAAKoC,QACRpC,KAAKoC,MAAQhB,MJmSdlH,IAAK,WACLsD,MAAO,SIhSDzC,GACP,GAAMqG,GAAO,GAAIW,GAAKhH,EACtBqG,GAAKa,KAAOjC,KAAKoC,MACbpC,KAAKoC,QACPpC,KAAKoC,MAAMJ,KAAOZ,GAEpBpB,KAAKoC,MAAQhB,EACRpB,KAAKmC,QACRnC,KAAKmC,MAAQf,MJoSdlH,IAAK,UACLsD,MAAO,WIhSR,GAAM4D,GAAOpB,KAAKmC,KAQlB,OAPIf,IAAQA,EAAKY,MACfhC,KAAKmC,MAAQf,EAAKY,KAClBZ,EAAKY,KAAKC,KAAO,OAEjBjC,KAAKmC,MAAQ,KACbnC,KAAKoC,MAAQ,MAERhB,GAAQA,EAAK5D,OAAS,QJoS5BtD,IAAK,UACLsD,MAAO,WIjSR,GAAM4D,GAAOpB,KAAKoC,KAQlB,OAPIhB,IAAQA,EAAKa,MACfjC,KAAKoC,MAAQhB,EAAKa,KAClBb,EAAKa,KAAKD,KAAO,OAEjBhC,KAAKmC,MAAQ,KACbnC,KAAKoC,MAAQ,MAERhB,GAAQA,EAAK5D,OAAS,QJqS5BtD,IAAK,WACLsD,MAAO,WIlSR,MAAOwC,MAAKmC,OAASnC,KAAKmC,MAAM3E,OAAS,QJsSxCtD,IAAK,WACLsD,MAAO,WInSR,MAAOwC,MAAKoC,OAASpC,KAAKoC,MAAM5E,OAAS,QJuSxCtD,IAAK,SACLsD,MAAO,SIrSH6E,GAEL,IADA,GAAIjB,GAAOpB,KAAKmC,MACA,OAATf,GACDiB,EAAKjB,EAAK5D,UAAW,IACL,OAAd4D,EAAKa,KACPjC,KAAKmC,MAAQf,EAAKY,KAElBZ,EAAKa,KAAKD,KAAOZ,EAAKY,KAEN,OAAdZ,EAAKY,KACPhC,KAAKoC,MAAQhB,EAAKa,KAElBb,EAAKY,KAAKC,KAAOb,EAAKa,MAG1Bb,EAAOA,EAAKY,QJySb9H,IAAK,UACLsD,MAAO,WInSR,IAFA,GAAI4D,GAAOpB,KAAKmC,MACZG,KACW,MAARlB,GACLkB,EAAMC,KAAKnB,EAAK5D,OAChB4D,EAAOA,EAAKY,IAEd,OAAOM,OJ0SDJ,IAGTtI,GAAQW,QIrYY2H,GJyYfM,GACA,SAAS7I,EAAQC,EAASC,IKjZhC,SAAA4I,EAAAC,GACAA,EAAA9I,IAGCoG,KAAA,SAAApG,GAA4B,YAkC7B,SAAA+I,GAAAC,GACA,gBAAAC,EAAAhG,GACA,MAAAiG,IAAAF,EAAAC,GAAAhG,IAyHA,QAAAkG,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,KAAAC,IAAAJ,EAAAD,GAAAI,KAAAE,IAAA,EAAAJ,GACAK,EAAAH,KAAAI,IAAA,GAAAJ,KAAAK,MAAAL,KAAAM,IAAAP,GAAAC,KAAAO,OACAC,EAAAT,EAAAI,CAIA,OAHAK,IAAAC,GAAAN,GAAA,GACAK,GAAAE,GAAAP,GAAA,EACAK,GAAAG,KAAAR,GAAA,GACAN,EAAAD,GAAAO,IAiQA,QAAAtI,GAAA4H,GACA,MAAAA,GAAA5H,OASA,QAAA+I,MAkDA,QAAAC,GAAAC,EAAAtB,GACA,GAAAuB,GAAA,GAAAH,EAGA,IAAAE,YAAAF,GAAAE,EAAAE,KAAA,SAAA5G,EAAAtD,GAA+DiK,EAAAE,IAAAnK,EAAAsD,SAG/D,IAAA8G,MAAAC,QAAAL,GAAA,CACA,GAEAM,GAFAzJ,GAAA,EACA0J,EAAAP,EAAAjJ,MAGA,UAAA2H,EAAA,OAAA7H,EAAA0J,GAAAN,EAAAE,IAAAtJ,EAAAmJ,EAAAnJ,QACA,QAAAA,EAAA0J,GAAAN,EAAAE,IAAAzB,EAAA4B,EAAAN,EAAAnJ,KAAAmJ,GAAAM,OAIA,IAAAN,EAAA,OAAAhK,KAAAgK,GAAAC,EAAAE,IAAAnK,EAAAgK,EAAAhK,GAEA,OAAAiK,GA2DA,QAAAO,KACA,SAGA,QAAAC,GAAAT,EAAAhK,EAAAsD,GACA0G,EAAAhK,GAAAsD,EAGA,QAAAoH,KACA,MAAAX,KAGA,QAAAY,GAAAV,EAAAjK,EAAAsD,GACA2G,EAAAE,IAAAnK,EAAAsD,GAGA,QAAAsH,MAoBA,QAAAT,GAAAH,EAAAtB,GACA,GAAAyB,GAAA,GAAAS,EAGA,IAAAZ,YAAAY,GAAAZ,EAAAE,KAAA,SAAA5G,GAA0D6G,EAAAzF,IAAApB,SAG1D,IAAA0G,EAAA,CACA,GAAAnJ,IAAA,EAAA0J,EAAAP,EAAAjJ,MACA,UAAA2H,EAAA,OAAA7H,EAAA0J,GAAAJ,EAAAzF,IAAAsF,EAAAnJ,QACA,QAAAA,EAAA0J,GAAAJ,EAAAzF,IAAAgE,EAAAsB,EAAAnJ,KAAAmJ,IAGA,MAAAG,GA+EA,QAAAU,GAAAC,GACA,OAAAA,EAGA,QAAAC,GAAAD,GACA,MAAAA,KAGA,QAAAE,GAAAF,GACA,MAAAA,IAAA,EAAAA,GAGA,QAAAG,GAAAH,GACA,QAAAA,GAAA,MAAAA,SAAA,EAAAA,GAAA,KAGA,QAAAI,GAAAJ,GACA,MAAAA,OAGA,QAAAK,GAAAL,GACA,QAAAA,MAAA,EAGA,QAAAM,GAAAN,GACA,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,KA4CA,QAAAO,GAAAP,GACA,SAAA5B,KAAAoC,IAAAR,EAAAS,IAGA,QAAAC,GAAAV,GACA,MAAA5B,MAAAuC,IAAAX,EAAAS,IAGA,QAAAG,GAAAZ,GACA,SAAA5B,KAAAoC,IAAAK,GAAAb,IAAA,EAGA,QAAAc,GAAAd,GACA,MAAA5B,MAAAI,IAAA,KAAAwB,EAAA,IAGA,QAAAe,GAAAf,GACA,SAAA5B,KAAAI,IAAA,MAAAwB,GAGA,QAAAgB,GAAAhB,GACA,QAAAA,GAAA,MAAA5B,KAAAI,IAAA,KAAAwB,EAAA,MAAA5B,KAAAI,IAAA,QAAAwB,IAAA,EAGA,QAAAiB,GAAAjB,GACA,SAAA5B,KAAA8C,KAAA,EAAAlB,KAGA,QAAAmB,GAAAnB,GACA,MAAA5B,MAAA8C,KAAA,KAAAlB,KAGA,QAAAoB,GAAApB,GACA,QAAAA,GAAA,QAAA5B,KAAA8C,KAAA,EAAAlB,KAAA5B,KAAA8C,KAAA,GAAAlB,GAAA,GAAAA,GAAA,KAcA,QAAAqB,GAAArB,GACA,SAAAsB,EAAA,EAAAtB,GAGA,QAAAsB,GAAAtB,GACA,OAAAA,MAAAuB,GAAAC,GAAAxB,MAAAyB,GAAAD,IAAAxB,GAAA0B,IAAA1B,EAAA2B,GAAA3B,EAAA4B,GAAAJ,IAAAxB,GAAA6B,IAAA7B,EAAA8B,GAAAN,IAAAxB,GAAA+B,IAAA/B,EAAAgC,GAGA,QAAAC,GAAAjC,GACA,QAAAA,GAAA,QAAAsB,EAAA,EAAAtB,GAAAsB,EAAAtB,EAAA,QAmIA,QAAAkC,GAAAtF,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAMA,QAAAsF,GAAAnM,GAKA,OAJAyJ,GAAAzJ,EAAAC,OACAmM,GAAA,KACArH,EAAA,EAEAhF,EAAA,EAAiBA,EAAA0J,IAAO1J,EAAA,CACxB,KAAAgF,EAAA,GAAAsH,GAAArM,EAAAoM,EAAArH,EAAA,IAAA/E,EAAAoM,EAAArH,EAAA,IAAA/E,EAAAD,KAAA,KAAAgF,CACAqH,GAAArH,KAAAhF,EAGA,MAAAqM,GAAAE,MAAA,EAAAvH,GA6EA,QAAAwH,KACAvH,KAAAwH,IAAAxH,KAAAyH,IACAzH,KAAA0H,IAAA1H,KAAA2H,IAAA,KACA3H,KAAA4H,KAGA,QAAAC,KACA,UAAAN,GA0IA,QAAA3I,GAAAkJ,EAAAjL,EAAA0D,EAAAsC,GACA,GAAAkF,MAAAlL,IAAAkL,MAAAxH,GAAA,MAAAuH,EAEA,IAAAE,GAOAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAvN,EACAwN,EAbAC,EAAAV,EAAAW,MACAC,GAAclM,KAAAqG,GACd8F,EAAAb,EAAAN,IACAoB,EAAAd,EAAAL,IACAoB,EAAAf,EAAAJ,IACAoB,EAAAhB,EAAAH,GAWA,KAAAa,EAAA,MAAAV,GAAAW,MAAAC,EAAAZ,CAGA,MAAAU,EAAAvN,QAGA,IAFAoN,EAAAxL,IAAAoL,GAAAU,EAAAE,GAAA,IAAAF,EAAAV,EAAmDY,EAAAZ,GACnDK,EAAA/H,IAAA2H,GAAAU,EAAAE,GAAA,IAAAF,EAAAV,EAAoDY,EAAAZ,EACpDF,EAAAQ,QAAAzN,EAAAuN,GAAA,EAAAD,IAAA,MAAAL,GAAAjN,GAAA2N,EAAAZ,CAMA,IAFAK,GAAAL,EAAAiB,GAAAzO,KAAA,KAAAkO,EAAAhM,MACA4L,GAAAN,EAAAkB,GAAA1O,KAAA,KAAAkO,EAAAhM,MACAK,IAAAsL,GAAA5H,IAAA6H,EAAA,MAAAM,GAAA1G,KAAAwG,EAAAR,IAAAjN,GAAA2N,EAAAZ,EAAAW,MAAAC,EAAAZ,CAGA,GACAE,OAAAjN,GAAA,GAAAuJ,OAAA,GAAAwD,EAAAW,MAAA,GAAAnE,OAAA,IACA+D,EAAAxL,IAAAoL,GAAAU,EAAAE,GAAA,IAAAF,EAAAV,EAAmDY,EAAAZ,GACnDK,EAAA/H,IAAA2H,GAAAU,EAAAE,GAAA,IAAAF,EAAAV,EAAoDY,EAAAZ,SACjDnN,EAAAuN,GAAA,EAAAD,MAAAE,GAAAH,GAAAF,IAAA,EAAAC,GAAAF,GACH,OAAAD,GAAAO,GAAAC,EAAAR,EAAAjN,GAAA2N,EAAAZ,EAGA,QAAAmB,GAAAzM,GACA,GAAAqG,GAAA9H,EACA8B,EACA0D,EAFAkE,EAAAjI,EAAAvB,OAGAiO,EAAA,GAAA5E,OAAAG,GACA0E,EAAA,GAAA7E,OAAAG,GACAkE,EAAAS,IACAR,EAAAQ,IACAP,IAAAO,KACAN,IAAAM,IAGA,KAAArO,EAAA,EAAaA,EAAA0J,IAAO1J,EACpBgN,MAAAlL,GAAAmD,KAAA+I,GAAAzO,KAAA,KAAAuI,EAAArG,EAAAzB,MAAAgN,MAAAxH,GAAAP,KAAAgJ,GAAA1O,KAAA,KAAAuI,MACAqG,EAAAnO,GAAA8B,EACAsM,EAAApO,GAAAwF,EACA1D,EAAA8L,MAAA9L,GACAA,EAAAgM,MAAAhM,GACA0D,EAAAqI,MAAArI,GACAA,EAAAuI,MAAAvI,GAWA,KAPAsI,EAAAF,MAAA3I,KAAAwH,IAAAqB,EAAA7I,KAAA0H,KACAoB,EAAAF,MAAA5I,KAAAyH,IAAAqB,EAAA9I,KAAA2H,KAGA3H,KAAAqJ,MAAAV,EAAAC,GAAAS,MAAAR,EAAAC,GAGA/N,EAAA,EAAaA,EAAA0J,IAAO1J,EACpB6D,EAAAoB,KAAAkJ,EAAAnO,GAAAoO,EAAApO,GAAAyB,EAAAzB,GAGA,OAAAiF,MAmNA,QAAAsJ,GAAA9M,GACA,OAAAzB,GAAA,EAAA0J,EAAAjI,EAAAvB,OAAkCF,EAAA0J,IAAO1J,EAAAiF,KAAAhD,OAAAR,EAAAzB,GACzC,OAAAiF,MAkDA,QAAAuJ,GAAA1G,GACA,MAAAA,GAAA,GAOA,QAAA2G,GAAA3G,GACA,MAAAA,GAAA,GAOA,QAAA4G,GAAAC,EAAA7M,EAAA0D,GACA,GAAAuH,GAAA,GAAA6B,GAAA,MAAA9M,EAAA0M,EAAA1M,EAAA,MAAA0D,EAAAiJ,EAAAjJ,EAAAqJ,gBACA,cAAAF,EAAA5B,IAAAmB,OAAAS,GAGA,QAAAC,GAAA9M,EAAA0D,EAAAoI,EAAAC,EAAAC,EAAAC,GACA9I,KAAA+I,GAAAlM,EACAmD,KAAAgJ,GAAAzI,EACAP,KAAAwH,IAAAmB,EACA3I,KAAAyH,IAAAmB,EACA5I,KAAA0H,IAAAmB,EACA7I,KAAA2H,IAAAmB,EACA9I,KAAAyI,MAAA7K,OAGA,QAAAiM,GAAAnB,GAEA,IADA,GAAAoB,IAActN,KAAAkM,EAAAlM,MAAgBwF,EAAA8H,EAC9BpB,IAAA1G,gBAA+CxF,KAAAkM,EAAAlM,KAC/C,OAAAsN,GA+CA,QAAAC,GAAAhK,GACA,KAAAA,GAAA,YAAAiK,MACAhK,MAAAiK,MAAAlK,EACAC,KAAAkK,MACAlK,KAAAmK,OAAA,KACAnK,KAAAoK,UACApK,KAAAqK,SACArK,KAAAsK,SACAtK,KAAAuK,QACAvK,KAAAwK,OACAxK,KAAAyK,OAAA,EAgCA,QAAAC,GAAAC,GACA,IAAAA,EAAAF,OACA,IAASzH,EAAA2H,GACT,MAAAC,GACA,GAAAD,EAAAP,OAAAO,EAAAH,OAAAG,EAAAJ,QAAA,GAAAM,EAAAF,EAAAC,OACA,KAAAD,EAAAN,MAAA,KAAAO,IAKA,QAAA5H,GAAA2H,GACA,KAAAA,EAAAF,OAAAE,EAAAL,UAAAK,EAAAJ,QAAAI,EAAAV,OAAA,CACA,GAAAlP,GAAA4P,EAAAH,OAAAG,EAAAJ,QACAvF,EAAA2F,EAAAP,OAAArP,GACAwN,EAAAvD,EAAA/J,OAAA,EACA6P,EAAA9F,EAAAuD,EACAvD,GAAAuD,GAAAwC,EAAAJ,EAAA5P,KACA4P,EAAAL,WAAAK,EAAAJ,QACAvF,EAAA8F,EAAAE,MAAA,KAAAhG,GACA2F,EAAAP,OAAArP,KACA4P,EAAAP,OAAArP,GAAAiK,GAAAiG,KAIA,QAAAF,GAAAJ,EAAA5P,GACA,gBAAA6P,EAAAM,GACAP,EAAAP,OAAArP,OACA4P,EAAAJ,UAAAI,EAAAH,OACAG,EAAAP,OAAArP,GAAA,KACA,MAAA4P,EAAAR,SACA,MAAAS,EACAC,EAAAF,EAAAC,IAEAD,EAAAN,MAAAtP,GAAAmQ,EACAP,EAAAL,SAAAI,EAAAC,GACAQ,EAAAR,OAKA,QAAAE,GAAAF,EAAAC,GACA,GAAA5F,GAAAjK,EAAA4P,EAAAP,OAAAnP,MAKA,KAJA0P,EAAAR,OAAAS,EACAD,EAAAN,MAAAzM,OACA+M,EAAAL,SAAAV,MAEA7O,GAAA,GACA,IAAAiK,EAAA2F,EAAAP,OAAArP,MACA4P,EAAAP,OAAArP,GAAA,KACAiK,EAAA6F,OACA,IAAa7F,EAAA6F,QACb,MAAAD,IAKAD,EAAAJ,QAAAX,IACAuB,EAAAR,GAGA,QAAAQ,GAAAR,GACA,IAAAA,EAAAJ,SAAAI,EAAAT,MAAA,CACA,GAAArH,GAAA8H,EAAAN,KACAM,GAAAN,MAAAzM,OACA+M,EAAAT,MAAAS,EAAAR,OAAAtH,IAIA,QAAAuI,GAAAC,GACA,UAAAtB,GAAAuB,UAAArQ,QAAAoQ,EAAAjC,KAcA,QAAAmC,GAAA1I,GACA,MAAAA,GAAA2I,YAGA,QAAAC,GAAA5I,GACA,MAAAA,GAAA6I,YAGA,QAAAC,GAAA9I,GACA,MAAAA,GAAA+I,WAGA,QAAAC,GAAAhJ,GACA,MAAAA,GAAAiJ,SAGA,QAAAC,IAAAlJ,GACA,MAAAA,MAAAmJ,SAGA,QAAAC,IAAApP,GACA,MAAAA,IAAA,EAAAqP,GAAArP,IAAA,GAAAqP,GAAA9I,KAAA6I,KAAApP,GAGA,QAAAsP,IAAAxD,EAAAC,EAAAC,EAAAC,EAAAsD,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA3D,EAAAF,EAAA8D,EAAA3D,EAAAF,EACA8D,EAAAJ,EAAAF,EAAAO,EAAAJ,EAAAF,EACArH,GAAA0H,GAAA9D,EAAAyD,GAAAM,GAAAhE,EAAAyD,KAAAO,EAAAH,EAAAE,EAAAD,EACA,QAAA9D,EAAA3D,EAAAwH,EAAA5D,EAAA5D,EAAAyH,GAKA,QAAAG,IAAAjE,EAAAC,EAAAC,EAAAC,EAAA+D,EAAAC,EAAAC,GACA,GAAAC,GAAArE,EAAAE,EACAoE,EAAArE,EAAAE,EACAoE,GAAAH,EAAAD,MAAA1J,KAAA8C,KAAA8G,IAAAC,KACAE,EAAAD,EAAAD,EACAG,GAAAF,EAAAF,EACAK,EAAA1E,EAAAwE,EACAG,EAAA1E,EAAAwE,EACAZ,EAAA3D,EAAAsE,EACAV,EAAA3D,EAAAsE,EACAG,GAAAF,EAAAb,GAAA,EACAgB,GAAAF,EAAAb,GAAA,EACAgB,EAAAjB,EAAAa,EACAK,EAAAjB,EAAAa,EACAK,EAAAF,IAAAC,IACAxC,EAAA2B,EAAAC,EACAc,EAAAP,EAAAZ,EAAAD,EAAAc,EACAzK,GAAA6K,EAAA,QAAAtK,KAAA8C,KAAA9C,KAAAE,IAAA,EAAA4H,IAAAyC,EAAAC,MACAC,GAAAD,EAAAF,EAAAD,EAAA5K,GAAA8K,EACAG,IAAAF,EAAAH,EAAAC,EAAA7K,GAAA8K,EACAI,GAAAH,EAAAF,EAAAD,EAAA5K,GAAA8K,EACAK,IAAAJ,EAAAH,EAAAC,EAAA7K,GAAA8K,EACAM,EAAAJ,EAAAN,EACAW,EAAAJ,EAAAN,EACAW,EAAAJ,EAAAR,EACAa,EAAAJ,EAAAR,CAMA,OAFAS,KAAAC,IAAAC,IAAAC,MAAAP,EAAAE,EAAAD,EAAAE,IAGAK,GAAAR,EACAS,GAAAR,EACAd,KAAAG,EACAF,KAAAG,EACAC,IAAAQ,GAAAhB,EAAA3B,EAAA,GACAoC,IAAAQ,GAAAjB,EAAA3B,EAAA,IA8LA,QAAAqD,IAAAC,GACAxO,KAAAyO,SAAAD,EA+BA,QAAA3R,IAAA6R,GACA,MAAAA,GAAA,GAGA,QAAAnO,IAAAmO,GACA,MAAAA,GAAA,GAmPA,QAAAC,IAAAC,GACA5O,KAAA6O,OAAAD,EAqBA,QAAAE,IAAAF,GAEA,QAAAG,GAAAP,GACA,UAAAG,IAAAC,EAAAJ,IAKA,MAFAO,GAAAF,OAAAD,EAEAG,EAGA,QAAAC,IAAAC,GACA,GAAAnE,GAAAmE,EAAAL,KASA,OAPAK,GAAAC,MAAAD,EAAApS,QAAAoS,GAAApS,EACAoS,EAAAE,OAAAF,EAAA1O,QAAA0O,GAAA1O,EAEA0O,EAAAL,MAAA,SAAAhH,GACA,MAAA0D,WAAArQ,OAAA6P,EAAAgE,GAAAlH,IAAAkD,IAAA+D,QAGAI,EAwLA,QAAAG,IAAAC,EAAAxS,EAAA0D,GACA8O,EAAAZ,SAAAa,eACA,EAAAD,EAAA7H,IAAA6H,EAAA3H,KAAA,GACA,EAAA2H,EAAA5H,IAAA4H,EAAA1H,KAAA,GACA0H,EAAA7H,IAAA,EAAA6H,EAAA3H,KAAA,GACA2H,EAAA5H,IAAA,EAAA4H,EAAA1H,KAAA,GACA0H,EAAA7H,IAAA,EAAA6H,EAAA3H,IAAA7K,GAAA,GACAwS,EAAA5H,IAAA,EAAA4H,EAAA1H,IAAApH,GAAA,GAIA,QAAAgP,IAAAf,GACAxO,KAAAyO,SAAAD,EAwCA,QAAAgB,IAAAhB,GACAxO,KAAAyO,SAAAD,EAiDA,QAAAiB,IAAAjB,GACAxO,KAAAyO,SAAAD,EAqCA,QAAAkB,IAAAlB,EAAAmB,GACA3P,KAAA4P,OAAA,GAAAL,IAAAf,GACAxO,KAAA6P,MAAAF,EAqDA,QAAAG,IAAAT,EAAAxS,EAAA0D,GACA8O,EAAAZ,SAAAa,cACAD,EAAA3H,IAAA2H,EAAAU,IAAAV,EAAAW,IAAAX,EAAA7H,KACA6H,EAAA1H,IAAA0H,EAAAU,IAAAV,EAAAY,IAAAZ,EAAA5H,KACA4H,EAAAW,IAAAX,EAAAU,IAAAV,EAAA3H,IAAA7K,GACAwS,EAAAY,IAAAZ,EAAAU,IAAAV,EAAA1H,IAAApH,GACA8O,EAAAW,IACAX,EAAAY,KAIA,QAAAC,IAAA1B,EAAA2B,GACAnQ,KAAAyO,SAAAD,EACAxO,KAAA+P,IAAA,EAAAI,GAAA,EAiDA,QAAAC,IAAA5B,EAAA2B,GACAnQ,KAAAyO,SAAAD,EACAxO,KAAA+P,IAAA,EAAAI,GAAA,EAyDA,QAAAE,IAAA7B,EAAA2B,GACAnQ,KAAAyO,SAAAD,EACAxO,KAAA+P,IAAA,EAAAI,GAAA,EA8CA,QAAAG,IAAAjB,EAAAxS,EAAA0D,GACA,GAAAsI,GAAAwG,EAAA3H,IACAoB,EAAAuG,EAAA1H,IACAyE,EAAAiD,EAAAW,IACA3D,EAAAgD,EAAAY,GAEA,IAAAZ,EAAAkB,OAAAC,GAAA,CACA,GAAA5O,GAAA,EAAAyN,EAAAoB,QAAA,EAAApB,EAAAkB,OAAAlB,EAAAqB,OAAArB,EAAAsB,QACAlM,EAAA,EAAA4K,EAAAkB,QAAAlB,EAAAkB,OAAAlB,EAAAqB,OACA7H,MAAAjH,EAAAyN,EAAA7H,IAAA6H,EAAAsB,QAAAtB,EAAAW,IAAAX,EAAAoB,SAAAhM,EACAqE,KAAAlH,EAAAyN,EAAA5H,IAAA4H,EAAAsB,QAAAtB,EAAAY,IAAAZ,EAAAoB,SAAAhM,EAGA,GAAA4K,EAAAuB,OAAAJ,GAAA,CACA,GAAA3O,GAAA,EAAAwN,EAAAwB,QAAA,EAAAxB,EAAAuB,OAAAvB,EAAAqB,OAAArB,EAAAsB,QACAG,EAAA,EAAAzB,EAAAuB,QAAAvB,EAAAuB,OAAAvB,EAAAqB,OACAtE,MAAAvK,EAAAwN,EAAA3H,IAAA2H,EAAAwB,QAAAhU,EAAAwS,EAAAsB,SAAAG,EACAzE,KAAAxK,EAAAwN,EAAA1H,IAAA0H,EAAAwB,QAAAtQ,EAAA8O,EAAAsB,SAAAG,EAGAzB,EAAAZ,SAAAa,cAAAzG,EAAAC,EAAAsD,EAAAC,EAAAgD,EAAAW,IAAAX,EAAAY,KAGA,QAAAc,IAAAvC,EAAAwC,GACAhR,KAAAyO,SAAAD,EACAxO,KAAAiR,OAAAD,EA6DA,QAAAE,IAAA1C,EAAAwC,GACAhR,KAAAyO,SAAAD,EACAxO,KAAAiR,OAAAD,EAqEA,QAAAG,IAAA3C,EAAAwC,GACAhR,KAAAyO,SAAAD,EACAxO,KAAAiR,OAAAD,EA0DA,QAAAI,IAAA5C,GACAxO,KAAAyO,SAAAD,EAuBA,QAAA6C,IAAAxU,GACA,MAAAA,GAAA,OAOA,QAAAyU,IAAAjC,EAAAjD,EAAAC,GACA,GAAAkF,GAAAlC,EAAA3H,IAAA2H,EAAA7H,IACAgK,EAAApF,EAAAiD,EAAA3H,IACA+J,GAAApC,EAAA1H,IAAA0H,EAAA5H,MAAA8J,GAAAC,EAAA,OACAE,GAAArF,EAAAgD,EAAA1H,MAAA6J,GAAAD,EAAA,OACA7C,GAAA+C,EAAAD,EAAAE,EAAAH,MAAAC,EACA,QAAAH,GAAAI,GAAAJ,GAAAK,IAAAtO,KAAAuO,IAAAvO,KAAAC,IAAAoO,GAAArO,KAAAC,IAAAqO,GAAA,GAAAtO,KAAAC,IAAAqL,KAAA,EAIA,QAAAkD,IAAAvC,EAAArK,GACA,GAAAlK,GAAAuU,EAAA3H,IAAA2H,EAAA7H,GACA,OAAA1M,IAAA,GAAAuU,EAAA1H,IAAA0H,EAAA5H,KAAA3M,EAAAkK,GAAA,EAAAA,EAMA,QAAA6M,IAAAxC,EAAAyC,EAAAC,GACA,GAAApJ,GAAA0G,EAAA7H,IACAoB,EAAAyG,EAAA5H,IACAoB,EAAAwG,EAAA3H,IACAoB,EAAAuG,EAAA1H,IACA8F,GAAA5E,EAAAF,GAAA,CACA0G,GAAAZ,SAAAa,cAAA3G,EAAA8E,EAAA7E,EAAA6E,EAAAqE,EAAAjJ,EAAA4E,EAAA3E,EAAA2E,EAAAsE,EAAAlJ,EAAAC,GAGA,QAAAkJ,IAAAxD,GACAxO,KAAAyO,SAAAD,EA0CA,QAAAyD,IAAAzD,GACAxO,KAAAyO,SAAA,GAAAyD,IAAA1D,GAOA,QAAA0D,IAAA1D,GACAxO,KAAAyO,SAAAD,EAUA,QAAA2D,IAAA3D,GACA,UAAAwD,IAAAxD,GAGA,QAAA4D,IAAA5D,GACA,UAAAyD,IAAAzD,GAGA,QAAA6D,IAAA7D,GACAxO,KAAAyO,SAAAD,EA2CA,QAAA8D,IAAAzV,GACA,GAAA9B,GAEA+V,EADArM,EAAA5H,EAAA5B,OAAA,EAEA2G,EAAA,GAAA0C,OAAAG,GACA5C,EAAA,GAAAyC,OAAAG,GACAyG,EAAA,GAAA5G,OAAAG,EAEA,KADA7C,EAAA,KAAAC,EAAA,KAAAqJ,EAAA,GAAArO,EAAA,KAAAA,EAAA,GACA9B,EAAA,EAAaA,EAAA0J,EAAA,IAAW1J,EAAA6G,EAAA7G,GAAA,EAAA8G,EAAA9G,GAAA,EAAAmQ,EAAAnQ,GAAA,EAAA8B,EAAA9B,GAAA,EAAA8B,EAAA9B,EAAA,EAExB,KADA6G,EAAA6C,EAAA,KAAA5C,EAAA4C,EAAA,KAAAyG,EAAAzG,EAAA,KAAA5H,EAAA4H,EAAA,GAAA5H,EAAA4H,GACA1J,EAAA,EAAaA,EAAA0J,IAAO1J,EAAA+V,EAAAlP,EAAA7G,GAAA8G,EAAA9G,EAAA,GAAA8G,EAAA9G,IAAA+V,EAAA5F,EAAAnQ,IAAA+V,EAAA5F,EAAAnQ,EAAA,EAEpB,KADA6G,EAAA6C,EAAA,GAAAyG,EAAAzG,EAAA,GAAA5C,EAAA4C,EAAA,GACA1J,EAAA0J,EAAA,EAAiB1J,GAAA,IAAQA,EAAA6G,EAAA7G,IAAAmQ,EAAAnQ,GAAA6G,EAAA7G,EAAA,IAAA8G,EAAA9G,EAEzB,KADA8G,EAAA4C,EAAA,IAAA5H,EAAA4H,GAAA7C,EAAA6C,EAAA,MACA1J,EAAA,EAAaA,EAAA0J,EAAA,IAAW1J,EAAA8G,EAAA9G,GAAA,EAAA8B,EAAA9B,EAAA,GAAA6G,EAAA7G,EAAA,EACxB,QAAA6G,EAAAC,GAOA,QAAA0Q,IAAA/D,EAAAxJ,GACAhF,KAAAyO,SAAAD,EACAxO,KAAAwS,GAAAxN,EA4CA,QAAAyN,IAAAjE,GACA,UAAA+D,IAAA/D,EAAA,GAGA,QAAAkE,IAAAlE,GACA,UAAA+D,IAAA/D,EAAA,GAqBA,QAAAmE,IAAA9P,EAAA3I,GACA,MAAA2I,GAAA3I,GAkGA,QAAA0Y,IAAAC,GAEA,IADA,GAAAC,GAAAC,EAAA,EAAAhY,GAAA,EAAA0J,EAAAoO,EAAA5X,SACAF,EAAA0J,IAAAqO,GAAAD,EAAA9X,GAAA,MAAAgY,GAAAD,EACA,OAAAC,GAyCA,QAAAC,IAAAhL,EAAAiL,GACA,GAAA7Y,GAAAD,OAAA+Y,OAAAlL,EAAA5N,UACA,QAAAF,KAAA+Y,GAAA7Y,EAAAF,GAAA+Y,EAAA/Y,EACA,OAAAE,GAGA,QAAA+Y,OA8KA,QAAAC,IAAAC,GACA,GAAAvC,EAEA,OADAuC,MAAA,IAAAC,OAAAC,eACAzC,EAAA0C,GAAAC,KAAAJ,KAAAvC,EAAA1S,SAAA0S,EAAA,UAAA4C,IAAA5C,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,KACAA,EAAA6C,GAAAF,KAAAJ,IAAAO,GAAAxV,SAAA0S,EAAA,SACAA,EAAA+C,GAAAJ,KAAAJ,IAAA,GAAAK,IAAA5C,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAgD,GAAAL,KAAAJ,IAAA,GAAAK,IAAA,IAAA5C,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAiD,GAAAN,KAAAJ,IAAAW,GAAAlD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAAmD,GAAAR,KAAAJ,IAAAW,GAAA,IAAAlD,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAAoD,GAAAT,KAAAJ,IAAAc,GAAArD,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAAsD,GAAAX,KAAAJ,IAAAc,GAAArD,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACAuD,GAAAha,eAAAgZ,GAAAO,GAAAS,GAAAhB,IACA,gBAAAA,EAAA,GAAAK,IAAA9J,YAAA,GACA,KAGA,QAAAgK,IAAAnP,GACA,UAAAiP,IAAAjP,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,QAAAuP,IAAA9I,EAAAoJ,EAAAzS,EAAAD,GAEA,MADAA,IAAA,IAAAsJ,EAAAoJ,EAAAzS,EAAA+H,KACA,GAAA8J,IAAAxI,EAAAoJ,EAAAzS,EAAAD,GAGA,QAAA2S,IAAA/P,GAEA,MADAA,aAAA2O,MAAA3O,EAAA4O,GAAA5O,IACAA,GACAA,IAAAgQ,MACA,GAAAd,IAAAlP,EAAA0G,EAAA1G,EAAA8P,EAAA9P,EAAA3C,EAAA2C,EAAAiQ,UAFA,GAAAf,IAKA,QAAAc,IAAAtJ,EAAAoJ,EAAAzS,EAAA4S,GACA,WAAAnJ,UAAArQ,OAAAsZ,GAAArJ,GAAA,GAAAwI,IAAAxI,EAAAoJ,EAAAzS,EAAA,MAAA4S,EAAA,EAAAA,GAGA,QAAAf,IAAAxI,EAAAoJ,EAAAzS,EAAA4S,GACAzU,KAAAkL,KACAlL,KAAAsU,KACAtU,KAAA6B,KACA7B,KAAAyU,WA+BA,QAAAN,IAAArZ,EAAAiY,EAAA9D,EAAArN,GAIA,MAHAA,IAAA,EAAA9G,EAAAiY,EAAA9D,EAAArF,IACAqF,GAAA,GAAAA,GAAA,EAAAnU,EAAAiY,EAAAnJ,IACAmJ,GAAA,IAAAjY,EAAA8O,KACA,GAAA8K,IAAA5Z,EAAAiY,EAAA9D,EAAArN,GAGA,QAAA+S,IAAAnQ,GACA,GAAAA,YAAAkQ,IAAA,UAAAA,IAAAlQ,EAAA1J,EAAA0J,EAAAuO,EAAAvO,EAAAyK,EAAAzK,EAAAiQ,QAEA,IADAjQ,YAAA2O,MAAA3O,EAAA4O,GAAA5O,KACAA,EAAA,UAAAkQ,GACA,IAAAlQ,YAAAkQ,IAAA,MAAAlQ,EACAA,KAAAgQ,KACA,IAAAtJ,GAAA1G,EAAA0G,EAAA,IACAoJ,EAAA9P,EAAA8P,EAAA,IACAzS,EAAA2C,EAAA3C,EAAA,IACA8P,EAAAvO,KAAAuO,IAAAzG,EAAAoJ,EAAAzS,GACAyB,EAAAF,KAAAE,IAAA4H,EAAAoJ,EAAAzS,GACA/G,EAAA8O,IACAmJ,EAAAzP,EAAAqO,EACA1C,GAAA3L,EAAAqO,GAAA,CAUA,OATAoB,IACAjY,EAAAoQ,IAAA5H,GAAAgR,EAAAzS,GAAAkR,EAAA,GAAAuB,EAAAzS,GACAyS,IAAAhR,GAAAzB,EAAAqJ,GAAA6H,EAAA,GACA7H,EAAAoJ,GAAAvB,EAAA,EACAA,GAAA9D,EAAA,GAAA3L,EAAAqO,EAAA,EAAArO,EAAAqO,EACA7W,GAAA,IAEAiY,EAAA9D,EAAA,GAAAA,EAAA,IAAAnU,EAEA,GAAA4Z,IAAA5Z,EAAAiY,EAAA9D,EAAAzK,EAAAiQ,SAGA,QAAAG,IAAA9Z,EAAAiY,EAAA9D,EAAAwF,GACA,WAAAnJ,UAAArQ,OAAA0Z,GAAA7Z,GAAA,GAAA4Z,IAAA5Z,EAAAiY,EAAA9D,EAAA,MAAAwF,EAAA,EAAAA,GAGA,QAAAC,IAAA5Z,EAAAiY,EAAA9D,EAAAwF,GACAzU,KAAAlF,KACAkF,KAAA+S,KACA/S,KAAAiP,KACAjP,KAAAyU,WAiCA,QAAAI,IAAA/Z,EAAAga,EAAAC,GACA,MAGA,MAHAja,EAAA,GAAAga,GAAAC,EAAAD,GAAAha,EAAA,GACAA,EAAA,IAAAia,EACAja,EAAA,IAAAga,GAAAC,EAAAD,IAAA,IAAAha,GAAA,GACAga,GAeA,QAAAE,IAAAxQ,GACA,GAAAA,YAAAyQ,IAAA,UAAAA,IAAAzQ,EAAAyK,EAAAzK,EAAA5C,EAAA4C,EAAA3C,EAAA2C,EAAAiQ,QACA,IAAAjQ,YAAA0Q,IAAA,CACA,GAAApa,GAAA0J,EAAA1J,EAAAqa,EACA,WAAAF,IAAAzQ,EAAAyK,EAAA7L,KAAAoC,IAAA1K,GAAA0J,EAAAsG,EAAA1H,KAAAuC,IAAA7K,GAAA0J,EAAAsG,EAAAtG,EAAAiQ,SAEAjQ,YAAAkP,MAAAlP,EAAA+P,GAAA/P,GACA,IAAA3C,GAAAuT,GAAA5Q,EAAA0G,GACAtJ,EAAAwT,GAAA5Q,EAAA8P,GACArF,EAAAmG,GAAA5Q,EAAA3C,GACAhF,EAAAwY,IAAA,SAAAxT,EAAA,SAAAD,EAAA,SAAAqN,GAAAqG,IACA/U,EAAA8U,IAAA,SAAAxT,EAAA,SAAAD,EAAA,QAAAqN,GAAAsG,IACAC,EAAAH,IAAA,SAAAxT,EAAA,QAAAD,EAAA,SAAAqN,GAAAwG,GACA,WAAAR,IAAA,IAAA1U,EAAA,QAAA1D,EAAA0D,GAAA,KAAAA,EAAAiV,GAAAhR,EAAAiQ,SAGA,QAAAiB,IAAAzG,EAAArN,EAAAC,EAAA4S,GACA,WAAAnJ,UAAArQ,OAAA+Z,GAAA/F,GAAA,GAAAgG,IAAAhG,EAAArN,EAAAC,EAAA,MAAA4S,EAAA,EAAAA,GAGA,QAAAQ,IAAAhG,EAAArN,EAAAC,EAAA4S,GACAzU,KAAAiP,KACAjP,KAAA4B,KACA5B,KAAA6B,KACA7B,KAAAyU,WA0BA,QAAAY,IAAArQ,GACA,MAAAA,GAAA2Q,GAAAvS,KAAAI,IAAAwB,EAAA,KAAAA,EAAA4Q,GAAA9D,GAGA,QAAA+D,IAAA7Q,GACA,MAAAA,GAAA+M,GAAA/M,MAAA4Q,IAAA5Q,EAAA8M,IAGA,QAAAgE,IAAAjZ,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAuG,KAAAI,IAAA3G,EAAA,aAGA,QAAAuY,IAAAvY,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAuG,KAAAI,KAAA3G,EAAA,iBAGA,QAAAkZ,IAAAvR,GACA,GAAAA,YAAA0Q,IAAA,UAAAA,IAAA1Q,EAAA1J,EAAA0J,EAAAsG,EAAAtG,EAAAyK,EAAAzK,EAAAiQ,QACAjQ,aAAAyQ,MAAAzQ,EAAAwQ,GAAAxQ,GACA,IAAA1J,GAAAsI,KAAA4S,MAAAxR,EAAA3C,EAAA2C,EAAA5C,GAAAqU,EACA,WAAAf,IAAApa,EAAA,EAAAA,EAAA,IAAAA,EAAAsI,KAAA8C,KAAA1B,EAAA5C,EAAA4C,EAAA5C,EAAA4C,EAAA3C,EAAA2C,EAAA3C,GAAA2C,EAAAyK,EAAAzK,EAAAiQ,SAGA,QAAAyB,IAAApb,EAAAgQ,EAAAmE,EAAAwF,GACA,WAAAnJ,UAAArQ,OAAA8a,GAAAjb,GAAA,GAAAoa,IAAApa,EAAAgQ,EAAAmE,EAAA,MAAAwF,EAAA,EAAAA,GAGA,QAAAS,IAAApa,EAAAgQ,EAAAmE,EAAAwF,GACAzU,KAAAlF,KACAkF,KAAA8K,KACA9K,KAAAiP,KACAjP,KAAAyU,WAwBA,QAAA0B,IAAA3R,GACA,GAAAA,YAAA4R,IAAA,UAAAA,IAAA5R,EAAA1J,EAAA0J,EAAAuO,EAAAvO,EAAAyK,EAAAzK,EAAAiQ,QACAjQ,aAAAkP,MAAAlP,EAAA+P,GAAA/P,GACA,IAAA0G,GAAA1G,EAAA0G,EAAA,IACAoJ,EAAA9P,EAAA8P,EAAA,IACAzS,EAAA2C,EAAA3C,EAAA,IACAoN,GAAAoH,GAAAxU,EAAAyU,GAAApL,EAAAqL,GAAAjC,IAAA+B,GAAAC,GAAAC,IACAC,EAAA3U,EAAAoN,EACAwH,GAAAC,IAAApC,EAAArF,GAAA0H,GAAAH,GAAA5I,GACAmF,EAAA3P,KAAA8C,KAAAuQ,IAAAD,MAAAE,GAAAzH,GAAA,EAAAA,IACAnU,EAAAiY,EAAA3P,KAAA4S,MAAAS,EAAAD,GAAAP,GAAA,IAAArM,GACA,WAAAwM,IAAAtb,EAAA,EAAAA,EAAA,IAAAA,EAAAiY,EAAA9D,EAAAzK,EAAAiQ,SAGA,QAAAmC,IAAA9b,EAAAiY,EAAA9D,EAAAwF,GACA,WAAAnJ,UAAArQ,OAAAkb,GAAArb,GAAA,GAAAsb,IAAAtb,EAAAiY,EAAA9D,EAAA,MAAAwF,EAAA,EAAAA,GAGA,QAAA2B,IAAAtb,EAAAiY,EAAA9D,EAAAwF,GACAzU,KAAAlF,KACAkF,KAAA+S,KACA/S,KAAAiP,KACAjP,KAAAyU,WA2BA,QAAAoC,IAAA9E,EAAA+E,EAAAC,EAAAC,EAAAC,GACA,GAAArB,GAAA7D,IAAA4D,EAAAC,EAAA7D,CACA,aAAAA,EAAA,EAAA6D,EAAAD,GAAAmB,GACA,IAAAlB,EAAA,EAAAD,GAAAoB,GACA,IAAAhF,EAAA,EAAA6D,EAAA,EAAAD,GAAAqB,EACArB,EAAAsB,GAAA,EAiCA,QAAAC,IAAAtV,EAAAiB,GACA,gBAAAmC,GACA,MAAApD,GAAAoD,EAAAnC,GAIA,QAAAsU,IAAAvV,EAAAC,EAAAtB,GACA,MAAAqB,GAAAwB,KAAAI,IAAA5B,EAAArB,GAAAsB,EAAAuB,KAAAI,IAAA3B,EAAAtB,GAAAqB,EAAArB,EAAA,EAAAA,EAAA,SAAAyE,GACA,MAAA5B,MAAAI,IAAA5B,EAAAoD,EAAAnD,EAAAtB,IAIA,QAAA6W,IAAAxV,EAAAC,GACA,GAAAgB,GAAAhB,EAAAD,CACA,OAAAiB,GAAAqU,GAAAtV,EAAAiB,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAO,KAAAiU,MAAAxU,EAAA,KAAAA,GAAAyU,GAAAvP,MAAAnG,GAAAC,EAAAD,GAGA,QAAA2V,IAAAhX,GACA,YAAAA,MAAAiX,GAAA,SAAA5V,EAAAC,GACA,MAAAA,GAAAD,EAAAuV,GAAAvV,EAAAC,EAAAtB,GAAA+W,GAAAvP,MAAAnG,GAAAC,EAAAD,IAIA,QAAA4V,IAAA5V,EAAAC,GACA,GAAAgB,GAAAhB,EAAAD,CACA,OAAAiB,GAAAqU,GAAAtV,EAAAiB,GAAAyU,GAAAvP,MAAAnG,GAAAC,EAAAD,GAyBA,QAAA6V,IAAAC,GACA,gBAAAC,GACA,GAIA5c,GAAA6c,EAJAnT,EAAAkT,EAAA1c,OACAiQ,EAAA,GAAA5G,OAAAG,GACA6P,EAAA,GAAAhQ,OAAAG,GACA5C,EAAA,GAAAyC,OAAAG,EAEA,KAAA1J,EAAA,EAAeA,EAAA0J,IAAO1J,EACtB6c,EAAApD,GAAAmD,EAAA5c,IACAmQ,EAAAnQ,GAAA6c,EAAA1M,GAAA,EACAoJ,EAAAvZ,GAAA6c,EAAAtD,GAAA,EACAzS,EAAA9G,GAAA6c,EAAA/V,GAAA,CAMA,OAJAqJ,GAAAwM,EAAAxM,GACAoJ,EAAAoD,EAAApD,GACAzS,EAAA6V,EAAA7V,GACA+V,EAAAnD,QAAA,EACA,SAAAzP,GAIA,MAHA4S,GAAA1M,IAAAlG,GACA4S,EAAAtD,IAAAtP,GACA4S,EAAA/V,IAAAmD,GACA4S,EAAA,KA8DA,QAAAC,IAAAhW,GACA,kBACA,MAAAA,IAIA,QAAAiW,IAAAjW,GACA,gBAAAmD,GACA,MAAAnD,GAAAmD,GAAA,IAsGA,QAAA+S,IAAAva,GACA,eAAAA,EAAAwa,IACAC,QAAA/Z,SAAAga,cAAA,OAAAC,GAAAja,SAAAka,gBAAAC,GAAAna,SAAAoa,aACAL,GAAAM,MAAAC,UAAAhb,EACAA,EAAA6a,GAAAI,iBAAAN,GAAAO,YAAAT,IAAA,MAAAU,iBAAA,aACAR,GAAAS,YAAAX,IACAza,IAAA8J,MAAA,MAAAuR,MAAA,KACAC,IAAAtb,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGA,QAAAub,IAAAvb,GACA,aAAAA,EAAAwa,IACAgB,QAAA9a,SAAA+a,gBAAA,mCACAD,GAAAE,aAAA,YAAA1b,IACAA,EAAAwb,GAAAR,UAAAW,QAAAC,gBACA5b,IAAA6b,OACAP,GAAAtb,EAAAoE,EAAApE,EAAAqE,EAAArE,EAAAsN,EAAAtN,EAAAqF,EAAArF,EAAAoN,EAAApN,EAAAoF,IAFAoV,IAKA,QAAAsB,IAAAC,EAAAC,EAAAC,EAAAC,GAEA,QAAA7a,GAAAkU,GACA,MAAAA,GAAA9X,OAAA8X,EAAAlU,MAAA,OAGA,QAAA8a,GAAAC,EAAAC,EAAAC,EAAAC,EAAAhH,EAAApI,GACA,GAAAiP,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAhf,GAAAgY,EAAAxQ,KAAA,kBAAAiX,EAAA,KAAAC,EACA9O,GAAApI,MAAcxH,IAAA,EAAA8B,EAAAmd,GAAAJ,EAAAE,KAA0C/e,IAAA,EAAA8B,EAAAmd,GAAAH,EAAAE,UACnDD,GAAAC,IACLhH,EAAAxQ,KAAA,aAAAuX,EAAAN,EAAAO,EAAAN,GAIA,QAAAQ,GAAArY,EAAAC,EAAAkR,EAAApI,GACA/I,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAgCA,EAAAD,EAAA,MAAAA,GAAA,KAChC+I,EAAApI,MAAcxH,EAAAgY,EAAAxQ,KAAA1D,EAAAkU,GAAA,eAAA2G,GAAA,EAAA7c,EAAAmd,GAAApY,EAAAC,MACTA,GACLkR,EAAAxQ,KAAA1D,EAAAkU,GAAA,UAAAlR,EAAA6X,GAIA,QAAAQ,GAAAtY,EAAAC,EAAAkR,EAAApI,GACA/I,IAAAC,EACA8I,EAAApI,MAAcxH,EAAAgY,EAAAxQ,KAAA1D,EAAAkU,GAAA,cAAA2G,GAAA,EAAA7c,EAAAmd,GAAApY,EAAAC,KACTA,GACLkR,EAAAxQ,KAAA1D,EAAAkU,GAAA,SAAAlR,EAAA6X,GAIA,QAAAS,GAAAP,EAAAC,EAAAC,EAAAC,EAAAhH,EAAApI,GACA,GAAAiP,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAhf,GAAAgY,EAAAxQ,KAAA1D,EAAAkU,GAAA,2BACApI,GAAApI,MAAcxH,IAAA,EAAA8B,EAAAmd,GAAAJ,EAAAE,KAA0C/e,IAAA,EAAA8B,EAAAmd,GAAAH,EAAAE,SACnD,KAAAD,GAAA,IAAAC,GACLhH,EAAAxQ,KAAA1D,EAAAkU,GAAA,SAAA+G,EAAA,IAAAC,EAAA,KAIA,gBAAAnY,EAAAC,GACA,GAAAkR,MACApI,IAOA,OANA/I,GAAA2X,EAAA3X,GAAAC,EAAA0X,EAAA1X,GACA8X,EAAA/X,EAAAwY,WAAAxY,EAAAyY,WAAAxY,EAAAuY,WAAAvY,EAAAwY,WAAAtH,EAAApI,GACAsP,EAAArY,EAAAqY,OAAApY,EAAAoY,OAAAlH,EAAApI,GACAuP,EAAAtY,EAAAsY,MAAArY,EAAAqY,MAAAnH,EAAApI,GACAwP,EAAAvY,EAAA0Y,OAAA1Y,EAAA2Y,OAAA1Y,EAAAyY,OAAAzY,EAAA0Y,OAAAxH,EAAApI,GACA/I,EAAAC,EAAA,KACA,SAAAmD,GAEA,IADA,GAAAR,GAAAzJ,GAAA,EAAA0J,EAAAkG,EAAA1P,SACAF,EAAA0J,GAAAsO,GAAAvO,EAAAmG,EAAA5P,OAAAyJ,EAAA3H,EAAAmI,EACA,OAAA+N,GAAAyH,KAAA,MAaA,QAAAC,IAAA5d,GACA,QAAAA,EAAAuG,KAAAsX,IAAA7d,IAAA,EAAAA,GAAA,EAGA,QAAA8d,IAAA9d,GACA,QAAAA,EAAAuG,KAAAsX,IAAA7d,IAAA,EAAAA,GAAA,EAGA,QAAA+d,IAAA/d,GACA,QAAAA,EAAAuG,KAAAsX,IAAA,EAAA7d,IAAA,IAAAA,EAAA,GAmDA,QAAAge,IAAAC,GACA,gBAAA9X,EAAA+H,GACA,GAAAjQ,GAAAggB,GAAA9X,EAAA4R,GAAA5R,IAAAlI,GAAAiQ,EAAA6J,GAAA7J,IAAAjQ,GACAiY,EAAAyE,GAAAxU,EAAA+P,EAAAhI,EAAAgI,GACA9D,EAAAuI,GAAAxU,EAAAiM,EAAAlE,EAAAkE,GACAwF,EAAA+C,GAAAxU,EAAAyR,QAAA1J,EAAA0J,QACA,iBAAAzP,GAKA,MAJAhC,GAAAlI,IAAAkK,GACAhC,EAAA+P,IAAA/N,GACAhC,EAAAiM,IAAAjK,GACAhC,EAAAyR,UAAAzP,GACAhC,EAAA,KAQA,QAAA+X,IAAA/X,EAAA+H,GACA,GAAAkE,GAAAuI,IAAAxU,EAAA0S,GAAA1S,IAAAiM,GAAAlE,EAAA2K,GAAA3K,IAAAkE,GACArN,EAAA4V,GAAAxU,EAAApB,EAAAmJ,EAAAnJ,GACAC,EAAA2V,GAAAxU,EAAAnB,EAAAkJ,EAAAlJ,GACA4S,EAAA+C,GAAAxU,EAAAyR,QAAA1J,EAAA0J,QACA,iBAAAzP,GAKA,MAJAhC,GAAAiM,IAAAjK,GACAhC,EAAApB,IAAAoD,GACAhC,EAAAnB,IAAAmD,GACAhC,EAAAyR,UAAAzP,GACAhC,EAAA,IAIA,QAAAgY,IAAAF,GACA,gBAAA9X,EAAA+H,GACA,GAAAjQ,GAAAggB,GAAA9X,EAAAkT,GAAAlT,IAAAlI,GAAAiQ,EAAAmL,GAAAnL,IAAAjQ,GACAgQ,EAAA0M,GAAAxU,EAAA8H,EAAAC,EAAAD,GACAmE,EAAAuI,GAAAxU,EAAAiM,EAAAlE,EAAAkE,GACAwF,EAAA+C,GAAAxU,EAAAyR,QAAA1J,EAAA0J,QACA,iBAAAzP,GAKA,MAJAhC,GAAAlI,IAAAkK,GACAhC,EAAA8H,IAAA9F,GACAhC,EAAAiM,IAAAjK,GACAhC,EAAAyR,UAAAzP,GACAhC,EAAA,KAQA,QAAAiY,IAAAH,GACA,eAAAI,GAAA3a,GAGA,QAAA4a,GAAAnY,EAAA+H,GACA,GAAAjQ,GAAAggB,GAAA9X,EAAA4T,GAAA5T,IAAAlI,GAAAiQ,EAAA6L,GAAA7L,IAAAjQ,GACAiY,EAAAyE,GAAAxU,EAAA+P,EAAAhI,EAAAgI,GACA9D,EAAAuI,GAAAxU,EAAAiM,EAAAlE,EAAAkE,GACAwF,EAAA+C,GAAAxU,EAAAyR,QAAA1J,EAAA0J,QACA,iBAAAzP,GAKA,MAJAhC,GAAAlI,IAAAkK,GACAhC,EAAA+P,IAAA/N,GACAhC,EAAAiM,IAAA7L,KAAAI,IAAAwB,EAAAzE,IACAyC,EAAAyR,UAAAzP,GACAhC,EAAA,IAMA,MAlBAzC,MAgBA4a,EAAA5D,MAAA2D,EAEAC,GACG,GAcH,QAAAC,MACA,OAA8CpW,GAA9CjK,EAAA,EAAA0J,EAAA6G,UAAArQ,OAAA2M,KAAkD7M,EAAA0J,IAAO1J,EAAA,CACzD,KAAAiK,EAAAsG,UAAAvQ,GAAA,KAAAiK,IAAA4C,GAAA,SAAAoC,OAAA,iBAAAhF,EACA4C,GAAA5C,MAEA,UAAAqW,IAAAzT,GAGA,QAAAyT,IAAAzT,GACA5H,KAAA4H,IAGA,QAAA0T,IAAAC,EAAAC,GACA,MAAAD,GAAAjI,OAAAuF,MAAA,SAAA1U,IAAA,SAAAa,GACA,GAAAyW,GAAA,GAAA1gB,EAAAiK,EAAA0W,QAAA,IAEA,IADA3gB,GAAA,IAAA0gB,EAAAzW,EAAAsC,MAAAvM,EAAA,GAAAiK,IAAAsC,MAAA,EAAAvM,IACAiK,IAAAwW,EAAAnhB,eAAA2K,GAAA,SAAAgF,OAAA,iBAAAhF,EACA,QAAY2W,KAAA3W,EAAAyW,UA6CZ,QAAAhb,IAAAkb,EAAAF,GACA,OAAA3Q,GAAA/P,EAAA,EAAA0J,EAAAkX,EAAA1gB,OAAqCF,EAAA0J,IAAO1J,EAC5C,IAAA+P,EAAA6Q,EAAA5gB,IAAA0gB,SACA,MAAA3Q,GAAAtN,MAKA,QAAAoe,IAAAD,EAAAF,EAAAI,GACA,OAAA9gB,GAAA,EAAA0J,EAAAkX,EAAA1gB,OAAkCF,EAAA0J,IAAO1J,EACzC,GAAA4gB,EAAA5gB,GAAA0gB,SAAA,CACAE,EAAA5gB,GAAA+gB,GAAAH,IAAArU,MAAA,EAAAvM,GAAAghB,OAAAJ,EAAArU,MAAAvM,EAAA,GACA,OAIA,MADA,OAAA8gB,GAAAF,EAAApZ,MAAmCkZ,OAAAje,MAAAqe,IACnCF,EAGA,QAAAK,IAAAC,GACA,UAAAC,UAAA,eAAoCD,EAAA9X,IAAA,SAAAsX,EAAA1gB,GACpC,MAAAohB,MAAAC,UAAAX,GAAA,OAAA1gB,EAAA,MACGyf,KAAA,UAGH,QAAA6B,IAAAJ,EAAArZ,GACA,GAAAsB,GAAA8X,GAAAC,EACA,iBAAAK,EAAAvhB,GACA,MAAA6H,GAAAsB,EAAAoY,GAAAvhB,EAAAkhB,IAKA,QAAAM,IAAArf,GACA,GAAAsf,GAAAriB,OAAA+Y,OAAA,MACA+I,IAUA,OARA/e,GAAAuf,QAAA,SAAAH,GACA,OAAAI,KAAAJ,GACAI,IAAAF,IACAP,EAAA1Z,KAAAia,EAAAE,QAKAT,EAmQA,QAAAU,IAAAd,GACA,gBAAAjY,EAAAgZ,GACAf,EAAA,MAAAjY,EAAAgZ,EAAA,OAIA,QAAAC,IAAAD,GACA,GAAAjB,GAAAiB,EAAAE,YACA,OAAAnB,IAAA,SAAAA,EACAiB,EAAAG,SACAH,EAAAI,aA0CA,QAAAC,IAAA1D,EAAA+C,GACA,gBAAAY,GACA,MAAA3D,GAAA2D,EAAAF,aAAAV,IAoBA,QAAAa,MACA,MAAAC,MAAAC,GAAAC,IAAAF,GAAAG,GAAAJ,MAAAK,IAGA,QAAAF,MACAF,GAAA,EAGA,QAAAK,MACAzd,KAAAkK,MACAlK,KAAA0d,MACA1d,KAAA2d,MAAA,KA0BA,QAAAC,IAAA/B,EAAAgC,EAAAC,GACA,GAAA9Y,GAAA,GAAAyY,GAEA,OADAzY,GAAA+Y,QAAAlC,EAAAgC,EAAAC,GACA9Y,EAGA,QAAAgZ,MACAb,OACAc,EAEA,KADA,GAAArT,GAAA5F,EAAAkZ,GACAlZ,IACA4F,EAAAwS,GAAApY,EAAA0Y,QAAA,GAAA1Y,EAAAkF,MAAA5P,KAAA,KAAAsQ,GACA5F,IAAA2Y,QAEAM,GAGA,QAAAE,MACAf,IAAAgB,GAAAb,GAAAJ,OAAAK,GACAS,GAAAI,GAAA,CACA,KACAL,KACG,QACHC,GAAA,EACAK,KACAlB,GAAA,GAIA,QAAAmB,MACA,GAAApB,GAAAI,GAAAJ,MAAAU,EAAAV,EAAAiB,EACAP,GAAAW,KAAAhB,IAAAK,EAAAO,GAAAjB,GAGA,QAAAmB,MAEA,IADA,GAAAxM,GAAA8D,EAAA7D,EAAAmM,GAAAJ,EAAA1U,IACA2I,GACAA,EAAA7H,OACA4T,EAAA/L,EAAA2L,QAAAI,EAAA/L,EAAA2L,OACA5L,EAAAC,MAAA4L,QAEA/H,EAAA7D,EAAA4L,MAAA5L,EAAA4L,MAAA,KACA5L,EAAAD,IAAA6L,MAAA/H,EAAAsI,GAAAtI,EAGA6I,IAAA3M,EACA4M,GAAAZ,GAGA,QAAAY,IAAAZ,GACA,IAAAG,GAAA,CACAI,QAAAM,aAAAN,IACA,IAAAR,GAAAC,EAAAV,EACAS,GAAA,IACAC,EAAA1U,MAAAiV,GAAAO,WAAAT,GAAAN,IACAgB,QAAAC,cAAAD,OAEAA,QAAAE,YAAAR,GAAAC,KACAP,GAAA,EAAAZ,GAAAc,MA6BA,QAAAa,IAAAC,EAAAC,EAAAhc,EAAAic,GAEA,QAAAN,GAAAO,GACA,MAAAH,GAAAG,EAAA,GAAAC,OAAAD,MAqDA,MAlDAP,GAAApb,MAAAob,EAEAA,EAAAS,KAAA,SAAAF,GACA,MAAAH,GAAAG,EAAA,GAAAC,MAAAD,EAAA,IAAAF,EAAAE,EAAA,GAAAH,EAAAG,MAGAP,EAAAxH,MAAA,SAAA+H,GACA,GAAAG,GAAAV,EAAAO,GACAI,EAAAX,EAAAS,KAAAF,EACA,OAAAA,GAAAG,EAAAC,EAAAJ,EAAAG,EAAAC,GAGAX,EAAAY,OAAA,SAAAL,EAAAM,GACA,MAAAR,GAAAE,EAAA,GAAAC,OAAAD,GAAA,MAAAM,EAAA,EAAAtc,KAAAK,MAAAic,IAAAN,GAGAP,EAAAc,MAAA,SAAA3c,EAAAC,EAAAyc,GACA,GAAAC,KAGA,IAFA3c,EAAA6b,EAAAS,KAAAtc,GACA0c,EAAA,MAAAA,EAAA,EAAAtc,KAAAK,MAAAic,KACA1c,EAAAC,GAAAyc,EAAA,SAAAC,EACA,GAAAA,GAAApd,KAAA,GAAA8c,OAAArc,UAAoCkc,EAAAlc,EAAA0c,GAAAT,EAAAjc,KAAAC,EACpC,OAAA0c,IAGAd,EAAAe,OAAA,SAAAvd,GACA,MAAA2c,IAAA,SAAAI,GACA,GAAAA,KAAA,KAAAH,EAAAG,IAAA/c,EAAA+c,MAAAS,QAAAT,EAAA,IACK,SAAAA,EAAAM,GACL,GAAAN,KAAA,OAAAM,GAAA,QAAAR,EAAAE,EAAA,IAAA/c,EAAA+c,SAIAlc,IACA2b,EAAA3b,MAAA,SAAAF,EAAA+H,GAGA,MAFA+U,IAAAD,SAAA7c,GAAA+c,GAAAF,SAAA9U,GACAkU,EAAAa,IAAAb,EAAAc,IACA3c,KAAAK,MAAAP,EAAA4c,GAAAC,MAGAlB,EAAAmB,MAAA,SAAAN,GAEA,MADAA,GAAAtc,KAAAK,MAAAic,GACAO,SAAAP,MAAA,EACAA,EAAA,EACAb,EAAAe,OAAAT,EACA,SAAAtc,GAA6B,MAAAsc,GAAAtc,GAAA6c,IAAA,GAC7B,SAAA7c,GAA6B,MAAAgc,GAAA3b,MAAA,EAAAL,GAAA6c,IAAA,IAH7Bb,EADA,OAQAA,EAmFA,QAAAqB,IAAAnlB,GACA,MAAAikB,IAAA,SAAAI,GACAA,EAAAe,QAAAf,EAAAgB,WAAAhB,EAAAiB,SAAA,EAAAtlB,GAAA,GACAqkB,EAAAkB,SAAA,UACG,SAAAlB,EAAAM,GACHN,EAAAe,QAAAf,EAAAgB,UAAA,EAAAV,IACG,SAAA1c,EAAA+H,GACH,OAAAA,EAAA/H,GAAA+H,EAAAwV,oBAAAvd,EAAAud,qBAAAC,IAAAC,KA6FA,QAAAC,IAAA3lB,GACA,MAAAikB,IAAA,SAAAI,GACAA,EAAAuB,WAAAvB,EAAAwB,cAAAxB,EAAAyB,YAAA,EAAA9lB,GAAA,GACAqkB,EAAA0B,YAAA,UACG,SAAA1B,EAAAM,GACHN,EAAAuB,WAAAvB,EAAAwB,aAAA,EAAAlB,IACG,SAAA1c,EAAA+H,GACH,OAAAA,EAAA/H,GAAAyd,KA+JA,QAAAM,IAAAC,GACA,KAAAC,EAAAC,GAAAzN,KAAAuN,IAAA,SAAAhX,OAAA,mBAAAgX,EAEA,IAAAC,GACAE,EAAAF,EAAA,QACAG,EAAAH,EAAA,QACA5P,EAAA4P,EAAA,QACAI,EAAAJ,EAAA,OACApJ,IAAAoJ,EAAA,GACAK,EAAAL,EAAA,KAAAA,EAAA,GACAM,IAAAN,EAAA,GACAO,EAAAP,EAAA,KAAAA,EAAA,GAAA3Z,MAAA,GACAqU,EAAAsF,EAAA,MAGA,OAAAtF,GAAA4F,GAAA,EAAA5F,EAAA,KAGA8F,GAAA9F,OAAA,KAGA9D,GAAA,MAAAsJ,GAAA,MAAAC,KAAAvJ,GAAA,EAAAsJ,EAAA,IAAAC,EAAA,KAEAphB,KAAAmhB,OACAnhB,KAAAohB,QACAphB,KAAAqR,OACArR,KAAAqhB,SACArhB,KAAA6X,OACA7X,KAAAshB,QACAthB,KAAAuhB,QACAvhB,KAAAwhB,YACAxhB,KAAA2b,OAiBA,QAAA+F,IAAA7kB,GACA,MAAAA,GAgJA,QAAA8kB,IAAA1O,GAIA,MAHA2O,IAAAC,GAAA5O,GACArZ,EAAAyZ,OAAAuO,GAAAvO,OACAzZ,EAAAkoB,aAAAF,GAAAE,aACAF,GAgBA,QAAAG,IAAAlf,GACA,MAAAA,EAAAtC,GAAAsC,EAAAtC,EAAA,KACA,GAAA6e,GAAA,GAAAC,OAAA,EAAAxc,EAAAiO,EAAAjO,MAAAmf,EAAAnf,EAAAof,EAAApf,EAAAqf,EAAArf,EAAAsf,EAEA,OADA/C,GAAAgD,YAAAvf,EAAAtC,GACA6e,EAEA,UAAAC,MAAAxc,EAAAtC,EAAAsC,EAAAiO,EAAAjO,MAAAmf,EAAAnf,EAAAof,EAAApf,EAAAqf,EAAArf,EAAAsf,GAGA,QAAAE,IAAAxf,GACA,MAAAA,EAAAtC,GAAAsC,EAAAtC,EAAA,KACA,GAAA6e,GAAA,GAAAC,WAAAiD,KAAA,EAAAzf,EAAAiO,EAAAjO,MAAAmf,EAAAnf,EAAAof,EAAApf,EAAAqf,EAAArf,EAAAsf,GAEA,OADA/C,GAAAmD,eAAA1f,EAAAtC,GACA6e,EAEA,UAAAC,WAAAiD,IAAAzf,EAAAtC,EAAAsC,EAAAiO,EAAAjO,MAAAmf,EAAAnf,EAAAof,EAAApf,EAAAqf,EAAArf,EAAAsf,IAGA,QAAAK,IAAAjiB,GACA,OAAUA,IAAAuQ,EAAA,EAAAjO,EAAA,EAAAmf,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAGV,QAAAM,IAAAC,GA8GA,QAAAC,GAAA3B,EAAA4B,GACA,gBAAAxD,GACA,GAIAtU,GACA+X,EACAxP,EANAyP,KACA/nB,GAAA,EACAwN,EAAA,EACA9D,EAAAuc,EAAA/lB,MAOA,KAFAmkB,YAAAC,QAAAD,EAAA,GAAAC,OAAAD,MAEArkB,EAAA0J,GACA,KAAAuc,EAAA+B,WAAAhoB,KACA+nB,EAAAvgB,KAAAye,EAAA1Z,MAAAiB,EAAAxN,IACA,OAAA8nB,EAAAG,GAAAlY,EAAAkW,EAAAiC,SAAAloB,KAAA+P,EAAAkW,EAAAiC,SAAAloB,GACA8nB,EAAA,MAAA/X,EAAA,SACAuI,EAAAuP,EAAA9X,QAAAuI,EAAA+L,EAAAyD,IACAC,EAAAvgB,KAAAuI,GACAvC,EAAAxN,EAAA,EAKA,OADA+nB,GAAAvgB,KAAAye,EAAA1Z,MAAAiB,EAAAxN,IACA+nB,EAAAtI,KAAA,KAIA,QAAA0I,GAAAlC,EAAAmC,GACA,gBAAAL,GACA,GAAAjgB,GAAA2f,GAAA,MACAznB,EAAAqoB,EAAAvgB,EAAAme,EAAA8B,GAAA,KACA,IAAA/nB,GAAA+nB,EAAA7nB,OAAA,WAMA,IAHA,KAAA4H,OAAAmf,EAAAnf,EAAAmf,EAAA,MAAAnf,EAAA6L,GAGA,KAAA7L,IAAA,KAAAA,GAAA,CACA,KAAAA,OAAAhI,EAAA,KAAAgI,GAAA,IACA,IAAAwgB,GAAA,KAAAxgB,GAAAwf,GAAAG,GAAA3f,EAAAtC,IAAAsgB,YAAAsC,EAAAX,GAAA3f,EAAAtC,IAAA8f,QACAxd,GAAAiO,EAAA,EACAjO,IAAA,KAAAA,MAAAhI,EAAA,OAAAgI,EAAAygB,GAAAD,EAAA,KAAAxgB,EAAAhI,EAAA,EAAAgI,EAAA0gB,GAAAF,EAAA,KAKA,WAAAxgB,IACAA,EAAAmf,GAAAnf,EAAA2gB,EAAA,MACA3gB,EAAAof,GAAApf,EAAA2gB,EAAA,IACAnB,GAAAxf,IAIAsgB,EAAAtgB,IAIA,QAAAugB,GAAAvgB,EAAAme,EAAA8B,EAAAva,GAOA,IANA,GAGAuC,GACAyO,EAJAxe,EAAA,EACA0J,EAAAuc,EAAA/lB,OACA6V,EAAAgS,EAAA7nB,OAIAF,EAAA0J,GAAA,CACA,GAAA8D,GAAAuI,EAAA,QAEA,IADAhG,EAAAkW,EAAA+B,WAAAhoB,KACA,KAAA+P,GAGA,GAFAA,EAAAkW,EAAAiC,OAAAloB,KACAwe,EAAAkK,EAAA3Y,IAAAkY,IAAAhC,EAAAiC,OAAAloB,KAAA+P,IACAyO,IAAAhR,EAAAgR,EAAA1W,EAAAigB,EAAAva,IAAA,eACO,IAAAuC,GAAAgY,EAAAC,WAAAxa,KACP,SAIA,MAAAA,GAGA,QAAAmb,GAAA7gB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAAkf,EAAAlQ,KAAAqP,EAAAxb,MAAAvM,GACA,OAAA0J,IAAA5B,EAAA6L,EAAAkV,EAAAnf,EAAA,GAAA8O,eAAAxY,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAA4oB,GAAAhhB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAAqf,EAAArQ,KAAAqP,EAAAxb,MAAAvM,GACA,OAAA0J,IAAA5B,EAAAhI,EAAAkpB,EAAAtf,EAAA,GAAA8O,eAAAxY,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAA+oB,GAAAnhB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAAwf,EAAAxQ,KAAAqP,EAAAxb,MAAAvM,GACA,OAAA0J,IAAA5B,EAAAhI,EAAAqpB,EAAAzf,EAAA,GAAA8O,eAAAxY,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAkpB,GAAAthB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2f,EAAA3Q,KAAAqP,EAAAxb,MAAAvM,GACA,OAAA0J,IAAA5B,EAAAiO,EAAAuT,EAAA5f,EAAA,GAAA8O,eAAAxY,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAqpB,GAAAzhB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA8f,EAAA9Q,KAAAqP,EAAAxb,MAAAvM,GACA,OAAA0J,IAAA5B,EAAAiO,EAAA0T,EAAA/f,EAAA,GAAA8O,eAAAxY,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAwpB,GAAA5hB,EAAAigB,EAAA/nB,GACA,MAAAqoB,GAAAvgB,EAAA6hB,EAAA5B,EAAA/nB,GAGA,QAAA4pB,GAAA9hB,EAAAigB,EAAA/nB,GACA,MAAAqoB,GAAAvgB,EAAA+hB,EAAA9B,EAAA/nB,GAGA,QAAA8pB,GAAAhiB,EAAAigB,EAAA/nB,GACA,MAAAqoB,GAAAvgB,EAAAiiB,EAAAhC,EAAA/nB,GAGA,QAAAgqB,GAAAliB,GACA,MAAAmiB,GAAAniB,EAAAwd,UAGA,QAAA4E,GAAApiB,GACA,MAAAqiB,GAAAriB,EAAAwd,UAGA,QAAA8E,GAAAtiB,GACA,MAAAuiB,GAAAviB,EAAAwiB,YAGA,QAAAC,GAAAziB,GACA,MAAA0iB,GAAA1iB,EAAAwiB,YAGA,QAAAG,GAAA3iB,GACA,MAAA4iB,KAAA5iB,EAAA6iB,YAAA,KAGA,QAAAC,GAAA9iB,GACA,MAAAmiB,GAAAniB,EAAAge,aAGA,QAAA+E,GAAA/iB,GACA,MAAAqiB,GAAAriB,EAAAge,aAGA,QAAAgF,GAAAhjB,GACA,MAAAuiB,GAAAviB,EAAAijB,eAGA,QAAAC,GAAAljB,GACA,MAAA0iB,GAAA1iB,EAAAijB,eAGA,QAAAE,GAAAnjB,GACA,MAAA4iB,KAAA5iB,EAAAojB,eAAA,KAvQA,GAAAvB,GAAAhC,EAAAwD,SACAtB,EAAAlC,EAAAtD,KACA0F,EAAApC,EAAA5E,KACA2H,EAAA/C,EAAAyD,QACAjB,EAAAxC,EAAA0D,KACApB,EAAAtC,EAAA2D,UACAd,EAAA7C,EAAA4D,OACAlB,EAAA1C,EAAA6D,YAEA5C,EAAA6C,GAAAf,GACA7B,EAAA6C,GAAAhB,GACAxB,EAAAuC,GAAAtB,GACAhB,EAAAuC,GAAAvB,GACApB,EAAA0C,GAAAxB,GACAjB,EAAA0C,GAAAzB,GACAT,EAAAiC,GAAAjB,GACAf,EAAAiC,GAAAlB,GACAnB,EAAAoC,GAAApB,GACAf,EAAAoC,GAAArB,GAEAxC,GACAhhB,EAAAmjB,EACA2B,EAAAzB,EACApjB,EAAAsjB,EACAwB,EAAArB,EACAxa,EAAA,KACAjI,EAAA+jB,GACAhc,EAAAgc,GACA5E,EAAA6E,GACAC,EAAAC,GACAxe,EAAAye,GACA7E,EAAA8E,GACAnW,EAAAoW,GACAjF,EAAAkF,GACAzY,EAAA8W,EACAtD,EAAAkF,GACA7D,EAAA8D,GACAxsB,EAAAysB,GACAhE,EAAAiE,GACA1qB,EAAA,KACA2qB,EAAA,KACAjnB,EAAAknB,GACAC,EAAAC,GACAnE,EAAAoE,GACAC,IAAAC,IAGAC,GACAnmB,EAAA+jB,EACAe,EAAAd,EACA/jB,EAAAgkB,EACAc,EAAAZ,EACAjb,EAAA,KACAjI,EAAAmlB,GACApd,EAAAod,GACAhG,EAAAiG,GACAnB,EAAAoB,GACA3f,EAAA4f,GACAhG,EAAAiG,GACAtX,EAAAuX,GACApG,EAAAqG,GACA5Z,EAAAsX,EACA9D,EAAAqG,GACAhF,EAAAiF,GACA3tB,EAAA4tB,GACAnF,EAAAoF,GACA7rB,EAAA,KACA2qB,EAAA,KACAjnB,EAAAooB,GACAjB,EAAAkB,GACApF,EAAAqF,GACAhB,IAAAC,IAGArE,GACA7hB,EAAAiiB,EACA6C,EAAA1C,EACAniB,EAAAsiB,EACAwC,EAAArC,EACAxZ,EAAA2Z,EACA5hB,EAAAimB,GACAle,EAAAke,GACA9G,EAAA+G,GACAjC,EAAAiC,GACAxgB,EAAAygB,GACA7G,EAAA8G,GACAnY,EAAAoY,GACAjH,EAAAkH,GACAza,EAAAgV,EACAxB,EAAAkH,GACA7F,EAAA8F,GACAxuB,EAAAyuB,GACAhG,EAAAiG,GACA1sB,EAAA8nB,EACA6C,EAAA3C,EACAtkB,EAAAipB,GACA9B,EAAA+B,GACAjG,EAAAkG,GACA7B,IAAA8B,GAwKA,OApKA/G,GAAA/lB,EAAA8lB,EAAAiC,EAAAhC,GACAA,EAAA4E,EAAA7E,EAAAmC,EAAAlC,GACAA,EAAA9X,EAAA6X,EAAA+B,EAAA9B,GACAmF,EAAAlrB,EAAA8lB,EAAAiC,EAAAmD,GACAA,EAAAP,EAAA7E,EAAAmC,EAAAiD,GACAA,EAAAjd,EAAA6X,EAAA+B,EAAAqD,IAgKA1U,OAAA,SAAA2N,GACA,GAAApe,GAAA+f,EAAA3B,GAAA,GAAA4B,EAEA,OADAhgB,GAAAgnB,SAAA,WAA+B,MAAA5I,IAC/Bpe,GAEA2W,MAAA,SAAAyH,GACA,GAAAtS,GAAAwU,EAAAlC,GAAA,GAAAe,GAEA,OADArT,GAAAkb,SAAA,WAA+B,MAAA5I,IAC/BtS,GAEAmb,UAAA,SAAA7I,GACA,GAAApe,GAAA+f,EAAA3B,GAAA,GAAA+G,EAEA,OADAnlB,GAAAgnB,SAAA,WAA+B,MAAA5I,IAC/Bpe,GAEAknB,SAAA,SAAA9I,GACA,GAAAtS,GAAAwU,EAAAlC,EAAAqB,GAEA,OADA3T,GAAAkb,SAAA,WAA+B,MAAA5I,IAC/BtS,IAUA,QAAAmU,IAAArlB,EAAA2jB,EAAAG,GACA,GAAAjQ,GAAA7T,EAAA,SACAslB,GAAAzR,GAAA7T,KAAA,GACAvC,EAAA6nB,EAAA7nB,MACA,OAAAoW,IAAApW,EAAAqmB,EAAA,GAAAhd,OAAAgd,EAAArmB,EAAA,GAAAuf,KAAA2G,GAAA2B,KAGA,QAAAiH,IAAAhX,GACA,MAAAA,GAAAiX,QAAAC,GAAA,QAGA,QAAAzD,IAAA0D,GACA,UAAAC,QAAA,OAAAD,EAAA/lB,IAAA4lB,IAAAvP,KAAA,cAGA,QAAAiM,IAAAyD,GAEA,IADA,GAAA/lB,MAAcpJ,GAAA,EAAA0J,EAAAylB,EAAAjvB,SACdF,EAAA0J,GAAAN,EAAA+lB,EAAAnvB,GAAAwY,eAAAxY,CACA,OAAAoJ,GAGA,QAAAmlB,IAAAzmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAhI,GAAA4J,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAouB,IAAAxmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,GACA,OAAA0J,IAAA5B,EAAA0gB,GAAA9e,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAsuB,IAAA1mB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,GACA,OAAA0J,IAAA5B,EAAAygB,GAAA7e,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAwuB,IAAA5mB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAtC,GAAAkE,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAuuB,IAAA3mB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAtC,GAAAkE,EAAA,KAAAA,EAAA,gBAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAyuB,IAAA7mB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA,gCAAAgP,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAA2gB,EAAA/e,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAiuB,IAAArmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAiO,EAAArM,EAAA,KAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAA6tB,IAAAjmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,KAAA4B,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAA+tB,IAAAnmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAiO,EAAA,EAAAjO,KAAA4B,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAA8tB,IAAAlmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAmf,GAAAvd,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAkuB,IAAAtmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAof,GAAAxd,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAmuB,IAAAvmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAqf,GAAAzd,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAAguB,IAAApmB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA2lB,GAAA3W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,IAAA5B,EAAAsf,GAAA1d,EAAA,GAAA1J,EAAA0J,EAAA,GAAAxJ,SAAA,EAGA,QAAA0uB,IAAA9mB,EAAAigB,EAAA/nB,GACA,GAAA0J,GAAA4lB,GAAA5W,KAAAqP,EAAAxb,MAAAvM,IAAA,GACA,OAAA0J,GAAA1J,EAAA0J,EAAA,GAAAxJ,QAAA,EAGA,QAAA2rB,IAAA/jB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAud,UAAA1R,EAAA,GAGA,QAAAmY,IAAAhkB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAA6iB,WAAAhX,EAAA,GAGA,QAAAqY,IAAAlkB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAA6iB,WAAA,OAAAhX,EAAA,GAGA,QAAAsY,IAAAnkB,EAAA6L,GACA,MAAAmU,IAAA,EAAAyH,GAAApnB,MAAAqnB,GAAA1nB,MAAA6L,EAAA,GAGA,QAAAuY,IAAApkB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAA2nB,kBAAA9b,EAAA,GAGA,QAAAwY,IAAArkB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAwiB,WAAA,EAAA3W,EAAA,GAGA,QAAAyY,IAAAtkB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAA4nB,aAAA/b,EAAA,GAGA,QAAA0Y,IAAAvkB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAA6nB,aAAAhc,EAAA,GAGA,QAAA2Y,IAAAxkB,EAAA6L,GACA,MAAAmU,IAAA8H,GAAAznB,MAAAqnB,GAAA1nB,MAAA6L,EAAA,GAGA,QAAA4Y,IAAAzkB,GACA,MAAAA,GAAAwd,SAGA,QAAAkH,IAAA1kB,EAAA6L,GACA,MAAAmU,IAAA+H,GAAA1nB,MAAAqnB,GAAA1nB,MAAA6L,EAAA,GAGA,QAAA+Y,IAAA5kB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAgoB,cAAA,IAAAnc,EAAA,GAGA,QAAAiZ,IAAA9kB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAgoB,cAAA,IAAAnc,EAAA,GAGA,QAAAkZ,IAAA/kB,GACA,GAAA2S,GAAA3S,EAAA0d,mBACA,QAAA/K,EAAA,OAAAA,IAAA,QACAqN,GAAArN,EAAA,YACAqN,GAAArN,EAAA,UAGA,QAAAwS,IAAAnlB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAA+d,aAAAlS,EAAA,GAGA,QAAAuZ,IAAAplB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAojB,cAAAvX,EAAA,GAGA,QAAAwZ,IAAArlB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAojB,cAAA,OAAAvX,EAAA,GAGA,QAAAyZ,IAAAtlB,EAAA6L,GACA,MAAAmU,IAAA,EAAAiI,GAAA5nB,MAAA6nB,GAAAloB,MAAA6L,EAAA,GAGA,QAAA0Z,IAAAvlB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAmoB,qBAAAtc,EAAA,GAGA,QAAA2Z,IAAAxlB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAijB,cAAA,EAAApX,EAAA,GAGA,QAAA4Z,IAAAzlB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAooB,gBAAAvc,EAAA,GAGA,QAAA6Z,IAAA1lB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAqoB,gBAAAxc,EAAA,GAGA,QAAA8Z,IAAA3lB,EAAA6L,GACA,MAAAmU,IAAAsI,GAAAjoB,MAAA6nB,GAAAloB,MAAA6L,EAAA,GAGA,QAAA+Z,IAAA5lB,GACA,MAAAA,GAAAge,YAGA,QAAA6H,IAAA7lB,EAAA6L,GACA,MAAAmU,IAAAuI,GAAAloB,MAAA6nB,GAAAloB,MAAA6L,EAAA,GAGA,QAAAia,IAAA9lB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAwoB,iBAAA,IAAA3c,EAAA,GAGA,QAAAka,IAAA/lB,EAAA6L,GACA,MAAAmU,IAAAhgB,EAAAwoB,iBAAA,IAAA3c,EAAA,GAGA,QAAAma,MACA,cAGA,QAAAf,MACA,UAoBA,QAAAwD,IAAArY,GAMA,MALAsY,IAAA9I,GAAAxP,GACArZ,EAAA4xB,WAAAD,GAAAlY,OACAzZ,EAAA6xB,UAAAF,GAAAhS,MACA3f,EAAAiwB,UAAA0B,GAAA1B,UACAjwB,EAAAkwB,SAAAyB,GAAAzB,SACAyB,GAKA,QAAAG,IAAAtM,GACA,MAAAA,GAAAuM,cAOA,QAAAC,IAAA9I,GACA,GAAA1D,GAAA,GAAAC,MAAAyD,EACA,OAAA/a,OAAAqX,GAAA,KAAAA,EAcA,QAAAyM,IAAAlM,GAOA,QAAAxF,GAAAtX,GACA,GAAA3I,GAAA2I,EAAA,GAAA9H,EAAAwC,EAAAkD,IAAAvG,EACA,KAAAa,EAAA,CACA,GAAA+wB,IAAAC,GAAA,MAAAD,EACAvuB,GAAA8G,IAAAnK,EAAAa,EAAAixB,EAAAzpB,KAAAM,IAEA,MAAA8c,IAAA5kB,EAAA,GAAA4kB,EAAA1kB,QAZA,GAAAsC,GAAA0G,IACA+nB,KACAF,EAAAC,EAoCA,OAlCApM,GAAA,MAAAA,KAAAsM,GAAA3xB,KAAAqlB,GAWAxF,EAAA6R,OAAA,SAAApkB,GACA,IAAA0D,UAAArQ,OAAA,MAAA+wB,GAAA1kB,OACA0kB,MAAAzuB,EAAA0G,GAEA,KADA,GAAApB,GAAA3I,EAAAa,GAAA,EAAA0J,EAAAmD,EAAA3M,SACAF,EAAA0J,GAAAlH,EAAA2uB,IAAAhyB,GAAA2I,EAAA+E,EAAA7M,IAAA,KAAAwC,EAAA8G,IAAAnK,EAAA8xB,EAAAzpB,KAAAM,GACA,OAAAsX,IAGAA,EAAAwF,MAAA,SAAA/X,GACA,MAAA0D,WAAArQ,QAAA0kB,EAAAsM,GAAA3xB,KAAAsN,GAAAuS,GAAAwF,EAAArY,SAGA6S,EAAA2R,QAAA,SAAAlkB,GACA,MAAA0D,WAAArQ,QAAA6wB,EAAAlkB,EAAAuS,GAAA2R,GAGA3R,EAAArQ,KAAA,WACA,MAAA+hB,MACAG,UACArM,SACAmM,YAGA3R,EAGA,QAAAgS,MAcA,QAAAC,KACA,GAAA3nB,GAAAunB,IAAA/wB,OACAoxB,EAAAC,EAAA,GAAAA,EAAA,GACAtpB,EAAAspB,EAAAD,EAAA,GACAppB,EAAAqpB,EAAA,EAAAD,EACA3M,IAAAzc,EAAAD,GAAAI,KAAAE,IAAA,EAAAmB,EAAA8nB,EAAA,EAAAC,GACAnV,IAAAqI,EAAAtc,KAAAK,MAAAic,IACA1c,IAAAC,EAAAD,EAAA0c,GAAAjb,EAAA8nB,IAAAnL,EACAqL,EAAA/M,GAAA,EAAA6M,GACAlV,IAAArU,EAAAI,KAAAiU,MAAArU,GAAAypB,EAAArpB,KAAAiU,MAAAoV,GACA,IAAAC,GAAA/M,GAAAlb,GAAAN,IAAA,SAAApJ,GAA2C,MAAAiI,GAAA0c,EAAA3kB,GAC3C,OAAA4xB,GAAAN,EAAAK,EAAAL,UAAAK,GAxBA,GAIAhN,GACA+M,EALAtS,EAAA0R,KAAAC,QAAAluB,QACAouB,EAAA7R,EAAA6R,OACAW,EAAAxS,EAAAwF,MACA2M,GAAA,KAGAjV,GAAA,EACAkV,EAAA,EACAC,EAAA,EACApL,EAAA,EAoEA,cAlEAjH,GAAA2R,QAgBA3R,EAAA6R,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,QAAA+wB,EAAApkB,GAAAwkB,KAAAJ,KAGA7R,EAAAwF,MAAA,SAAA/X,GACA,MAAA0D,WAAArQ,QAAAqxB,IAAA1kB,EAAA,IAAAA,EAAA,IAAAwkB,KAAAE,EAAAhlB,SAGA6S,EAAAyS,WAAA,SAAAhlB,GACA,MAAA0kB,KAAA1kB,EAAA,IAAAA,EAAA,IAAAyP,GAAA,EAAA+U,KAGAjS,EAAAsS,UAAA,WACA,MAAAA,IAGAtS,EAAAuF,KAAA,WACA,MAAAA,IAGAvF,EAAA9C,MAAA,SAAAzP,GACA,MAAA0D,WAAArQ,QAAAoc,IAAAzP,EAAAwkB,KAAA/U,GAGA8C,EAAA0S,QAAA,SAAAjlB,GACA,MAAA0D,WAAArQ,QAAAsxB,EAAAC,EAAAppB,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,EAAA/J,IAAAwkB,KAAAG,GAGApS,EAAAoS,aAAA,SAAA3kB,GACA,MAAA0D,WAAArQ,QAAAsxB,EAAAnpB,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,EAAA/J,IAAAwkB,KAAAG,GAGApS,EAAAqS,aAAA,SAAA5kB,GACA,MAAA0D,WAAArQ,QAAAuxB,EAAAppB,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,EAAA/J,IAAAwkB,KAAAI,GAGArS,EAAAiH,MAAA,SAAAxZ;AACA,MAAA0D,WAAArQ,QAAAmmB,EAAAhe,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,EAAA/J,IAAAwkB,KAAAhL,GAGAjH,EAAArQ,KAAA,WACA,MAAAqiB,MACAH,YACArM,MAAA2M,GACAjV,SACAkV,gBACAC,gBACApL,UAGAgL,IAGA,QAAAU,IAAA3S,GACA,GAAArQ,GAAAqQ,EAAArQ,IAUA,OARAqQ,GAAA0S,QAAA1S,EAAAqS,mBACArS,GAAAoS,mBACApS,GAAAqS,aAEArS,EAAArQ,KAAA,WACA,MAAAgjB,IAAAhjB,MAGAqQ,EAGA,QAAA4S,MACA,MAAAD,IAAAX,KAAAI,aAAA,IAeA,QAAAS,IAAAprB,EAAAC,GACA,OAAAA,GAAAD,MACA,SAAA/E,GAAqB,OAAAA,EAAA+E,GAAAC,GACrBorB,GAAAprB,GAGA,QAAAqrB,IAAAC,GACA,gBAAAvrB,EAAAC,GACA,GAAAgB,GAAAsqB,EAAAvrB,KAAAC,KACA,iBAAAhF,GAAwB,MAAAA,IAAA+E,EAAA,EAAA/E,GAAAgF,EAAA,EAAAgB,EAAAhG,KAIxB,QAAAuwB,IAAAC,GACA,gBAAAzrB,EAAAC,GACA,GAAAqJ,GAAAmiB,EAAAzrB,KAAAC,KACA,iBAAAmD,GAAwB,MAAAA,IAAA,EAAApD,EAAAoD,GAAA,EAAAnD,EAAAqJ,EAAAlG,KAIxB,QAAAsoB,IAAAtB,EAAAM,EAAAa,EAAAE,GACA,GAAA9N,GAAAyM,EAAA,GAAAxM,EAAAwM,EAAA,GAAAuB,EAAAjB,EAAA,GAAAzf,EAAAyf,EAAA,EAGA,OAFA9M,GAAAD,KAAA4N,EAAA3N,EAAAD,GAAAgO,EAAAF,EAAAxgB,EAAA0gB,KACAhO,EAAA4N,EAAA5N,EAAAC,GAAA+N,EAAAF,EAAAE,EAAA1gB,IACA,SAAAhQ,GAAsB,MAAA0wB,GAAAhO,EAAA1iB,KAGtB,QAAA2wB,IAAAxB,EAAAM,EAAAa,EAAAE,GACA,GAAA9kB,GAAAnF,KAAAuO,IAAAqa,EAAA/wB,OAAAqxB,EAAArxB,QAAA,EACA4H,EAAA,GAAAyB,OAAAiE,GACA2C,EAAA,GAAA5G,OAAAiE,GACAxN,GAAA,CAQA,KALAixB,EAAAzjB,GAAAyjB,EAAA,KACAA,IAAA1kB,QAAA+kB,UACAC,IAAAhlB,QAAA+kB,aAGAtxB,EAAAwN,GACA1F,EAAA9H,GAAAoyB,EAAAnB,EAAAjxB,GAAAixB,EAAAjxB,EAAA,IACAmQ,EAAAnQ,GAAAsyB,EAAAf,EAAAvxB,GAAAuxB,EAAAvxB,EAAA,GAGA,iBAAA8B,GACA,GAAA9B,GAAA0yB,GAAAzB,EAAAnvB,EAAA,EAAA0L,GAAA,CACA,OAAA2C,GAAAnQ,GAAA8H,EAAA9H,GAAA8B,KAIA,QAAAiN,IAAA4jB,EAAAruB,GACA,MAAAA,GACA2sB,OAAA0B,EAAA1B,UACArM,MAAA+N,EAAA/N,SACAgO,YAAAD,EAAAC,eACAC,MAAAF,EAAAE,SAKA,QAAAC,IAAAV,EAAAE,GASA,QAAAjB,KAGA,MAFA0B,GAAA1qB,KAAAuO,IAAAqa,EAAA/wB,OAAAqxB,EAAArxB,QAAA,EAAAuyB,GAAAF,GACAS,EAAAC,EAAA,KACA7T,EAGA,QAAAA,GAAAtd,GACA,OAAAkxB,MAAAD,EAAA9B,EAAAM,EAAAsB,EAAAV,GAAAC,KAAAc,MAAApxB,GAfA,GAIAixB,GACAC,EACAC,EANAhC,EAAAkC,GACA5B,EAAA4B,GACAD,EAAAN,GACAC,GAAA,CAuCA,OAxBAzT,GAAAgU,OAAA,SAAA5tB,GACA,OAAAytB,MAAAF,EAAAxB,EAAAN,EAAAgB,GAAAY,EAAAR,GAAAC,SAAA9sB,IAGA4Z,EAAA6R,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,QAAA+wB,EAAAoC,GAAA9zB,KAAAsN,EAAAymB,IAAAjC,KAAAJ,EAAA1kB,SAGA6S,EAAAwF,MAAA,SAAA/X,GACA,MAAA0D,WAAArQ,QAAAqxB,EAAAL,GAAA3xB,KAAAsN,GAAAwkB,KAAAE,EAAAhlB,SAGA6S,EAAAyS,WAAA,SAAAhlB,GACA,MAAA0kB,GAAAL,GAAA3xB,KAAAsN,GAAAqmB,EAAAK,GAAAlC,KAGAjS,EAAAyT,MAAA,SAAAhmB,GACA,MAAA0D,WAAArQ,QAAA2yB,IAAAhmB,EAAAwkB,KAAAwB,GAGAzT,EAAAwT,YAAA,SAAA/lB,GACA,MAAA0D,WAAArQ,QAAAgzB,EAAArmB,EAAAwkB,KAAA6B,GAGA7B,IAgCA,QAAAmC,IAAApU,GACA,GAAA6R,GAAA7R,EAAA6R,MA6BA,OA3BA7R,GAAAqU,MAAA,SAAAtrB,GACA,GAAAL,GAAAmpB,GACA,OAAAwC,IAAA3rB,EAAA,GAAAA,IAAA5H,OAAA,SAAAiI,EAAA,GAAAA,IAGAiX,EAAAsU,WAAA,SAAAvrB,EAAA8d,GACA,MAAAyN,IAAAzC,IAAA9oB,EAAA8d,IAGA7G,EAAAuU,KAAA,SAAAxrB,GACA,GAAAL,GAAAmpB,IACAjxB,EAAA8H,EAAA5H,OAAA,EACAwJ,EAAA,MAAAvB,EAAA,GAAAA,EACAF,EAAAH,EAAA,GACAI,EAAAJ,EAAA9H,GACA2kB,EAAA3c,EAAAC,EAAAC,EAAAwB,EASA,OAPAib,KACAA,EAAA3c,EAAAK,KAAAK,MAAAT,EAAA0c,KAAAtc,KAAAkc,KAAArc,EAAAyc,KAAAjb,GACA5B,EAAA,GAAAO,KAAAK,MAAAT,EAAA0c,KACA7c,EAAA9H,GAAAqI,KAAAkc,KAAArc,EAAAyc,KACAsM,EAAAnpB,IAGAsX,GAGAA,EAGA,QAAAwU,MACA,GAAAxU,GAAA0T,GAAAb,GAAAhT,GAMA,OAJAG,GAAArQ,KAAA,WACA,MAAAA,IAAAqQ,EAAAwU,OAGAJ,GAAApU,GAGA,QAAAyU,MAGA,QAAAzU,GAAAtd,GACA,OAAAA,EAHA,GAAAmvB,IAAA,IAgBA,OAVA7R,GAAAgU,OAAAhU,EAEAA,EAAA6R,OAAA7R,EAAAwF,MAAA,SAAA/X,GACA,MAAA0D,WAAArQ,QAAA+wB,EAAAoC,GAAA9zB,KAAAsN,EAAAymB,IAAAlU,GAAA6R,EAAA1kB,SAGA6S,EAAArQ,KAAA,WACA,MAAA8kB,MAAA5C,WAGAuC,GAAApU,GAsBA,QAAAgT,IAAAvrB,EAAAC,GACA,OAAAA,EAAAuB,KAAAM,IAAA7B,EAAAD,IACA,SAAA/E,GAAqB,MAAAuG,MAAAM,IAAA7G,EAAA+E,GAAAC,GACrBorB,GAAAprB,GAGA,QAAAwrB,IAAAzrB,EAAAC,GACA,MAAAD,GAAA,EACA,SAAAoD,GAAqB,OAAA5B,KAAAI,KAAA3B,EAAAmD,GAAA5B,KAAAI,KAAA5B,EAAA,EAAAoD,IACrB,SAAAA,GAAqB,MAAA5B,MAAAI,IAAA3B,EAAAmD,GAAA5B,KAAAI,IAAA5B,EAAA,EAAAoD,IAGrB,QAAA6pB,IAAAhyB,GACA,MAAAojB,UAAApjB,KAAA,KAAAA,KAAA,IAAAA,EAGA,QAAAiyB,IAAAC,GACA,YAAAA,EAAAF,GACAE,IAAA3rB,KAAAsT,EAAAtT,KAAAsX,IACA,SAAA7d,GAAqB,MAAAuG,MAAAI,IAAAurB,EAAAlyB,IAGrB,QAAAmyB,IAAAD,GACA,MAAAA,KAAA3rB,KAAAsT,EAAAtT,KAAAM,IACA,KAAAqrB,GAAA3rB,KAAA6rB,OACA,IAAAF,GAAA3rB,KAAA8rB,OACAH,EAAA3rB,KAAAM,IAAAqrB,GAAA,SAAAlyB,GAA8C,MAAAuG,MAAAM,IAAA7G,GAAAkyB,IAG9C,QAAAI,IAAAvsB,GACA,gBAAA/F,GACA,OAAA+F,GAAA/F,IAIA,QAAA6G,MAOA,QAAA0oB,KAGA,MAFAgD,GAAAJ,GAAAD,GAAAM,EAAAP,GAAAC,GACA/C,IAAA,OAAAoD,EAAAD,GAAAC,GAAAC,EAAAF,GAAAE,IACAlV,EATA,GAAAA,GAAA0T,GAAAV,GAAAE,IAAArB,QAAA,OACAA,EAAA7R,EAAA6R,OACA+C,EAAA,GACAK,EAAAJ,GAAA,IACAK,EAAAP,GAAA,GAgFA,OAxEA3U,GAAA4U,KAAA,SAAAnnB,GACA,MAAA0D,WAAArQ,QAAA8zB,GAAAnnB,EAAAwkB,KAAA2C,GAGA5U,EAAA6R,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,QAAA+wB,EAAApkB,GAAAwkB,KAAAJ,KAGA7R,EAAAqU,MAAA,SAAAtrB,GACA,GAGAgI,GAHArI,EAAAmpB,IACAsD,EAAAzsB,EAAA,GACAiQ,EAAAjQ,IAAA5H,OAAA,IAGAiQ,EAAA4H,EAAAwc,KAAAv0B,EAAAu0B,IAAAxc,IAAA/X,EAEA,IAEA2T,GACA+H,EACAzR,EAJAjK,EAAAq0B,EAAAE,GACA/mB,EAAA6mB,EAAAtc,GAIArO,EAAA,MAAAvB,EAAA,IAAAA,EACAsS,IAEA,MAAAuZ,EAAA,IAAAxmB,EAAAxN,EAAA0J,GAEA,GADA1J,EAAAqI,KAAAiU,MAAAtc,GAAA,EAAAwN,EAAAnF,KAAAiU,MAAA9O,GAAA,EACA+mB,EAAA,QAAuBv0B,EAAAwN,IAAOxN,EAC9B,IAAA0b,EAAA,EAAA/H,EAAA2gB,EAAAt0B,GAAgC0b,EAAAsY,IAAUtY,EAE1C,GADAzR,EAAA0J,EAAA+H,IACAzR,EAAAsqB,GAAA,CACA,GAAAtqB,EAAA8N,EAAA,KACA0C,GAAAjT,KAAAyC,QAEO,MAAYjK,EAAAwN,IAAOxN,EAC1B,IAAA0b,EAAAsY,EAAA,EAAArgB,EAAA2gB,EAAAt0B,GAAuC0b,GAAA,IAAQA,EAE/C,GADAzR,EAAA0J,EAAA+H,IACAzR,EAAAsqB,GAAA,CACA,GAAAtqB,EAAA8N,EAAA,KACA0C,GAAAjT,KAAAyC,QAIAwQ,GAAAgZ,GAAAzzB,EAAAwN,EAAAnF,KAAAuO,IAAApJ,EAAAxN,EAAA0J,IAAAN,IAAAkrB,EAGA,OAAAnkB,GAAAsK,EAAA6W,UAAA7W,GAGA2E,EAAAsU,WAAA,SAAAvrB,EAAA8d,GAGA,GAFA,MAAAA,MAAA,KAAA+N,EAAA,WACA,kBAAA/N,OAAApnB,EAAAyZ,OAAA2N,IACA9d,IAAAkG,IAAA,MAAA4X,EACA,OAAA9d,MAAA,GACA,IAAAuT,GAAArT,KAAAE,IAAA,EAAAyrB,EAAA7rB,EAAAiX,EAAAqU,QAAAvzB,OACA,iBAAA4H,GACA,GAAA9H,GAAA8H,EAAAwsB,EAAAjsB,KAAAiU,MAAA+X,EAAAvsB,IAEA,OADA9H,GAAAg0B,IAAA,KAAAh0B,GAAAg0B,GACAh0B,GAAA0b,EAAAuK,EAAAne,GAAA,KAIAsX,EAAAuU,KAAA,WACA,MAAA1C,GAAA0C,GAAA1C,KACAvoB,MAAA,SAAA5G,GAA0B,MAAAwyB,GAAAjsB,KAAAK,MAAA2rB,EAAAvyB,MAC1ByiB,KAAA,SAAAziB,GAAyB,MAAAwyB,GAAAjsB,KAAAkc,KAAA8P,EAAAvyB,UAIzBsd,EAAArQ,KAAA,WACA,MAAAA,IAAAqQ,EAAAzW,KAAAqrB,UAGA5U,EAGA,QAAAoV,IAAA1yB,EAAA2yB,GACA,MAAA3yB,GAAA,GAAAuG,KAAAI,KAAA3G,EAAA2yB,GAAApsB,KAAAI,IAAA3G,EAAA2yB,GAGA,QAAAhsB,MAKA,QAAA2pB,GAAAvrB,EAAAC,GACA,OAAAA,EAAA0tB,GAAA1tB,EAAA2tB,IAAA5tB,EAAA2tB,GAAA3tB,EAAA4tB,KACA,SAAA3yB,GAAuB,OAAA0yB,GAAA1yB,EAAA2yB,GAAA5tB,GAAAC,GACvBorB,GAAAprB,GAGA,QAAAwrB,GAAAzrB,EAAAC,GAEA,MADAA,GAAA0tB,GAAA1tB,EAAA2tB,IAAA5tB,EAAA2tB,GAAA3tB,EAAA4tB,IACA,SAAAxqB,GAAwB,MAAAuqB,IAAA3tB,EAAAC,EAAAmD,EAAA,EAAAwqB,IAZxB,GAAAA,GAAA,EACArV,EAAA0T,GAAAV,EAAAE,GACArB,EAAA7R,EAAA6R,MAqBA,OARA7R,GAAAqV,SAAA,SAAA5nB,GACA,MAAA0D,WAAArQ,QAAAu0B,GAAA5nB,EAAAokB,QAAAwD,GAGArV,EAAArQ,KAAA,WACA,MAAAA,IAAAqQ,EAAA3W,KAAAgsB,cAGAjB,GAAApU,GAGA,QAAAjU,MACA,MAAA1C,MAAAgsB,SAAA,IAGA,QAAAC,MAKA,QAAArD,KACA,GAAArxB,GAAA,EAAA0J,EAAArB,KAAAE,IAAA,EAAAgpB,EAAArxB,OAEA,KADAy0B,EAAA,GAAAprB,OAAAG,EAAA,KACA1J,EAAA0J,GAAAirB,EAAA30B,EAAA,GAAA40B,GAAA3D,EAAAjxB,EAAA0J,EACA,OAAA0V,GAGA,QAAAA,GAAAtd,GACA,IAAAkL,MAAAlL,MAAA,MAAAyvB,GAAAmB,GAAAiC,EAAA7yB,IAZA,GAAAmvB,MACAM,KACAoD,IA2CA,OA9BAvV,GAAAyV,aAAA,SAAArvB,GACA,GAAAxF,GAAAuxB,EAAA5Q,QAAAnb,EACA,OAAAxF,GAAA,GAAA6O,UACA7O,EAAA,EAAA20B,EAAA30B,EAAA,GAAAixB,EAAA,GACAjxB,EAAA20B,EAAAz0B,OAAAy0B,EAAA30B,GAAAixB,IAAA/wB,OAAA,KAIAkf,EAAA6R,OAAA,SAAApkB,GACA,IAAA0D,UAAArQ,OAAA,MAAA+wB,GAAA1kB,OACA0kB,KACA,QAAAnpB,GAAA9H,EAAA,EAAA0J,EAAAmD,EAAA3M,OAAoCF,EAAA0J,IAAO1J,EAAA8H,EAAA+E,EAAA7M,GAAA,MAAA8H,GAAAkF,MAAAlF,OAAAmpB,EAAAzpB,KAAAM,EAE3C,OADAmpB,GAAA6D,KAAA/sB,IACAspB,KAGAjS,EAAAwF,MAAA,SAAA/X,GACA,MAAA0D,WAAArQ,QAAAqxB,EAAAL,GAAA3xB,KAAAsN,GAAAwkB,KAAAE,EAAAhlB,SAGA6S,EAAA2V,UAAA,WACA,MAAAJ,GAAApoB,SAGA6S,EAAArQ,KAAA,WACA,MAAA2lB,MACAzD,UACArM,MAAA2M,IAGAnS,EAGA,QAAA4V,MAOA,QAAA5V,GAAAtd,GACA,GAAAA,KAAA,MAAAyvB,GAAAmB,GAAAzB,EAAAnvB,EAAA,EAAA4H,IAGA,QAAA2nB,KACA,GAAArxB,IAAA,CAEA,KADAixB,EAAA,GAAA1nB,OAAAG,KACA1J,EAAA0J,GAAAunB,EAAAjxB,OAAA,GAAA8N,GAAA9N,EAAA0J,GAAAkE,IAAAlE,EAAA,EACA,OAAA0V,GAdA,GAAAxR,GAAA,EACAE,EAAA,EACApE,EAAA,EACAunB,GAAA,IACAM,GAAA,IAmCA,OAtBAnS,GAAA6R,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,QAAA0N,GAAAf,EAAA,GAAAiB,GAAAjB,EAAA,GAAAwkB,MAAAzjB,EAAAE,IAGAsR,EAAAwF,MAAA,SAAA/X,GACA,MAAA0D,WAAArQ,QAAAwJ,GAAA6nB,EAAAL,GAAA3xB,KAAAsN,IAAA3M,OAAA,EAAAmxB,KAAAE,EAAAhlB,SAGA6S,EAAAyV,aAAA,SAAArvB,GACA,GAAAxF,GAAAuxB,EAAA5Q,QAAAnb,EACA,OAAAxF,GAAA,GAAA6O,SACA7O,EAAA,GAAA4N,EAAAqjB,EAAA,IACAjxB,GAAA0J,GAAAunB,EAAAvnB,EAAA,GAAAoE,IACAmjB,EAAAjxB,EAAA,GAAAixB,EAAAjxB,KAGAof,EAAArQ,KAAA,WACA,MAAAimB,MACA/D,QAAArjB,EAAAE,IACA8W,MAAA2M,IAGAiC,GAAApU,GAGA,QAAA6V,MAKA,QAAA7V,GAAAtd,GACA,GAAAA,KAAA,MAAAyvB,GAAAmB,GAAAzB,EAAAnvB,EAAA,EAAA4H,IALA,GAAAunB,IAAA,IACAM,GAAA,KACA7nB,EAAA,CAyBA,OAnBA0V,GAAA6R,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,QAAA+wB,EAAAC,GAAA3xB,KAAAsN,GAAAnD,EAAArB,KAAAuO,IAAAqa,EAAA/wB,OAAAqxB,EAAArxB,OAAA,GAAAkf,GAAA6R,EAAA1kB,SAGA6S,EAAAwF,MAAA,SAAA/X,GACA,MAAA0D,WAAArQ,QAAAqxB,EAAAL,GAAA3xB,KAAAsN,GAAAnD,EAAArB,KAAAuO,IAAAqa,EAAA/wB,OAAAqxB,EAAArxB,OAAA,GAAAkf,GAAAmS,EAAAhlB,SAGA6S,EAAAyV,aAAA,SAAArvB,GACA,GAAAxF,GAAAuxB,EAAA5Q,QAAAnb,EACA,QAAAyrB,EAAAjxB,EAAA,GAAAixB,EAAAjxB,KAGAof,EAAArQ,KAAA,WACA,MAAAkmB,MACAhE,UACArM,MAAA2M,IAGAnS,EAWA,QAAA8V,IAAAjrB,GACA,UAAAqa,MAAAra,GAGA,QAAAkrB,IAAAlrB,GACA,MAAAA,aAAAqa,OAAAra,GAAA,GAAAqa,OAAAra,GAGA,QAAAmrB,IAAAC,EAAAC,EAAAC,EAAAjN,EAAAkN,EAAAC,EAAAC,EAAAC,EAAArd,GAmCA,QAAAob,GAAArP,GACA,OAAAqR,EAAArR,KAAAuR,EACAH,EAAApR,KAAAwR,EACAL,EAAAnR,KAAAyR,EACAxN,EAAAjE,KAAA0R,EACAT,EAAAjR,KAAAkR,EAAAlR,KAAA2R,EAAAC,EACAZ,EAAAhR,KAAAkG,EACAmC,GAAArI,GAGA,QAAA6R,GAAApS,EAAA7b,EAAAC,EAAAyc,GAMA,GALA,MAAAb,MAAA,IAKA,gBAAAA,GAAA,CACA,GAAAxf,GAAA+D,KAAAC,IAAAJ,EAAAD,GAAA6b,EACA9jB,EAAAm2B,GAAA,SAAAn2B,GAAoC,MAAAA,GAAA,KAAesN,MAAA8oB,EAAA9xB,EACnDtE,KAAAo2B,EAAAl2B,QACAykB,EAAA3c,EAAAC,EAAAouB,GAAAnuB,EAAAmuB,GAAAvS,GACAA,EAAAuR,GACOr1B,GACPA,EAAAo2B,EAAA9xB,EAAA8xB,EAAAp2B,EAAA,MAAAo2B,EAAAp2B,GAAA,GAAAsE,EAAAtE,EAAA,EAAAA,GACA2kB,EAAA3kB,EAAA,GACA8jB,EAAA9jB,EAAA,KAEA2kB,EAAA3c,EAAAC,EAAAC,EAAA4b,GACAA,EAAA6R,GAIA,aAAAhR,EAAAb,IAAAmB,MAAAN,GAlEA,GAAAvF,GAAA0T,GAAAb,GAAAhT,IACAmU,EAAAhU,EAAAgU,OACAnC,EAAA7R,EAAA6R,OAEA2E,EAAAtd,EAAA,OACAud,EAAAvd,EAAA,OACAwd,EAAAxd,EAAA,SACAyd,EAAAzd,EAAA,SACA0d,EAAA1d,EAAA,SACA2d,EAAA3d,EAAA,SACAiS,EAAAjS,EAAA,MACAoU,EAAApU,EAAA,MAEA8d,IACAV,EAAA,EAAAY,KACAZ,EAAA,IAAAY,KACAZ,EAAA,MAAAY,KACAZ,EAAA,MAAAY,KACAb,EAAA,EAAAc,KACAd,EAAA,IAAAc,KACAd,EAAA,MAAAc,KACAd,EAAA,MAAAc,KACAf,EAAA,EAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,MAAAgB,KACAlO,EAAA,EAAAmO,KACAnO,EAAA,IAAAmO,KACAlB,EAAA,EAAAmB,KACApB,EAAA,EAAAqB,KACArB,EAAA,IAAAqB,KACAtB,EAAA,EAAAgB,IAyEA,OAnCAjX,GAAAgU,OAAA,SAAA5tB,GACA,UAAA8e,MAAA8O,EAAA5tB,KAGA4Z,EAAA6R,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,OAAA+wB,EAAAoC,GAAA9zB,KAAAsN,EAAAsoB,KAAAlE,IAAA7nB,IAAA8rB,KAGA9V,EAAAqU,MAAA,SAAA3P,EAAAa,GACA,GAIA1a,GAJAnC,EAAAmpB,IACAla,EAAAjP,EAAA,GACAkP,EAAAlP,IAAA5H,OAAA,GACAiQ,EAAA6G,EAAAD,CAKA,OAHA5G,KAAAlG,EAAA8M,IAAAC,IAAA/M,GACAA,EAAAisB,EAAApS,EAAA/M,EAAAC,EAAA2N,GACA1a,MAAA2a,MAAA7N,EAAAC,EAAA,MACA7G,EAAAlG,EAAAqnB,UAAArnB,GAGAmV,EAAAsU,WAAA,SAAAvrB,EAAA8d,GACA,aAAAA,EAAAyN,EAAApb,EAAA2N,IAGA7G,EAAAuU,KAAA,SAAA7P,EAAAa,GACA,GAAA7c,GAAAmpB,GACA,QAAAnN,EAAAoS,EAAApS,EAAAhc,EAAA,GAAAA,IAAA5H,OAAA,GAAAykB,IACAsM,EAAA0C,GAAA7rB,EAAAgc,IACA1E,GAGAA,EAAArQ,KAAA,WACA,MAAAA,IAAAqQ,EAAAgW,GAAAC,EAAAC,EAAAC,EAAAjN,EAAAkN,EAAAC,EAAAC,EAAAC,EAAArd,KAGA8G,EA0CA,QAAAwX,IAAAhS,GACA,GAAAlb,GAAAkb,EAAA1kB,MACA,iBAAA+J,GACA,MAAA2a,GAAAvc,KAAAE,IAAA,EAAAF,KAAAuO,IAAAlN,EAAA,EAAArB,KAAAK,MAAAuB,EAAAP,OAYA,QAAAmtB,IAAAC,GAKA,QAAA1X,GAAAtd,GACA,GAAAmI,IAAAnI,EAAA8L,IAAAE,EAAAF,EACA,OAAAkpB,GAAAjE,EAAAxqB,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,EAAA3M,OANA,GAAA2D,GAAA,EACAE,EAAA,EACA+kB,GAAA,CAuBA,OAhBAzT,GAAA6R,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,QAAA0N,GAAAf,EAAA,GAAAiB,GAAAjB,EAAA,GAAAuS,IAAAxR,EAAAE,IAGAsR,EAAAyT,MAAA,SAAAhmB,GACA,MAAA0D,WAAArQ,QAAA2yB,IAAAhmB,EAAAuS,GAAAyT,GAGAzT,EAAA0X,aAAA,SAAAjqB,GACA,MAAA0D,WAAArQ,QAAA42B,EAAAjqB,EAAAuS,GAAA0X,GAGA1X,EAAArQ,KAAA,WACA,MAAA8nB,IAAAC,GAAA7F,QAAArjB,EAAAE,IAAA+kB,UAGAW,GAAApU,GAmBA,QAAA2X,IAAArW,GACA,kBACA,GAAAvd,GAAA8B,KAAA+xB,cACAC,EAAAhyB,KAAAiyB,YACA,OAAAD,KAAAE,IAAAh0B,EAAAka,gBAAA6Z,eAAAC,GACAh0B,EAAAga,cAAAuD,GACAvd,EAAA+a,gBAAA+Y,EAAAvW,IAIA,QAAA0W,IAAAC,GACA,kBACA,MAAApyB,MAAA+xB,cAAA9Y,gBAAAmZ,EAAAC,MAAAD,EAAAE,QAaA,QAAAA,MACA,UAAAC,IAGA,QAAAA,MACAvyB,KAAA4H,EAAA,OAAA4qB,IAAA5I,SAAA,IAuDA,QAAA6I,IAAAC,EAAAn1B,EAAAo1B,GAEA,MADAD,GAAAE,GAAAF,EAAAn1B,EAAAo1B,GACA,SAAAE,GACA,GAAAC,GAAAD,EAAAE,aACAD,SAAA9yB,MAAA,EAAA8yB,EAAAE,wBAAAhzB,QACA0yB,EAAAp4B,KAAA0F,KAAA6yB,IAKA,QAAAD,IAAAF,EAAAn1B,EAAAo1B,GACA,gBAAAM,GACA,GAAAC,GAAAt5B,EAAAi5B,KACAj5B,GAAAi5B,MAAAI,CACA,KACAP,EAAAp4B,KAAA0F,UAAAmzB,SAAA51B,EAAAo1B,GACK,QACL/4B,EAAAi5B,MAAAK,IAKA,QAAAE,IAAA7X,GACA,MAAAA,GAAAjI,OAAAuF,MAAA,SAAA1U,IAAA,SAAAa,GACA,GAAAyW,GAAA,GAAA1gB,EAAAiK,EAAA0W,QAAA,IAEA,OADA3gB,IAAA,IAAA0gB,EAAAzW,EAAAsC,MAAAvM,EAAA,GAAAiK,IAAAsC,MAAA,EAAAvM,KACY4gB,KAAA3W,EAAAyW,UAIZ,QAAA4X,IAAAC,GACA,kBACA,GAAAC,GAAAvzB,KAAAwzB,IACA,IAAAD,EAAA,CACA,OAAA/uB,GAAA+D,EAAA,EAAAxN,GAAA,EAAA+V,EAAAyiB,EAAAt4B,OAA6CsN,EAAAuI,IAAOvI,EACpD/D,EAAA+uB,EAAAhrB,GAAA+qB,EAAA3X,MAAAnX,EAAAmX,OAAA2X,EAAA3X,MAAAnX,EAAAiX,OAAA6X,EAAA7X,KAGA8X,IAAAx4B,GAAAyJ,EAFAxE,KAAAyzB,oBAAAjvB,EAAAmX,KAAAnX,EAAAkuB,SAAAluB,EAAAkvB,WAKA34B,EAAAw4B,EAAAt4B,OAAAF,QACAiF,MAAAwzB,OAIA,QAAAG,IAAAL,EAAA91B,EAAAk2B,GACA,GAAAE,GAAAC,GAAAx5B,eAAAi5B,EAAA3X,MAAA8W,GAAAG,EACA,iBAAA/vB,EAAA9H,EAAA43B,GACA,GAAAnuB,GAAA+uB,EAAAvzB,KAAAwzB,KAAAd,EAAAkB,EAAAp2B,EAAAzC,EAAA43B,EACA,IAAAY,EAAA,OAAAhrB,GAAA,EAAAuI,EAAAyiB,EAAAt4B,OAA0CsN,EAAAuI,IAAOvI,EACjD,IAAA/D,EAAA+uB,EAAAhrB,IAAAoT,OAAA2X,EAAA3X,MAAAnX,EAAAiX,OAAA6X,EAAA7X,KAIA,MAHAzb,MAAAyzB,oBAAAjvB,EAAAmX,KAAAnX,EAAAkuB,SAAAluB,EAAAkvB,SACA1zB,KAAAzB,iBAAAiG,EAAAmX,KAAAnX,EAAAkuB,WAAAluB,EAAAkvB,gBACAlvB,EAAAhH,QAIAwC,MAAAzB,iBAAA+0B,EAAA3X,KAAA+W,EAAAgB,GACAlvB,GAASmX,KAAA2X,EAAA3X,KAAAF,KAAA6X,EAAA7X,KAAAje,QAAAk1B,WAAAgB,WACTH,EACAA,EAAAhxB,KAAAiC,GADAxE,KAAAwzB,MAAAhvB,IA0BA,QAAAsvB,IAAAb,EAAAP,EAAArjB,EAAA0kB,GACA,GAAAb,GAAAt5B,EAAAi5B,KACAI,GAAAe,YAAAp6B,EAAAi5B,MACAj5B,EAAAi5B,MAAAI,CACA,KACA,MAAAP,GAAA1nB,MAAAqE,EAAA0kB,GACG,QACHn6B,EAAAi5B,MAAAK,GA8BA,QAAAe,OAuBA,QAAAC,MACA,SA8CA,QAAAC,IAAAnsB,EAAAosB,GACAp0B,KAAA+xB,cAAA/pB,EAAA+pB,cACA/xB,KAAAiyB,aAAAjqB,EAAAiqB,aACAjyB,KAAA2d,MAAA,KACA3d,KAAAq0B,QAAArsB,EACAhI,KAAAmzB,SAAAiB,EAmBA,QAAAE,IAAAtsB,EAAA2qB,EAAAl2B,EAAA83B,EAAAx3B,EAAAP,GASA,IARA,GACAgM,GADAzN,EAAA,EAEAy5B,EAAA7B,EAAA13B,OACAw5B,EAAAj4B,EAAAvB,OAKQF,EAAA05B,IAAgB15B,GACxByN,EAAAmqB,EAAA53B,KACAyN,EAAA2qB,SAAA32B,EAAAzB,GACAw5B,EAAAx5B,GAAAyN,GAEA/L,EAAA1B,GAAA,GAAAo5B,IAAAnsB,EAAAxL,EAAAzB,GAKA,MAAQA,EAAAy5B,IAAiBz5B,GACzByN,EAAAmqB,EAAA53B,MACAgC,EAAAhC,GAAAyN,GAKA,QAAAksB,IAAA1sB,EAAA2qB,EAAAl2B,EAAA83B,EAAAx3B,EAAAP,EAAAtC,GACA,GAAAa,GACAyN,EAKAmsB,EAJAC,KACAJ,EAAA7B,EAAA13B,OACAw5B,EAAAj4B,EAAAvB,OACA45B,EAAA,GAAAvwB,OAAAkwB,EAKA,KAAAz5B,EAAA,EAAaA,EAAAy5B,IAAiBz5B,GAC9ByN,EAAAmqB,EAAA53B,MACA85B,EAAA95B,GAAA45B,EAAAG,GAAA56B,EAAAI,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,GACAgC,IAAAC,GACA73B,EAAAhC,GAAAyN,EAEAosB,EAAAD,GAAAnsB,EAQA,KAAAzN,EAAA,EAAaA,EAAA05B,IAAgB15B,EAC7B45B,EAAAG,GAAA56B,EAAAI,KAAA0N,EAAAxL,EAAAzB,KAAAyB,IACAgM,EAAAosB,EAAAD,KACAJ,EAAAx5B,GAAAyN,EACAA,EAAA2qB,SAAA32B,EAAAzB,GACA65B,EAAAD,GAAA,MAEAl4B,EAAA1B,GAAA,GAAAo5B,IAAAnsB,EAAAxL,EAAAzB,GAKA,KAAAA,EAAA,EAAaA,EAAAy5B,IAAiBz5B,GAC9ByN,EAAAmqB,EAAA53B,KAAA65B,EAAAC,EAAA95B,MAAAyN,IACAzL,EAAAhC,GAAAyN,GAsGA,QAAAusB,IAAAnzB,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA+H,IAiDA,QAAAorB,IAAAvZ,GACA,kBACAzb,KAAAi1B,gBAAAxZ,IAIA,QAAAyZ,IAAA9C,GACA,kBACApyB,KAAAm1B,kBAAA/C,EAAAC,MAAAD,EAAAE,QAIA,QAAA8C,IAAA3Z,EAAAje,GACA,kBACAwC,KAAAkZ,aAAAuC,EAAAje,IAIA,QAAA63B,IAAAjD,EAAA50B,GACA,kBACAwC,KAAAs1B,eAAAlD,EAAAC,MAAAD,EAAAE,MAAA90B,IAIA,QAAA+3B,IAAA9Z,EAAAje,GACA,kBACA,GAAAsV,GAAAtV,EAAAwN,MAAAhL,KAAAsL,UACA,OAAAwH,EAAA9S,KAAAi1B,gBAAAxZ,GACAzb,KAAAkZ,aAAAuC,EAAA3I,IAIA,QAAA0iB,IAAApD,EAAA50B,GACA,kBACA,GAAAsV,GAAAtV,EAAAwN,MAAAhL,KAAAsL,UACA,OAAAwH,EAAA9S,KAAAm1B,kBAAA/C,EAAAC,MAAAD,EAAAE,OACAtyB,KAAAs1B,eAAAlD,EAAAC,MAAAD,EAAAE,MAAAxf,IA0BA,QAAA2iB,IAAAha,GACA,kBACAzb,KAAAuY,MAAAmd,eAAAja,IAIA,QAAAka,IAAAla,EAAAje,EAAAo4B,GACA,kBACA51B,KAAAuY,MAAAsd,YAAApa,EAAAje,EAAAo4B,IAIA,QAAAE,IAAAra,EAAAje,EAAAo4B,GACA,kBACA,GAAA9iB,GAAAtV,EAAAwN,MAAAhL,KAAAsL,UACA,OAAAwH,EAAA9S,KAAAuY,MAAAmd,eAAAja,GACAzb,KAAAuY,MAAAsd,YAAApa,EAAA3I,EAAA8iB,IAgBA,QAAAG,IAAAta,GACA,wBACAzb,MAAAyb,IAIA,QAAAua,IAAAva,EAAAje,GACA,kBACAwC,KAAAyb,GAAAje,GAIA,QAAAy4B,IAAAxa,EAAAje,GACA,kBACA,GAAAsV,GAAAtV,EAAAwN,MAAAhL,KAAAsL,UACA,OAAAwH,QAAA9S,MAAAyb,GACAzb,KAAAyb,GAAA3I,GAaA,QAAAojB,IAAApT,GACA,MAAAA,GAAAxP,OAAAuF,MAAA,SAGA,QAAAsd,IAAA3tB,GACA,MAAAA,GAAA2tB,WAAA,GAAAC,IAAA5tB,GAGA,QAAA4tB,IAAA5tB,GACAxI,KAAAq2B,MAAA7tB,EACAxI,KAAAs2B,OAAAJ,GAAA1tB,EAAAnK,aAAA,cAuBA,QAAAk4B,IAAA/tB,EAAA0hB,GAEA,IADA,GAAAsM,GAAAL,GAAA3tB,GAAAzN,GAAA,EAAA0J,EAAAylB,EAAAjvB,SACAF,EAAA0J,GAAA+xB,EAAA53B,IAAAsrB,EAAAnvB,IAGA,QAAA07B,IAAAjuB,EAAA0hB,GAEA,IADA,GAAAsM,GAAAL,GAAA3tB,GAAAzN,GAAA,EAAA0J,EAAAylB,EAAAjvB,SACAF,EAAA0J,GAAA+xB,EAAAx5B,OAAAktB,EAAAnvB,IAGA,QAAA27B,IAAAxM,GACA,kBACAqM,GAAAv2B,KAAAkqB,IAIA,QAAAyM,IAAAzM,GACA,kBACAuM,GAAAz2B,KAAAkqB,IAIA,QAAA0M,IAAA1M,EAAA1sB,GACA,mBACAA,EAAAwN,MAAAhL,KAAAsL,WAAAirB,GAAAE,IAAAz2B,KAAAkqB,IAmBA,QAAA2M,MACA72B,KAAA82B,YAAA,GAGA,QAAAC,IAAAv5B,GACA,kBACAwC,KAAA82B,YAAAt5B,GAIA,QAAAw5B,IAAAx5B,GACA,kBACA,GAAAsV,GAAAtV,EAAAwN,MAAAhL,KAAAsL,UACAtL,MAAA82B,YAAA,MAAAhkB,EAAA,GAAAA,GAaA,QAAAmkB,MACAj3B,KAAAk3B,UAAA,GAGA,QAAAC,IAAA35B,GACA,kBACAwC,KAAAk3B,UAAA15B,GAIA,QAAA45B,IAAA55B,GACA,kBACA,GAAAsV,GAAAtV,EAAAwN,MAAAhL,KAAAsL,UACAtL,MAAAk3B,UAAA,MAAApkB,EAAA,GAAAA,GAaA,QAAAukB,MACAr3B,KAAAs3B,aAAAt3B,KAAAu3B,WAAA7e,YAAA1Y,MAOA,QAAAw3B,MACAx3B,KAAAy3B,iBAAAz3B,KAAAu3B,WAAAG,aAAA13B,UAAAu3B,WAAAI,YAcA,QAAAC,MACA,YAWA,QAAA56B,MACA,GAAAgL,GAAAhI,KAAAu3B,UACAvvB,MAAA4Q,YAAA5Y,MAaA,QAAA63B,IAAArvB,EAAAmT,EAAAmc,GACA,GAAAC,GAAAC,GAAAxvB,GACAqqB,EAAAkF,EAAAE,WAEApF,GACAA,EAAA,GAAAA,GAAAlX,EAAAmc,IAEAjF,EAAAkF,EAAA75B,SAAAg6B,YAAA,SACAJ,GAAAjF,EAAAsF,UAAAxc,EAAAmc,EAAAM,QAAAN,EAAAO,YAAAxF,EAAAyF,OAAAR,EAAAQ,QACAzF,EAAAsF,UAAAxc,GAAA,OAGAnT,EAAAqvB,cAAAhF,GAGA,QAAA0F,IAAA5c,EAAAmc,GACA,kBACA,MAAAD,IAAA73B,KAAA2b,EAAAmc,IAIA,QAAAU,IAAA7c,EAAAmc,GACA,kBACA,MAAAD,IAAA73B,KAAA2b,EAAAmc,EAAA9sB,MAAAhL,KAAAsL,aAYA,QAAAmtB,IAAAC,EAAAC,GACA34B,KAAA44B,QAAAF,EACA14B,KAAA64B,SAAAF,EAGA,QAAAG,MACA,UAAAL,MAAAv6B,SAAAka,kBAAA2gB,IAoGA,QAAAC,IAAAxwB,EAAAywB,GACA,GAAAC,GAAA1wB,EAAA2wB,YACA,KAAAD,SAAAD,KAAAC,EAAAE,MAAAC,GAAA,SAAArvB,OAAA,WACA,OAAAkvB,GAGA,QAAAI,IAAA9wB,EAAAywB,GACA,GAAAC,GAAA1wB,EAAA2wB,YACA,KAAAD,SAAAD,KAAAC,EAAAE,MAAAG,GAAA,SAAAvvB,OAAA,WACA,OAAAkvB,GAGA,QAAAM,IAAAhxB,EAAAywB,GACA,GAAAC,GAAA1wB,EAAA2wB,YACA,KAAAD,SAAAD,IAAA,SAAAjvB,OAAA,WACA,OAAAkvB,GAGA,QAAAhmB,IAAA1K,EAAAywB,EAAAQ,GASA,QAAAP,GAAAQ,GACAD,EAAAL,MAAAO,GACAF,EAAA7b,MAAAG,QAAA/a,EAAAy2B,EAAA5b,MAAA4b,EAAA3b,MAGA2b,EAAA5b,OAAA6b,GAAA12B,EAAA02B,EAAAD,EAAA5b,OAGA,QAAA7a,GAAA02B,GACA,GAAA3+B,GAAAwN,EAAA9D,EAAAD,CAGA,IAAAi1B,EAAAL,QAAAO,GAAA,MAAA12B,IAEA,KAAAlI,IAAA6+B,GAEA,GADAp1B,EAAAo1B,EAAA7+B,GACAyJ,EAAAiX,OAAAge,EAAAhe,KAAA,CAKA,GAAAjX,EAAA40B,QAAAS,GAAA,MAAAC,IAAA92B,EAIAwB,GAAA40B,QAAAW,IACAv1B,EAAA40B,MAAAY,GACAx1B,EAAAoZ,MAAA3a,OACAuB,EAAA+uB,GAAAj5B,KAAA,YAAAkO,IAAA2qB,SAAA3uB,EAAAjH,MAAAiH,EAAAmuB,aACAiH,GAAA7+B,KAMAA,EAAAk+B,IACAz0B,EAAA40B,MAAAY,GACAx1B,EAAAoZ,MAAA3a,aACA22B,GAAA7+B,IAoBA,GAZA++B,GAAA,WACAL,EAAAL,QAAAS,KACAJ,EAAAL,MAAAW,GACAN,EAAA7b,MAAAG,QAAAkc,EAAAR,EAAA5b,MAAA4b,EAAA3b,MACAmc,EAAAP,MAMAD,EAAAL,MAAAG,GACAE,EAAAlG,GAAAj5B,KAAA,QAAAkO,IAAA2qB,SAAAsG,EAAAl8B,MAAAk8B,EAAA9G,OACA8G,EAAAL,QAAAG,GAAA,CAKA,IAJAE,EAAAL,MAAAS,GAGAK,EAAA,GAAA51B,OAAAG,EAAAg1B,EAAAS,MAAAj/B,QACAF,EAAA,EAAAwN,GAAA,EAAuBxN,EAAA0J,IAAO1J,GAC9ByJ,EAAAi1B,EAAAS,MAAAn/B,GAAAyC,MAAAlD,KAAAkO,IAAA2qB,SAAAsG,EAAAl8B,MAAAk8B,EAAA9G,UACAuH,IAAA3xB,GAAA/D,EAGA01B,GAAAj/B,OAAAsN,EAAA,GAGA,QAAA0xB,GAAAP,GAKA,IAJA,GAAA10B,GAAA00B,EAAAD,EAAAU,SAAAV,EAAAW,KAAA9/B,KAAA,KAAAo/B,EAAAD,EAAAU,WAAAV,EAAA7b,MAAAG,QAAA9a,GAAAw2B,EAAAL,MAAAiB,GAAA,GACAt/B,GAAA,EACA0J,EAAAy1B,EAAAj/B,SAEAF,EAAA0J,GACAy1B,EAAAn/B,GAAAT,KAAA,KAAA0K,EAIAy0B,GAAAL,QAAAiB,KACAZ,EAAAlG,GAAAj5B,KAAA,MAAAkO,IAAA2qB,SAAAsG,EAAAl8B,MAAAk8B,EAAA9G,OACA1vB,KAIA,QAAAA,KACAw2B,EAAAL,MAAAY,GACAP,EAAA7b,MAAA3a,aACA22B,GAAAX,EACA,QAAAl+B,KAAA6+B,GAAA,aACApxB,GAAA2wB,aApGA,GACAe,GADAN,EAAApxB,EAAA2wB,YAKAS,GAAAX,GAAAQ,EACAA,EAAA7b,SAAAsb,EAAA,EAAAO,EAAA3b,MA+HA,QAAAwc,IAAArB,EAAAxd,GACA,GAAA8e,GAAAC,CACA,mBACA,GAAAtB,GAAAI,GAAAt5B,KAAAi5B,GACAiB,EAAAhB,EAAAgB,KAKA,IAAAA,IAAAK,EAAA,CACAC,EAAAD,EAAAL,CACA,QAAAn/B,GAAA,EAAA0J,EAAA+1B,EAAAv/B,OAAwCF,EAAA0J,IAAO1J,EAC/C,GAAAy/B,EAAAz/B,GAAA0gB,SAAA,CACA+e,IAAAlzB,QACAkzB,EAAA/7B,OAAA1D,EAAA,EACA,QAKAm+B,EAAAgB,MAAAM,GAIA,QAAAC,IAAAxB,EAAAxd,EAAAje,GACA,GAAA+8B,GAAAC,CACA,sBAAAh9B,GAAA,SAAAwM,MACA,mBACA,GAAAkvB,GAAAI,GAAAt5B,KAAAi5B,GACAiB,EAAAhB,EAAAgB,KAKA,IAAAA,IAAAK,EAAA,CACAC,GAAAD,EAAAL,GAAA5yB,OACA,QAAAtC,IAAoByW,OAAAje,SAAyBzC,EAAA,EAAA0J,EAAA+1B,EAAAv/B,OAA2BF,EAAA0J,IAAO1J,EAC/E,GAAAy/B,EAAAz/B,GAAA0gB,SAAA,CACA+e,EAAAz/B,GAAAiK,CACA,OAGAjK,IAAA0J,GAAA+1B,EAAAj4B,KAAAyC,GAGAk0B,EAAAgB,MAAAM,GAsBA,QAAAE,IAAAC,EAAAlf,EAAAje,GACA,GAAAy7B,GAAA0B,EAAAC,GAOA,OALAD,GAAAv2B,KAAA,WACA,GAAA80B,GAAAI,GAAAt5B,KAAAi5B,IACAC,EAAA17B,QAAA07B,EAAA17B,WAA2Cie,GAAAje,EAAAwN,MAAAhL,KAAAsL,aAG3C,SAAA9C,GACA,MAAAgxB,IAAAhxB,EAAAywB,GAAAz7B,MAAAie,IAYA,QAAAof,IAAApf,GACA,kBACAzb,KAAAi1B,gBAAAxZ,IAIA,QAAAqf,IAAA1I,GACA,kBACApyB,KAAAm1B,kBAAA/C,EAAAC,MAAAD,EAAAE,QAIA,QAAAyI,IAAAtf,EAAAwS,EAAA+M,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAn7B,KAAA3B,aAAAod,EACA,OAAA0f,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAjN,EAAAgN,EAAAE,EAAAH,IAIA,QAAAI,IAAAhJ,EAAAnE,EAAA+M,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAn7B,KAAAq7B,eAAAjJ,EAAAC,MAAAD,EAAAE,MACA,OAAA6I,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAjN,EAAAgN,EAAAE,EAAAH,IAIA,QAAAM,IAAA7f,EAAAwS,EAAAzwB,GACA,GAAAy9B,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAAx9B,EAAAwC,KACA,cAAAg7B,MAAAh7B,MAAAi1B,gBAAAxZ,IACA0f,EAAAn7B,KAAA3B,aAAAod,GACA0f,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAjN,EAAAgN,EAAAE,EAAAI,EAAAP,KAIA,QAAAQ,IAAApJ,EAAAnE,EAAAzwB,GACA,GAAAy9B,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAAx9B,EAAAwC,KACA,cAAAg7B,MAAAh7B,MAAAm1B,kBAAA/C,EAAAC,MAAAD,EAAAE,QACA6I,EAAAn7B,KAAAq7B,eAAAjJ,EAAAC,MAAAD,EAAAE,OACA6I,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAjN,EAAAgN,EAAAE,EAAAI,EAAAP,KAYA,QAAAS,IAAArJ,EAAA50B,GACA,QAAA08B,KACA,GAAA1xB,GAAAxI,KAAAjF,EAAAyC,EAAAwN,MAAAxC,EAAA8C,UACA,OAAAvQ,IAAA,SAAAiK,GACAwD,EAAA8sB,eAAAlD,EAAAC,MAAAD,EAAAE,MAAAv3B,EAAAiK,KAIA,MADAk1B,GAAAwB,OAAAl+B,EACA08B,EAGA,QAAAyB,IAAAlgB,EAAAje,GACA,QAAA08B,KACA,GAAA1xB,GAAAxI,KAAAjF,EAAAyC,EAAAwN,MAAAxC,EAAA8C,UACA,OAAAvQ,IAAA,SAAAiK,GACAwD,EAAA0Q,aAAAuC,EAAA1gB,EAAAiK,KAIA,MADAk1B,GAAAwB,OAAAl+B,EACA08B,EAYA,QAAA0B,IAAA3C,EAAAz7B,GACA,kBACAw7B,GAAAh5B,KAAAi5B,GAAApb,OAAArgB,EAAAwN,MAAAhL,KAAAsL,YAIA,QAAAuwB,IAAA5C,EAAAz7B,GACA,MAAAA,MAAA,WACAw7B,GAAAh5B,KAAAi5B,GAAApb,MAAArgB,GAcA,QAAAs+B,IAAA7C,EAAAz7B,GACA,kBACA87B,GAAAt5B,KAAAi5B,GAAAkB,UAAA38B,EAAAwN,MAAAhL,KAAAsL,YAIA,QAAAywB,IAAA9C,EAAAz7B,GACA,MAAAA,MAAA,WACA87B,GAAAt5B,KAAAi5B,GAAAkB,SAAA38B,GAcA,QAAAw+B,IAAA/C,EAAAz7B,GACA,qBAAAA,GAAA,SAAAwM,MACA,mBACAsvB,GAAAt5B,KAAAi5B,GAAAmB,KAAA58B,GA4CA,QAAAy+B,IAAAxgB,GACA,OAAAA,EAAA,IAAAnI,OAAAuF,MAAA,SAAAmH,MAAA,SAAAhb,GACA,GAAAjK,GAAAiK,EAAA0W,QAAA,IAEA,OADA3gB,IAAA,IAAAiK,IAAAsC,MAAA,EAAAvM,KACAiK,GAAA,UAAAA,IAIA,QAAAk3B,IAAAjD,EAAAxd,EAAAiX,GACA,GAAAyJ,GAAAC,EAAAC,EAAAJ,GAAAxgB,GAAAud,GAAAM,EACA,mBACA,GAAAJ,GAAAmD,EAAAr8B,KAAAi5B,GACA1F,EAAA2F,EAAA3F,EAKAA,KAAA4I,IAAAC,GAAAD,EAAA5I,GAAAzpB,QAAAypB,GAAA9X,EAAAiX,GAEAwG,EAAA3F,GAAA6I,GAYA,QAAAE,IAAArD,GACA,kBACA,GAAAjxB,GAAAhI,KAAAu3B,UACA,QAAAx8B,KAAAiF,MAAAm5B,aAAA,IAAAp+B,IAAAk+B,EAAA,MACAjxB,MAAA4Q,YAAA5Y,OAwDA,QAAAu8B,IAAA9gB,EAAAwS,GACA,GAAAgN,GACAM,EACAL,CACA,mBACA,GAAA3iB,GAAAyf,GAAAh4B,MAAAyY,iBAAAzY,KAAA,MACAm7B,EAAA5iB,EAAAI,iBAAA8C,GACAuf,GAAAh7B,KAAAuY,MAAAmd,eAAAja,GAAAlD,EAAAI,iBAAA8C,GACA,OAAA0f,KAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAjN,EAAAgN,EAAAE,EAAAI,EAAAP,IAIA,QAAAwB,IAAA/gB,GACA,kBACAzb,KAAAuY,MAAAmd,eAAAja,IAIA,QAAAghB,IAAAhhB,EAAAwS,EAAA+M,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAnD,GAAAh4B,MAAAyY,iBAAAzY,KAAA,MAAA2Y,iBAAA8C,EACA,OAAA0f,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAjN,EAAAgN,EAAAE,EAAAH,IAIA,QAAA0B,IAAAjhB,EAAAwS,EAAAzwB,GACA,GAAAy9B,GACAM,EACAL,CACA,mBACA,GAAA3iB,GAAAyf,GAAAh4B,MAAAyY,iBAAAzY,KAAA,MACAm7B,EAAA5iB,EAAAI,iBAAA8C,GACAuf,EAAAx9B,EAAAwC,KAEA,OADA,OAAAg7B,IAAAh7B,KAAAuY,MAAAmd,eAAAja,GAAAuf,EAAAziB,EAAAI,iBAAA8C,IACA0f,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAjN,EAAAgN,EAAAE,EAAAI,EAAAP,IAcA,QAAA2B,IAAAlhB,EAAAje,EAAAo4B,GACA,QAAAsE,KACA,GAAA1xB,GAAAxI,KAAAjF,EAAAyC,EAAAwN,MAAAxC,EAAA8C,UACA,OAAAvQ,IAAA,SAAAiK,GACAwD,EAAA+P,MAAAsd,YAAApa,EAAA1gB,EAAAiK,GAAA4wB,IAIA,MADAsE,GAAAwB,OAAAl+B,EACA08B,EAWA,QAAA0C,IAAAp/B,GACA,kBACAwC,KAAA82B,YAAAt5B,GAIA,QAAAq/B,IAAAr/B,GACA,kBACA,GAAAw9B,GAAAx9B,EAAAwC,KACAA,MAAA82B,YAAA,MAAAkE,EAAA,GAAAA,GAkCA,QAAA8B,IAAApE,EAAAC,EAAAld,EAAAwd,GACAj5B,KAAA44B,QAAAF,EACA14B,KAAA64B,SAAAF,EACA34B,KAAA+8B,MAAAthB,EACAzb,KAAA46B,IAAA3B,EAGA,QAAA0B,IAAAlf,GACA,MAAAqd,MAAA6B,WAAAlf,GAGA,QAAAuhB,MACA,QAAA/D,GAuCA,QAAAgE,IAAAz0B,EAAAywB,GAEA,IADA,GAAAiE,KACAA,EAAA10B,EAAA2wB,iBAAA+D,IAAAjE,KACA,KAAAzwB,IAAA+uB,YACA,MAAA4F,IAAArf,KAAAX,KAAAggB,EAGA,OAAAD,GA0DA,QAAA9iB,IAAAgjB,EAAAC,EAAAx6B,GACA,GAAAhG,GAAAugC,EAAAv6B,EACA,qBAAAod,SAAApjB,KAAAwgC,EAAAx6B,IAAA,MAGA,QAAAwX,IAAA+iB,EAAAC,EAAAx6B,GACA,GAAAtC,GAAA68B,EAAAv6B,EACA,uBAAAod,SAAA1f,KAAA88B,EAAAx6B,IAAA,IAGA,QAAAy6B,IAAAnjB,GACA,GAAAsF,GAAAtF,EAAAsS,YAAA,CAEA,OADAtS,GAAA9C,UAAAoI,EAAArc,KAAAiU,MAAAoI,IACA,SAAA5c,GACA,MAAAsX,GAAAtX,GAAA4c,GAIA,QAAA8d,MACA,OAAAv9B,KAAAw9B,OAGA,QAAAC,IAAAC,EAAAvjB,GAQA,QAAAsjB,GAAAjvB,GACA,GAgBA3R,GAhBA6vB,EAAA,MAAAiR,EAAAxjB,EAAAqU,MAAArU,EAAAqU,MAAAxjB,MAAAmP,EAAAyjB,GAAAzjB,EAAA6R,SAAA2R,EACAtqB,EAAA,MAAAob,EAAAtU,EAAAsU,WAAAtU,EAAAsU,WAAAzjB,MAAAmP,EAAAyjB,GAAAC,GAAApP,EACAqP,EAAA16B,KAAAE,IAAAy6B,EAAA,GAAAC,EACAxlB,EAAAklB,IAAAO,IAAAP,IAAAp1B,GAAA8R,GAAAC,GACAsF,EAAAxF,EAAAwF,QACAue,EAAAve,EAAA,MACAwe,EAAAxe,IAAA1kB,OAAA,MACAmjC,GAAAjkB,EAAAsS,UAAA6Q,GAAAO,IAAA1jB,EAAArQ,QACAgvB,EAAAtqB,EAAAsqB,UAAAtqB,EAAAsqB,YAAAtqB,EACA3G,EAAAixB,EAAAv8B,UAAA,WAAAC,MAAA,OACAy9B,EAAAnB,EAAAv8B,UAAA,SAAAC,KAAAkwB,EAAAvS,GAAAkkB,QACAC,EAAArE,EAAAl9B,OACAwhC,EAAAtE,EAAAx9B,QAAAC,OAAA,KAAA8hC,KAAA,gBACAC,EAAAxE,EAAA39B,OAAA,QACAc,EAAA68B,EAAA39B,OAAA,QACAma,EAAAinB,IAAAO,IAAAP,IAAAgB,IAAA,IACAn+B,EAAAm9B,IAAAgB,IAAAhB,IAAAr1B,IAAAxL,EAAA,UAAAA,EAAA,QAEAgL,KAAAlL,MAAAkL,EAAApL,QAAAkiC,OAAA,gBACAH,KAAA,kBACAA,KAAA,kBAEAvE,IAAAt9B,MAAA4hC,GAEAE,IAAA9hC,MAAA4hC,EAAA7hC,OAAA,QACA8hC,KAAA,iBACAA,KAAA3hC,EAAA,IAAA4Z,EAAAsnB,GACAS,KAAAj+B,EAAA,QACAi+B,KAAAj+B,EAAA,SAEAnD,IAAAT,MAAA4hC,EAAA7hC,OAAA,QACA8hC,KAAA,eACAA,KAAA3hC,EAAA4Z,EAAAqnB,GACAU,KAAAj+B,EAAA,IACAi+B,KAAA,KAAAd,IAAAO,GAAA,MAAAP,IAAAp1B,GAAA,oBAEAkG,IAAAsqB,IACAjxB,IAAA8yB,WAAAnsB,GACAyrB,IAAAU,WAAAnsB,GACAiwB,IAAA9D,WAAAnsB,GACApR,IAAAu9B,WAAAnsB,GAEA8vB,IAAA3D,WAAAnsB,GACAgwB,KAAA,UAAAI,IACAJ,KAAA,qBAAA37B,GAA0C,MAAA2V,GAAA4lB,EAAAp+B,KAAAu3B,WAAAiG,QAAAY,EAAAv7B,KAE1C07B,EACAC,KAAA,UAAAI,IACAJ,KAAA,qBAAA37B,GAA0C,MAAA2V,GAAAxY,KAAAu3B,WAAAiG,QAAAY,IAAAv7B,MAG1Cy7B,EAAAthC,SAEA6K,EACA22B,KAAA,IAAAd,IAAAgB,IAAAhB,GAAAr1B,GACA,IAAAoO,EAAAooB,EAAA,IAAAX,EAAA,QAAAC,EAAA,IAAA1nB,EAAAooB,EACA,IAAAX,EAAA,IAAAznB,EAAAooB,EAAA,QAAAV,EAAA,IAAA1nB,EAAAooB,GAEA5E,EACAuE,KAAA,aACAA,KAAA,qBAAA37B,GAAwC,MAAA2V,GAAA4lB,IAAAv7B,KAExC47B,EACAD,KAAA3hC,EAAA,IAAA4Z,EAAAsnB,GAEA3gC,EACAohC,KAAA3hC,EAAA4Z,EAAAqnB,GACA1gC,KAAAiW,GAEAylB,EAAAlZ,OAAA2d,IACAiB,KAAA,eACAA,KAAA,gBACAA,KAAA,4BACAA,KAAA,cAAAd,IAAAr1B,GAAA,QAAAq1B,IAAAgB,GAAA,gBAEA5F,EACA10B,KAAA,WAA0BpE,KAAAw9B,OAAAY,IApF1B,GAAAR,MACAD,EAAA,KACAlP,EAAA,KACAsP,EAAA,EACAc,EAAA,EACAb,EAAA,CAsHA,OApCAP,GAAAtjB,MAAA,SAAAvS,GACA,MAAA0D,WAAArQ,QAAAkf,EAAAvS,EAAA61B,GAAAtjB,GAGAsjB,EAAAjP,MAAA,WACA,MAAAoP,GAAAkB,GAAAxkC,KAAAgR,WAAAmyB,GAGAA,EAAAG,cAAA,SAAAh2B,GACA,MAAA0D,WAAArQ,QAAA2iC,EAAA,MAAAh2B,KAAAk3B,GAAAxkC,KAAAsN,GAAA61B,GAAAG,EAAAt2B,SAGAm2B,EAAAE,WAAA,SAAA/1B,GACA,MAAA0D,WAAArQ,QAAA0iC,EAAA,MAAA/1B,EAAA,KAAAk3B,GAAAxkC,KAAAsN,GAAA61B,GAAAE,KAAAr2B,SAGAm2B,EAAAhP,WAAA,SAAA7mB,GACA,MAAA0D,WAAArQ,QAAAwzB,EAAA7mB,EAAA61B,GAAAhP,GAGAgP,EAAAsB,SAAA,SAAAn3B,GACA,MAAA0D,WAAArQ,QAAA8iC,EAAAc,GAAAj3B,EAAA61B,GAAAM,GAGAN,EAAAM,cAAA,SAAAn2B,GACA,MAAA0D,WAAArQ,QAAA8iC,GAAAn2B,EAAA61B,GAAAM,GAGAN,EAAAoB,cAAA,SAAAj3B,GACA,MAAA0D,WAAArQ,QAAA4jC,GAAAj3B,EAAA61B,GAAAoB,GAGApB,EAAAO,YAAA,SAAAp2B,GACA,MAAA0D,WAAArQ,QAAA+iC,GAAAp2B,EAAA61B,GAAAO,GAGAP,EAGA,QAAAuB,IAAA7kB,GACA,MAAAsjB,IAAAQ,GAAA9jB,GAGA,QAAA8kB,IAAA9kB,GACA,MAAAsjB,IAAAp1B,GAAA8R,GAGA,QAAA+kB,IAAA/kB,GACA,MAAAsjB,IAAAn1B,GAAA6R,GAGA,QAAAglB,IAAAhlB,GACA,MAAAsjB,IAAAiB,GAAAvkB,GAGA,QAAAilB,IAAAx9B,EAAAC,GACA,MAAAD,GAAAoG,SAAAnG,EAAAmG,OAAA,IAGA,QAAAq3B,IAAAC,GACA,MAAAA,GAAAC,OAAAC,GAAA,GAAAF,EAAArkC,OAGA,QAAAukC,IAAA3iC,EAAAiO,GACA,MAAAjO,GAAAiO,EAAAjO,EAGA,QAAAhB,IAAAyjC,GACA,SAAAA,EAAAC,OAAAE,GAAA,GAGA,QAAAA,IAAAl/B,EAAAuK,GACA,MAAA1H,MAAAE,IAAA/C,EAAAuK,EAAAvK,GAGA,QAAAm/B,IAAAl3B,GAEA,IADA,GAAA82B,GACAA,EAAA92B,EAAA82B,UAAA92B,EAAA82B,EAAA,EACA,OAAA92B,GAGA,QAAAm3B,IAAAn3B,GAEA,IADA,GAAA82B,GACAA,EAAA92B,EAAA82B,UAAA92B,EAAA82B,IAAArkC,OAAA,EACA,OAAAuN,GAiIA,QAAAo3B,IAAAh+B,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EACA,IAAAi+B,GAAAj+B,EAAAk+B,YACAC,EAAAl+B,EAAAi+B,YACAh1B,EAAA,IAGA,KAFAlJ,EAAAi+B,EAAAhhC,MACAgD,EAAAk+B,EAAAlhC,MACA+C,IAAAC,GACAiJ,EAAAlJ,EACAA,EAAAi+B,EAAAhhC,MACAgD,EAAAk+B,EAAAlhC,KAEA,OAAAiM,GAuCA,QAAAk1B,IAAAxjC,EAAA8iC,GACA,GAEA92B,GAEAy3B,EACAC,EACAnlC,EACA0J,EAPAs0B,EAAA,GAAAoH,IAAA3jC,GACA4jC,GAAA5jC,EAAAgB,QAAAu7B,EAAAv7B,MAAAhB,EAAAgB,OAEAkM,GAAAqvB,EAQA,KAFA,MAAAuG,MAAAe,IAEA73B,EAAAkB,EAAA7K,OAEA,GADAuhC,IAAA53B,EAAAhL,OAAAgL,EAAAhM,KAAAgB,QACA0iC,EAAAZ,EAAA92B,EAAAhM,SAAAiI,EAAAy7B,EAAAjlC,QAEA,IADAuN,EAAA82B,SAAA,GAAAh7B,OAAAG,GACA1J,EAAA0J,EAAA,EAAqB1J,GAAA,IAAQA,EAC7B2O,EAAAnH,KAAA09B,EAAAz3B,EAAA82B,SAAAvkC,GAAA,GAAAolC,IAAAD,EAAAnlC,KACAklC,EAAAj4B,OAAAQ,EACAy3B,EAAAK,MAAA93B,EAAA83B,MAAA,CAKA,OAAAvH,GAAAwH,WAAAC,IAGA,QAAAC,MACA,MAAAT,IAAAhgC,MAAAugC,WAAAG,IAGA,QAAAL,IAAAx9B,GACA,MAAAA,GAAAy8B,SAGA,QAAAoB,IAAAl4B,GACAA,EAAAhM,KAAAgM,EAAAhM,UAGA,QAAAgkC,IAAAh4B,GACA,GAAAm4B,GAAA,CACA,GAAAn4B,GAAAm4B,gBACAn4B,IAAAR,SAAAQ,EAAAm4B,YAGA,QAAAR,IAAA3jC,GACAwD,KAAAxD,OACAwD,KAAAsgC,MACAtgC,KAAA2gC,OAAA,EACA3gC,KAAAgI,OAAA,KAkBA,QAAA44B,IAAApjC,GACAwC,KAAA4H,EAAApK,EACAwC,KAAAgC,KAAA,KA0BA,QAAA6+B,IAAAj/B,EAAAC,GACA,GAAA4L,GAAA5L,EAAAhF,EAAA+E,EAAA/E,EACA6Q,EAAA7L,EAAAtB,EAAAqB,EAAArB,EACAugC,EAAAl/B,EAAAsJ,EAAArJ,EAAAqJ,CACA,OAAA41B,KAAA,KAAArzB,IAAAC,IAIA,QAAAqzB,IAAA5e,EAAAwE,GACA,GAAAqa,GAGAC,EACAC,EAHAC,EAAA,KACAC,EAAAjf,EAAAxgB,IAIA,QAAAglB,EAAA1rB,QACA,OAAA+lC,EAAAK,GAAA1a,EAAA,GAAoC,MACpC,QAAAqa,EAAAM,GAAA3a,EAAA,GAAAA,EAAA,GAA0C,MAC1C,QAAAqa,EAAAO,GAAA5a,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,KAAAya,GACAF,EAAAE,EAAAx5B,EAAAq5B,EAAAG,EAAAp/B,KACAg/B,GAAAH,GAAAG,EAAAE,GAgBAC,EAAAC,GAbAD,GAAAhf,EAAAqf,KAAAL,IAAAn/B,KAAA,MACAmgB,EAAAxgB,KAAAwgB,EAAAqf,KAAA,KAEA7a,EAAApkB,KAAA2+B,GACAF,EAAAD,GAAA5e,EAAAwE,GACAA,EAAA9nB,MAGAsjB,EAAAxgB,MAAAy/B,EAAAp/B,KAAAmgB,EAAAxgB,KAAAwgB,EAAAxgB,KAAAy/B,IACAA,EAAAp/B,KAAA,KAAAmgB,EAAAxgB,KAAAwgB,EAAAqf,KAAAJ,GACAD,EAAAhf,EAAAqf,KAAAL,EAAAn/B,KAAAi/B,GAKAG,EAAAH,CAIA,OADA9e,GAAAqf,KAAAL,EACAH,EAGA,QAAAK,IAAAz/B,GACA,OACA/E,EAAA+E,EAAA/E,EACA0D,EAAAqB,EAAArB,EACA2K,EAAAtJ,EAAAsJ,GAIA,QAAAo2B,IAAA1/B,EAAAC,GACA,GAAAgH,GAAAjH,EAAA/E,EAAAiM,EAAAlH,EAAArB,EAAAsM,EAAAjL,EAAAsJ,EACAkB,EAAAvK,EAAAhF,EAAAwP,EAAAxK,EAAAtB,EAAAkhC,EAAA5/B,EAAAqJ,EACAw2B,EAAAt1B,EAAAvD,EAAA84B,EAAAt1B,EAAAvD,EAAA84B,EAAAH,EAAA50B,EACAoC,EAAA7L,KAAA8C,KAAAw7B,IAAAC,IACA,QACA9kC,GAAAgM,EAAAuD,EAAAs1B,EAAAzyB,EAAA2yB,GAAA,EACArhC,GAAAuI,EAAAuD,EAAAs1B,EAAA1yB,EAAA2yB,GAAA,EACA12B,GAAA+D,EAAApC,EAAA40B,GAAA,GAIA,QAAAF,IAAA3/B,EAAAC,EAAAiJ,GACA,GAAAjC,GAAAjH,EAAA/E,EAAAiM,EAAAlH,EAAArB,EAAAsM,EAAAjL,EAAAsJ,EACAkB,EAAAvK,EAAAhF,EAAAwP,EAAAxK,EAAAtB,EAAAkhC,EAAA5/B,EAAAqJ,EACAoB,EAAAxB,EAAAjO,EAAA0P,EAAAzB,EAAAvK,EAAAshC,EAAA/2B,EAAAI,EACA42B,EAAA,GAAAj5B,EAAAuD,GACA1F,EAAA,GAAAoC,EAAAuD,GACA01B,EAAA,GAAAN,EAAA50B,GACAc,EAAA9E,IAAAC,IAAA+D,IAAAT,IAAAC,IAAAo1B,IACAO,EAAA,GAAAn5B,EAAAyD,GACA7F,EAAA,GAAAqC,EAAAyD,GACA01B,EAAA,GAAAJ,EAAAh1B,GACAxQ,EAAAwM,IAAAC,IAAA+D,IAAAP,IAAAC,IAAAs1B,IACAK,EAAAF,EAAAt7B,EAAAo7B,EAAAr7B,EACAmT,GAAAlT,EAAArK,EAAAoK,EAAAkH,GAAAu0B,EAAAr5B,EACAiR,GAAArT,EAAAs7B,EAAAr7B,EAAAu7B,GAAAC,EACAroB,GAAAmoB,EAAAr0B,EAAAm0B,EAAAzlC,GAAA6lC,EAAAp5B,EACAiR,GAAA+nB,EAAAG,EAAAD,EAAAD,GAAAG,EACAxb,EAAA5M,IAAAC,IAAA,EACA4M,EAAA,GAAA/M,EAAAE,EAAAD,EAAAE,EAAAlN,GACA8J,EAAAiD,IAAAC,IAAAhN,IACA3B,IAAAyb,EAAAvjB,KAAA8C,KAAAygB,IAAA,EAAAD,EAAA/P,KAAA,EAAA+P,EACA,QACA7pB,EAAA+c,EAAAE,EAAA5O,EAAArC,EACAtI,EAAAsZ,EAAAE,EAAA7O,EAAApC,EACAoC,KAIA,QAAAi3B,IAAAvgC,EAAAC,EAAAiJ,GACA,GAAAs3B,GAAAxgC,EAAA/E,EACAwlC,EAAAzgC,EAAArB,EACA+hC,EAAAzgC,EAAAqJ,EAAAJ,EAAAI,EACAq3B,EAAA3gC,EAAAsJ,EAAAJ,EAAAI,EACAuC,EAAA5L,EAAAhF,EAAAulC,EACA10B,EAAA7L,EAAAtB,EAAA8hC,EACAG,EAAA/0B,IAAAC,GACA,IAAA80B,EAAA,CACA,GAAA3lC,GAAA,KAAA0lC,OAAAD,QAAA,EAAAE,GACAjiC,EAAA6C,KAAA8C,KAAA9C,KAAAE,IAAA,IAAAg/B,GAAAC,EAAAC,IAAAD,GAAAC,GAAAD,EAAAD,OAAA,EAAAE,EACA13B,GAAAjO,EAAAulC,EAAAvlC,EAAA4Q,EAAAlN,EAAAmN,EACA5C,EAAAvK,EAAA8hC,EAAAxlC,EAAA6Q,EAAAnN,EAAAkN,MAEA3C,GAAAjO,EAAAulC,EAAAG,EACAz3B,EAAAvK,EAAA8hC,EAIA,QAAAI,IAAA7gC,EAAAC,GACA,GAAA4L,GAAA5L,EAAAhF,EAAA+E,EAAA/E,EACA6Q,EAAA7L,EAAAtB,EAAAqB,EAAArB,EACAugC,EAAAl/B,EAAAsJ,EAAArJ,EAAAqJ,CACA,OAAA41B,KAAArzB,IAAAC,IAGA,QAAAg1B,IAAA1B,EAAAnkC,EAAA0D,GACA,GAAAkN,GAAAuzB,EAAAnkC,IACA6Q,EAAAszB,EAAAzgC,GACA,OAAAkN,KAAAC,IAGA,QAAAi1B,IAAA3B,GACAhhC,KAAA4H,EAAAo5B,EACAhhC,KAAAgC,KAAA,KACAhC,KAAA4iC,SAAA,KAGA,QAAAC,IAAAC,GACA,KAAAr+B,EAAAq+B,EAAA7nC,QAAA,QAEA,IAAA2G,GAAAC,EAAAiJ,EAAArG,CAIA,IADA7C,EAAAkhC,EAAA,GAAAlhC,EAAA/E,EAAA,EAAA+E,EAAArB,EAAA,IACAkE,EAAA,SAAA7C,GAAAsJ,CAIA,IADArJ,EAAAihC,EAAA,GAAAlhC,EAAA/E,GAAAgF,EAAAqJ,EAAArJ,EAAAhF,EAAA+E,EAAAsJ,EAAArJ,EAAAtB,EAAA,IACAkE,EAAA,SAAA7C,GAAAsJ,EAAArJ,EAAAqJ,CAGAi3B,IAAAtgC,EAAAD,EAAAkJ,EAAAg4B,EAAA,GAGA,IAMAz0B,GAAAC,EAAAvT,EAAAwN,EAAAkO,EAAAssB,EAAAC,EANAC,EAAArhC,EAAAsJ,EAAAtJ,EAAAsJ,EACAg4B,EAAArhC,EAAAqJ,EAAArJ,EAAAqJ,EACAi4B,EAAAr4B,EAAAI,EAAAJ,EAAAI,EACAk4B,EAAAH,EAAAC,EAAAC,EACAh2B,EAAA81B,EAAArhC,EAAA/E,EAAAqmC,EAAArhC,EAAAhF,EAAAsmC,EAAAr4B,EAAAjO,EACAuQ,EAAA61B,EAAArhC,EAAArB,EAAA2iC,EAAArhC,EAAAtB,EAAA4iC,EAAAr4B,EAAAvK,CAIAqB,GAAA,GAAA+gC,IAAA/gC,GAAAC,EAAA,GAAA8gC,IAAA9gC,GAAAiJ,EAAA,GAAA63B,IAAA73B,GACAlJ,EAAAI,KAAA8I,EAAA83B,SAAA/gC,EACAA,EAAAG,KAAAJ,EAAAghC,SAAA93B,EACAA,EAAA9I,KAAAH,EAAA+gC,SAAAhhC,CAGAyhC,GAAA,IAAAtoC,EAAA,EAAmBA,EAAA0J,IAAO1J,EAAA,CAI1B,GAHAonC,GAAAvgC,EAAAgG,EAAA/F,EAAA+F,EAAAkD,EAAAg4B,EAAA/nC,IAAA+P,EAAA,GAAA63B,IAAA73B,IAGA2L,EAAA7U,EAAAghC,aAAAr6B,EAAA1G,EAAAG,OAGA,GAAAygC,GAAAl6B,EAAAX,EAAAkD,EAAAlD,GAAA,CACAhG,EAAAC,IAAA0G,IAAAxN,CACA,SAAAsoC,QAKA,CACAN,EAAAx6B,EAAAX,EAAAsD,EAAA83B,EAAAvsB,EAAA7O,EAAAsD,CACA,GACA,IAAA63B,GAAAC,EAAA,CACA,GAAAP,GAAAl6B,EAAAX,EAAAkD,EAAAlD,GAAA,CACA/F,EAAA0G,EAAA3G,EAAAI,KAAAH,IAAA+gC,SAAAhhC,IAAA7G,CACA,SAAAsoC,GAEA96B,IAAAvG,KAAA+gC,GAAAx6B,EAAAX,EAAAsD,MACS,CACT,GAAAu3B,GAAAhsB,EAAA7O,EAAAkD,EAAAlD,GAAA,CACAhG,EAAA6U,EAAA7U,EAAAI,KAAAH,IAAA+gC,SAAAhhC,IAAA7G,CACA,SAAAsoC,GAEA5sB,IAAAmsB,SAAAI,GAAAvsB,EAAA7O,EAAAsD,QAEO3C,IAAAkO,EAAAzU,MAaP,IATA8I,EAAA83B,SAAAhhC,EAAAkJ,EAAA9I,KAAAH,EAAAD,EAAAI,KAAAH,EAAA+gC,SAAA/gC,EAAAiJ,EAGAs4B,GAAAD,EAAAr4B,EAAAlD,EAAAsD,EAAAJ,EAAAlD,EAAAsD,EACAiC,GAAAg2B,EAAAr4B,EAAAlD,EAAA/K,EACAuQ,GAAA+1B,EAAAr4B,EAAAlD,EAAArH,EAGA0iC,EAAAP,GAAA9gC,EAAAgG,EAAAyG,EAAAlB,EAAAi2B,EAAA90B,EAAAlB,EAAAg2B,IACAt4B,IAAA9I,QAAAH,IACAshC,EAAAT,GAAA53B,EAAAlD,EAAAyG,EAAAC,IAAA20B,IACArhC,EAAAkJ,EAAAm4B,EAAAE,EAGAthC,GAAAD,EAAAI,KAImB,IAAnBJ,GAAAC,EAAA+F,GAAAkD,EAAAjJ,GAAmBiJ,IAAA9I,QAAAH,GAAAD,EAAAW,KAAAuI,EAAAlD,EAGnB,KAH2DkD,EAAAw4B,GAAA1hC,GAG3D7G,EAAA,EAAaA,EAAA0J,IAAO1J,EAAA6G,EAAAkhC,EAAA/nC,GAAA6G,EAAA/E,GAAAiO,EAAAjO,EAAA+E,EAAArB,GAAAuK,EAAAvK,CAEpB,OAAAuK,GAAAI,EAQA,QAAAq4B,IAAA3gC,GACA,aAAAA,EAAA,KAAA4gC,GAAA5gC,GAGA,QAAA4gC,IAAA5gC,GACA,qBAAAA,GAAA,SAAAoH,MACA,OAAApH,GAGA,QAAA6gC,MACA,SASA,QAAAC,IAAA7gC,GACA,MAAAO,MAAA8C,KAAArD,EAAArF,OAuCA,QAAAmmC,IAAAx0B,GACA,gBAAA3G,GACAA,EAAA82B,WACA92B,EAAA0C,EAAA9H,KAAAE,IAAA,GAAA6L,EAAA3G,IAAA,KAKA,QAAAo7B,IAAA/W,EAAApW,GACA,gBAAAjO,GACA,GAAA82B,EAAA92B,EAAA82B,SAAA,CACA,GAAAA,GACAvkC,EAGA6P,EAFAnG,EAAA66B,EAAArkC,OACAiQ,EAAA2hB,EAAArkB,GAAAiO,GAAA,CAGA,IAAAvL,EAAA,IAAAnQ,EAAA,EAAwBA,EAAA0J,IAAO1J,EAAAukC,EAAAvkC,GAAAmQ,IAE/B,IADAN,EAAAi4B,GAAAvD,GACAp0B,EAAA,IAAAnQ,EAAA,EAAwBA,EAAA0J,IAAO1J,EAAAukC,EAAAvkC,GAAAmQ,IAC/B1C,GAAA0C,EAAAN,EAAAM,IAKA,QAAA24B,IAAAptB,GACA,gBAAAjO,GACA,GAAAR,GAAAQ,EAAAR,MACAQ,GAAA0C,GAAAuL,EACAzO,IACAQ,EAAA3L,EAAAmL,EAAAnL,EAAA4Z,EAAAjO,EAAA3L,EACA2L,EAAAjI,EAAAyH,EAAAzH,EAAAkW,EAAAjO,EAAAjI,IA+EA,QAAAujC,IAAAjhC,GACA,MAAAA,GAAAo2B,GAGA,QAAA8K,IAAAlhC,GACA,MAAAA,GAAAmhC,SA8DA,QAAAC,IAAAriC,EAAAC,GACA,MAAAD,GAAAoG,SAAAnG,EAAAmG,OAAA,IAWA,QAAAk8B,IAAApxB,GACA,GAAAwsB,GAAAxsB,EAAAwsB,QACA,OAAAA,KAAA,GAAAxsB,EAAA9N,EAIA,QAAAm/B,IAAArxB,GACA,GAAAwsB,GAAAxsB,EAAAwsB,QACA,OAAAA,OAAArkC,OAAA,GAAA6X,EAAA9N,EAKA,QAAAo/B,IAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,GAAAD,EAAAvpC,EAAAspC,EAAAtpC,EACAupC,GAAAx5B,GAAA05B,EACAF,EAAAvxB,GAAAwxB,EACAF,EAAAv5B,GAAA05B,EACAF,EAAA9uB,GAAA+uB,EACAD,EAAAxzB,GAAAyzB,EAMA,QAAAE,IAAA3xB,GAMA,IALA,GAIAjY,GAJA0pC,EAAA,EACAC,EAAA,EACAlF,EAAAxsB,EAAAwsB,SACAvkC,EAAAukC,EAAArkC,SAEAF,GAAA,GACAF,EAAAykC,EAAAvkC,GACAF,EAAA2a,GAAA+uB,EACA1pC,EAAAiW,GAAAyzB,EACAA,GAAA1pC,EAAAkY,GAAAyxB,GAAA3pC,EAAAiQ,GAMA,QAAA45B,IAAAC,EAAA7xB,EAAA8xB,GACA,MAAAD,GAAA/iC,EAAAoG,SAAA8K,EAAA9K,OAAA28B,EAAA/iC,EAAAgjC,EAGA,QAAAC,IAAAr8B,EAAAzN,GACAiF,KAAA4H,EAAAY,EACAxI,KAAAgI,OAAA,KACAhI,KAAAs/B,SAAA,KACAt/B,KAAA0mB,EAAA,KACA1mB,KAAA4B,EAAA5B,KACAA,KAAAwV,EAAA,EACAxV,KAAA8Q,EAAA,EACA9Q,KAAA8K,EAAA,EACA9K,KAAA+S,EAAA,EACA/S,KAAAgF,EAAA,KACAhF,KAAAjF,IAKA,QAAA+pC,IAAA/L,GASA,IARA,GACAvwB,GAEAy3B,EACAX,EACAvkC,EACA0J,EANAqD,EAAA,GAAA+8B,IAAA9L,EAAA,GAEArvB,GAAA5B,GAMAU,EAAAkB,EAAA7K,OACA,GAAAygC,EAAA92B,EAAAZ,EAAA03B,SAEA,IADA92B,EAAA82B,SAAA,GAAAh7B,OAAAG,EAAA66B,EAAArkC,QACAF,EAAA0J,EAAA,EAAqB1J,GAAA,IAAQA,EAC7B2O,EAAAnH,KAAA09B,EAAAz3B,EAAA82B,SAAAvkC,GAAA,GAAA8pC,IAAAvF,EAAAvkC,OACAklC,EAAAj4B,OAAAQ,CAMA,QADAV,EAAAE,OAAA,GAAA68B,IAAA,SAAAvF,UAAAx3B,GACAA,EA8JA,QAAAi9B,IAAAC,EAAAh9B,EAAAW,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,GAEAwT,GACA2oB,EAEAC,EAEAz3B,EAAAC,EAEAy3B,EACAC,EACAC,EACAC,EACAC,EACAv0B,EACArB,EAfAzS,KACAwM,EAAA1B,EAAAs3B,SAGAkG,EAAA,EAEA/gC,EAAAiF,EAAAzO,OAEAuC,EAAAwK,EAAAxK,MASAgoC,EAAA/gC,GAAA,CAQA,IAPAgJ,EAAA5E,EAAAF,EAAA+E,EAAA5E,EAAAF,EACAw8B,EAAAC,EAAAF,EAAAz7B,EAAA87B,GAAAhoC,MACAwT,EAAA5N,KAAAE,IAAAoK,EAAAD,IAAAC,IAAAlQ,EAAAwnC,GACAr1B,EAAAw1B,IAAAn0B,EACAu0B,EAAAniC,KAAAE,IAAA+hC,EAAA11B,IAAAy1B,GAGAF,EAAAM,EAAA,EAAqBN,EAAAzgC,IAAQygC,EAAA,CAM7B,GALAC,GAAAF,EAAAv7B,EAAAw7B,GAAA1nC,MACAynC,EAAAG,MAAAH,GACAA,EAAAI,MAAAJ,GACAt1B,EAAAw1B,IAAAn0B,EACAs0B,EAAAliC,KAAAE,IAAA+hC,EAAA11B,IAAAy1B,GACAE,EAAAC,EAAA,CAAgCJ,GAAAF,CAAuB,OACvDM,EAAAD,EAIApoC,EAAAqF,KAAA+Z,GAAqB9e,MAAA2nC,EAAAM,KAAAh4B,EAAAC,EAAA4xB,SAAA51B,EAAApC,MAAAk+B,EAAAN,KACrB5oB,EAAAmpB,KAAAC,GAAAppB,EAAA3T,EAAAC,EAAAC,EAAArL,EAAAoL,GAAA8E,EAAAy3B,EAAA3nC,EAAAsL,GACA68B,GAAArpB,EAAA3T,EAAAC,EAAApL,EAAAmL,GAAA8E,EAAA03B,EAAA3nC,EAAAqL,EAAAC,GACAtL,GAAA2nC,EAAAK,EAAAN,EAGA,MAAAhoC,GA2OA,QAAA0oC,IAAA/iC,GACA,MAAAA,GAAAhG,EAAAgG,EAAAgjC,GAGA,QAAAC,IAAAjjC,GACA,MAAAA,GAAAtC,EAAAsC,EAAAkjC,GA0FA,QAAAC,IAAAnjC,EAAA9H,GACA,MAAAA,GAGA,QAAAkrC,IAAAC,EAAAC,GACA,GAAA39B,GAAA09B,EAAAzlC,IAAA0lC,EACA,KAAA39B,EAAA,SAAAwB,OAAA,YAAAm8B,EACA,OAAA39B,GA6GA,QAAA49B,IAAAvjC,GACA,MAAAA,GAAAhG,EAGA,QAAAwpC,IAAAxjC,GACA,MAAAA,GAAAtC,EAqUA,QAAA+lC,MACA1sC,EAAAi5B,MAAA0T,2BAmBA,QAAAC,IAAAC,EAAAC,GACA,GAAA3N,GAAA0N,EAAAvoC,SAAAka,gBACAuuB,EAAArqC,GAAAmqC,GAAAlT,GAAA,sBACAmT,KACAC,EAAApT,GAAA,aAAAqT,IAAA,GACAhoB,WAAA,WAA2B+nB,EAAApT,GAAA,oBAAuC,IAElE,iBAAAwF,GACA4N,EAAApT,GAAA,0BAEAwF,EAAAxgB,MAAAsuB,cAAA9N,EAAA+N,iBACA/N,GAAA+N,YAUA,QAAAC,IAAA1nC,EAAAsc,EAAAqrB,EAAA/N,EAAAgO,EAAApqC,EAAA0D,EAAAkN,EAAAC,EAAA0N,GACApb,KAAAX,SACAW,KAAA2b,OACA3b,KAAAgnC,UACAhnC,KAAAknC,WAAAjO,EACAj5B,KAAAinC,SACAjnC,KAAAnD,IACAmD,KAAAO,IACAP,KAAAyN,KACAzN,KAAA0N,KACA1N,KAAA4H,EAAAwT,EASA,QAAA+rB,MACA,OAAAvtC,EAAAi5B,MAAAuU,OAGA,QAAAC,MACA,MAAArnC,MAAAu3B,WAGA,QAAA+P,IAAAzkC,GACA,aAAAA,GAAsBhG,EAAAjD,EAAAi5B,MAAAh2B,EAAA0D,EAAA3G,EAAAi5B,MAAAtyB,GAAuCsC,EAsI7D,QAAA0kC,IAAA1kC,GACA,MAAAA,GAAA,GAGA,QAAA2kC,IAAA3kC,GACA,MAAAA,GAAA,GAGA,QAAA4kC,MACAznC,KAAA4H,EAAA,KAGA,QAAA8/B,IAAAl/B,GACAA,EAAA+a,EACA/a,EAAAmO,EACAnO,EAAA2Z,EACA3Z,EAAAm/B,EACAn/B,EAAAo/B,EACAp/B,EAAAq/B,EAAA,KAuLA,QAAAC,IAAAhgC,EAAAU,GACA,GAAAkG,GAAAlG,EACAmC,EAAAnC,EAAAm/B,EACA3/B,EAAA0G,EAAA6U,CAEAvb,GACAA,EAAAma,IAAAzT,EAAA1G,EAAAma,EAAAxX,EACA3C,EAAA2/B,EAAAh9B,EAEA7C,EAAAF,EAAA+C,EAGAA,EAAA4Y,EAAAvb,EACA0G,EAAA6U,EAAA5Y,EACA+D,EAAAi5B,EAAAh9B,EAAAwX,EACAzT,EAAAi5B,IAAAj5B,EAAAi5B,EAAApkB,EAAA7U,GACA/D,EAAAwX,EAAAzT,EAGA,QAAAq5B,IAAAjgC,EAAAU,GACA,GAAAkG,GAAAlG,EACAmC,EAAAnC,EAAA2Z,EACAna,EAAA0G,EAAA6U,CAEAvb,GACAA,EAAAma,IAAAzT,EAAA1G,EAAAma,EAAAxX,EACA3C,EAAA2/B,EAAAh9B,EAEA7C,EAAAF,EAAA+C,EAGAA,EAAA4Y,EAAAvb,EACA0G,EAAA6U,EAAA5Y,EACA+D,EAAAyT,EAAAxX,EAAAg9B,EACAj5B,EAAAyT,IAAAzT,EAAAyT,EAAAoB,EAAA7U,GACA/D,EAAAg9B,EAAAj5B,EAGA,QAAAs5B,IAAAx/B,GACA,KAAAA,EAAA2Z,GAAA3Z,IAAA2Z,CACA,OAAA3Z,GAGA,QAAAy/B,IAAAvJ,EAAAr2B,EAAAyO,EAAAC,GACA,GAAAmxB,IAAA,WACA3qC,EAAA4qC,GAAA5lC,KAAA2lC,GAAA,CAOA,OANAA,GAAAxJ,OACAwJ,EAAA7/B,QACAyO,GAAAsxB,GAAAF,EAAAxJ,EAAAr2B,EAAAyO,GACAC,GAAAqxB,GAAAF,EAAA7/B,EAAAq2B,EAAA3nB,GACAzZ,GAAAohC,EAAAnhC,OAAA8qC,UAAA9lC,KAAAhF,GACAD,GAAA+K,EAAA9K,OAAA8qC,UAAA9lC,KAAAhF,GACA2qC,EAGA,QAAAI,IAAA5J,EAAA5nB,EAAAC,GACA,GAAAmxB,IAAApxB,EAAAC,EAEA,OADAmxB,GAAAxJ,OACAwJ,EAGA,QAAAE,IAAAF,EAAAxJ,EAAAr2B,EAAAkgC,GACAL,EAAA,IAAAA,EAAA,GAIGA,EAAAxJ,OAAAr2B,EACH6/B,EAAA,GAAAK,EAEAL,EAAA,GAAAK,GANAL,EAAA,GAAAK,EACAL,EAAAxJ,OACAwJ,EAAA7/B,SASA,QAAAmgC,IAAAN,EAAAv/B,EAAAC,EAAAC,EAAAC,GACA,GAUAoC,GAVAtJ,EAAAsmC,EAAA,GACArmC,EAAAqmC,EAAA,GACA9F,EAAAxgC,EAAA,GACAygC,EAAAzgC,EAAA,GACA6mC,EAAA5mC,EAAA,GACA6mC,EAAA7mC,EAAA,GACAiQ,EAAA,EACAC,EAAA,EACAtE,EAAAg7B,EAAArG,EACA10B,EAAAg7B,EAAArG,CAIA,IADAn3B,EAAAvC,EAAAy5B,EACA30B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,GAIA,GADAA,EAAArC,EAAAu5B,EACA30B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,GAIA,GADAA,EAAAtC,EAAAy5B,EACA30B,KAAAxC,EAAA,IAEA,GADAA,GAAAwC,EACAA,EAAA,GACA,GAAAxC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,OACG,IAAAwC,EAAA,GACH,GAAAxC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,GAIA,GADAA,EAAApC,EAAAu5B,EACA30B,KAAAxC,EAAA,IAEA,GADAA,GAAAwC,EACAA,EAAA,GACA,GAAAxC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,OACG,IAAAwC,EAAA,GACH,GAAAxC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,GAGA,QAAA4G,EAAA,GAAAC,EAAA,KAEAD,EAAA,IAAAo2B,EAAA,IAAA9F,EAAAtwB,EAAArE,EAAA40B,EAAAvwB,EAAApE,IACAqE,EAAA,IAAAm2B,EAAA,IAAA9F,EAAArwB,EAAAtE,EAAA40B,EAAAtwB,EAAArE,KACA,OAGA,QAAAi7B,IAAAT,EAAAv/B,EAAAC,EAAAC,EAAAC,GACA,GAAAiO,GAAAmxB,EAAA,EACA,IAAAnxB,EAAA,QAEA,IASA6xB,GACAC,EAVA/xB,EAAAoxB,EAAA,GACAxJ,EAAAwJ,EAAAxJ,KACAr2B,EAAA6/B,EAAA7/B,MACAygC,EAAApK,EAAA,GACAqK,EAAArK,EAAA,GACAsK,EAAA3gC,EAAA,GACA4gC,EAAA5gC,EAAA,GACA6gC,GAAAJ,EAAAE,GAAA,EACAG,GAAAJ,EAAAE,GAAA,CAIA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAvgC,GAAAugC,GAAArgC,EAAA,MACA,IAAAigC,EAAAE,EAAA,CACA,GAAAlyB,GACA,GAAAA,EAAA,IAAAhO,EAAA,WADAgO,IAAAoyB,EAAAtgC,EAEAmO,IAAAmyB,EAAApgC,OACK,CACL,GAAAgO,GACA,GAAAA,EAAA,GAAAlO,EAAA,WADAkO,IAAAoyB,EAAApgC,EAEAiO,IAAAmyB,EAAAtgC,QAKA,IAFAggC,GAAAE,EAAAE,IAAAC,EAAAF,GACAF,EAAAM,EAAAP,EAAAM,EACAN,GAAA,GAAAA,EAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAAlyB,GACA,GAAAA,EAAA,IAAAhO,EAAA,WADAgO,KAAAlO,EAAAigC,GAAAD,EAAAhgC,EAEAmO,KAAAjO,EAAA+/B,GAAAD,EAAA9/B,OACO,CACP,GAAAgO,GACA,GAAAA,EAAA,GAAAlO,EAAA,WADAkO,KAAAhO,EAAA+/B,GAAAD,EAAA9/B,EAEAiO,KAAAnO,EAAAigC,GAAAD,EAAAhgC,OAGA,IAAAmgC,EAAAE,EAAA,CACA,GAAAnyB,GACA,GAAAA,EAAA,IAAAjO,EAAA,WADAiO,IAAAnO,EAAAigC,EAAAjgC,EAAAkgC,EAEA9xB,IAAAlO,EAAA+/B,EAAA//B,EAAAggC,OACO,CACP,GAAA/xB,GACA,GAAAA,EAAA,GAAAnO,EAAA,WADAmO,IAAAjO,EAAA+/B,EAAA//B,EAAAggC,EAEA9xB,IAAApO,EAAAigC,EAAAjgC,EAAAkgC,GAOA,MAFAX,GAAA,GAAApxB,EACAoxB,EAAA,GAAAnxB,GACA,EAGA,QAAAqyB,IAAAzgC,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GACAo/B,GADAntC,EAAAotC,GAAAltC,OAGAF,KACA4tC,GAAAT,EAAAC,GAAAptC,GAAA4N,EAAAC,EAAAC,EAAAC,IACA0/B,GAAAN,EAAAv/B,EAAAC,EAAAC,EAAAC,KACA1F,KAAAC,IAAA6kC,EAAA,MAAAA,EAAA,OAAAmB,IACAjmC,KAAAC,IAAA6kC,EAAA,MAAAA,EAAA,OAAAmB,WACAlB,IAAAptC,GAKA,QAAAuuC,IAAAC,GACA,MAAAjsC,IAAAisC,EAAAhsC,QACAgsC,OACAlB,cAIA,QAAAmB,IAAAC,EAAAvB,GACA,GAAAqB,GAAAE,EAAAF,KACAG,EAAAxB,EAAAxJ,KACAiL,EAAAzB,EAAA7/B,KAEA,OADAkhC,KAAAI,MAAAD,IAAAH,GACAI,EAAAvmC,KAAA4S,MAAA2zB,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAH,IAAAG,KAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,KACAwB,EAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,IACA9kC,KAAA4S,MAAA0zB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGA,QAAAE,IAAAH,EAAAvB,GACA,MAAAA,OAAAxJ,OAAA+K,EAAAF,OAGA,QAAAM,IAAAJ,EAAAvB,GACA,MAAAA,OAAAxJ,OAAA+K,EAAAF,OAGA,QAAAO,MACA,OAAAL,GAAApB,EAAA9/B,EAAAuI,EAAA/V,EAAA,EAAA0J,EAAAnH,GAAArC,OAA0DF,EAAA0J,IAAO1J,EACjE,IAAA0uC,EAAAnsC,GAAAvC,MAAA+V,GAAAu3B,EAAAoB,EAAApB,WAAAptC,QAAA,CACA,GAAAsC,GAAA,GAAA+G,OAAAwM,GACAxO,EAAA,GAAAgC,OAAAwM,EACA,KAAAvI,EAAA,EAAiBA,EAAAuI,IAAOvI,EAAAhL,EAAAgL,KAAAjG,EAAAiG,GAAAihC,GAAAC,EAAAtB,GAAAE,EAAA9/B,IAExB,KADAhL,EAAAsyB,KAAA,SAAA90B,EAAAwN,GAAiC,MAAAjG,GAAAiG,GAAAjG,EAAAvH,KACjCwN,EAAA,EAAiBA,EAAAuI,IAAOvI,EAAAjG,EAAAiG,GAAA8/B,EAAA9qC,EAAAgL,GACxB,KAAAA,EAAA,EAAiBA,EAAAuI,IAAOvI,EAAA8/B,EAAA9/B,GAAAjG,EAAAiG,IAKxB,QAAAwhC,IAAAphC,EAAAC,EAAAC,EAAAC,GACA,GACAkhC,GACAP,EACAF,EACAU,EACA5B,EACA6B,EACAlnC,EACAmnC,EACAC,EACAr/B,EACAs/B,EACAC,EAZAC,EAAAjtC,GAAArC,OAaAoO,GAAA,CAEA,KAAA2gC,EAAA,EAAiBA,EAAAO,IAAgBP,EACjC,GAAAP,EAAAnsC,GAAA0sC,GAAA,CAMA,IALAT,EAAAE,EAAAF,KACAlB,EAAAoB,EAAApB,UACA4B,EAAA5B,EAAAptC,OAGAgvC,KACA9B,GAAAE,EAAA4B,KACA5B,EAAA5pC,OAAAwrC,EAAA,EAMA,KADAA,EAAA,EAAAC,EAAA7B,EAAAptC,OACAgvC,EAAAC,GACAn/B,EAAA8+B,GAAAJ,EAAAtB,GAAAE,EAAA4B,KAAAI,EAAAt/B,EAAA,GAAAu/B,EAAAv/B,EAAA,GACA/H,EAAA4mC,GAAAH,EAAAtB,GAAAE,IAAA4B,EAAAC,KAAAC,EAAAnnC,EAAA,GAAAonC,EAAApnC,EAAA,IACAI,KAAAC,IAAAgnC,EAAAF,GAAAd,IAAAjmC,KAAAC,IAAAinC,EAAAF,GAAAf,MACAhB,EAAA5pC,OAAAwrC,EAAA,EAAA9B,GAAA5lC,KAAA+lC,GAAAiB,EAAAx+B,EACA3H,KAAAC,IAAAgnC,EAAA1hC,GAAA0gC,IAAAvgC,EAAAwhC,EAAAjB,IAAA1gC,EAAAvF,KAAAC,IAAA8mC,EAAAxhC,GAAA0gC,GAAAe,EAAAthC,GACA1F,KAAAC,IAAAinC,EAAAxhC,GAAAugC,IAAAxgC,EAAAwhC,EAAAhB,IAAAjmC,KAAAC,IAAA+mC,EAAAthC,GAAAugC,GAAAc,EAAAthC,EAAAC,GACA1F,KAAAC,IAAAgnC,EAAAxhC,GAAAwgC,IAAAiB,EAAA1hC,EAAAygC,IAAAxgC,EAAAzF,KAAAC,IAAA8mC,EAAAthC,GAAAwgC,GAAAe,EAAAxhC,GACAxF,KAAAC,IAAAinC,EAAA1hC,GAAAygC,IAAAgB,EAAA1hC,EAAA0gC,IAAAjmC,KAAAC,IAAA+mC,EAAAxhC,GAAAygC,GAAAc,EAAAxhC,EAAAC,GACA,YACAshC,EAIAA,KAAA7gC,GAAA,GAMA,GAAAA,EAAA,CACA,GAAAoE,GAAAC,EAAAC,EAAA60B,EAAAp5B,GAEA,KAAA4gC,EAAA,EAAA3gC,EAAA,KAAiC2gC,EAAAO,IAAgBP,GACjDP,EAAAnsC,GAAA0sC,MACAT,EAAAE,EAAAF,KACA97B,EAAA87B,EAAA,GAAA5gC,EACA+E,EAAA67B,EAAA,GAAA3gC,EACA+E,EAAAF,IAAAC,IACAC,EAAA60B,MAAA70B,EAAAtE,EAAAogC,GAIA,IAAApgC,EAAA,CACA,GAAAmhC,IAAA7hC,EAAAC,GAAA6hC,GAAA9hC,EAAAG,GAAA4hC,GAAA7hC,EAAAC,GAAA6hC,GAAA9hC,EAAAD,EACAS,GAAAg/B,UAAA9lC,KACA4lC,GAAA5lC,KAAA+lC,GAAAiB,EAAAlgC,EAAAkgC,KAAAiB,EAAAC,IAAA,EACAtC,GAAA5lC,KAAA+lC,GAAAiB,EAAAkB,EAAAC,IAAA,EACAvC,GAAA5lC,KAAA+lC,GAAAiB,EAAAmB,EAAAC,IAAA,EACAxC,GAAA5lC,KAAA+lC,GAAAiB,EAAAoB,EAAAH,IAAA,IAMA,IAAAR,EAAA,EAAiBA,EAAAO,IAAgBP,GACjCP,EAAAnsC,GAAA0sC,MACAP,EAAApB,UAAAptC,cACAqC,IAAA0sC,IAUA,QAAAY,MACAlD,GAAA1nC,MACAA,KAAAnD,EACAmD,KAAAO,EACAP,KAAA6qC,IACA7qC,KAAAupC,KACAvpC,KAAAsO,GAAA,KAGA,QAAAw8B,IAAAD,GACA,GAAAE,GAAAF,EAAAjD,EACAoD,EAAAH,EAAAhD,CAEA,IAAAkD,GAAAC,EAAA,CAEA,GAAAC,GAAAF,EAAAxB,KACA2B,EAAAL,EAAAtB,KACA4B,EAAAH,EAAAzB,IAEA,IAAA0B,IAAAE,EAAA,CAEA,GAAA1C,GAAAyC,EAAA,GACAxC,EAAAwC,EAAA,GACA9I,EAAA6I,EAAA,GAAAxC,EACApG,EAAA4I,EAAA,GAAAvC,EACAr6B,EAAA88B,EAAA,GAAA1C,EACAn6B,EAAA68B,EAAA,GAAAzC,EAEA7lC,EAAA,GAAAu/B,EAAA9zB,EAAA+zB,EAAAh0B,EACA,MAAAxL,IAAAuoC,IAAA,CAEA,GAAAC,GAAAjJ,IAAAC,IACAiJ,EAAAj9B,IAAAC,IACAzR,GAAAyR,EAAA+8B,EAAAhJ,EAAAiJ,GAAAzoC,EACAtC,GAAA6hC,EAAAkJ,EAAAj9B,EAAAg9B,GAAAxoC,EAEAm+B,EAAAuK,GAAA1sC,OAAA,GAAA+rC,GACA5J,GAAA6J,MACA7J,EAAAuI,KAAA2B,EACAlK,EAAAnkC,IAAA4rC,EACAzH,EAAAzgC,GAAAygC,EAAA1yB,GAAA/N,EAAAmoC,GAAAtlC,KAAA8C,KAAArJ,IAAA0D,KAEAsqC,EAAA7J,QAKA,KAHA,GAAAwK,GAAA,KACAhjC,EAAAs6B,GAAAl7B,EAEAY,GACA,GAAAw4B,EAAAzgC,EAAAiI,EAAAjI,GAAAygC,EAAAzgC,IAAAiI,EAAAjI,GAAAygC,EAAAnkC,GAAA2L,EAAA3L,EAAA,CACA,IAAA2L,EAAA2Z,EACA,CAAYqpB,EAAAhjC,EAAAo/B,CAAiB,OAD7Bp/B,IAAA2Z,MAEK,CACL,IAAA3Z,EAAAm/B,EACA,CAAY6D,EAAAhjC,CAAe,OAD3BA,IAAAm/B,EAKA7E,GAAAnE,OAAA6M,EAAAxK,GACAwK,IAAAC,GAAAzK,MAGA,QAAA0K,IAAAb,GACA,GAAA7J,GAAA6J,EAAA7J,MACAA,KACAA,EAAA4G,IAAA6D,GAAAzK,EAAA6G,GACA/E,GAAA9lC,OAAAgkC,GACAuK,GAAAhpC,KAAAy+B,GACA0G,GAAA1G,GACA6J,EAAA7J,OAAA,MAMA,QAAA2K,MACAjE,GAAA1nC,MACAA,KAAAkoC,KACAloC,KAAAupC,KACAvpC,KAAAghC,OAAA,KAGA,QAAA4K,IAAArC,GACA,GAAAsC,GAAAC,GAAAjtC,OAAA,GAAA8sC,GAEA,OADAE,GAAAtC,OACAsC,EAGA,QAAAE,IAAAF,GACAH,GAAAG,GACAG,GAAAhvC,OAAA6uC,GACAC,GAAAvpC,KAAAspC,GACAnE,GAAAmE,GAGA,QAAAI,IAAAJ,GACA,GAAA7K,GAAA6K,EAAA7K,OACAnkC,EAAAmkC,EAAAnkC,EACA0D,EAAAygC,EAAA1yB,GACAi6B,GAAA1rC,EAAA0D,GACAqiC,EAAAiJ,EAAAjE,EACA5lC,EAAA6pC,EAAAhE,EACAqE,GAAAL,EAEAE,IAAAF,EAGA,KADA,GAAAd,GAAAnI,EACAmI,EAAA/J,QACA59B,KAAAC,IAAAxG,EAAAkuC,EAAA/J,OAAAnkC,GAAAwsC,IACAjmC,KAAAC,IAAA9C,EAAAwqC,EAAA/J,OAAA1yB,IAAA+6B,IACAzG,EAAAmI,EAAAnD,EACAsE,EAAAC,QAAApB,GACAgB,GAAAhB,GACAA,EAAAnI,CAGAsJ,GAAAC,QAAApB,GACAW,GAAAX,EAGA,KADA,GAAAC,GAAAhpC,EACAgpC,EAAAhK,QACA59B,KAAAC,IAAAxG,EAAAmuC,EAAAhK,OAAAnkC,GAAAwsC,IACAjmC,KAAAC,IAAA9C,EAAAyqC,EAAAhK,OAAA1yB,IAAA+6B,IACArnC,EAAAgpC,EAAAnD,EACAqE,EAAA3pC,KAAAyoC,GACAe,GAAAf,GACAA,EAAAhpC,CAGAkqC,GAAA3pC,KAAAyoC,GACAU,GAAAV,EAEA,IACAoB,GADAC,EAAAH,EAAAjxC,MAEA,KAAAmxC,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BpB,EAAAkB,EAAAE,GACArB,EAAAmB,EAAAE,EAAA,GACAhE,GAAA4C,EAAA9C,KAAA6C,EAAAxB,KAAAyB,EAAAzB,KAAAhB,EAGAwC,GAAAmB,EAAA,GACAlB,EAAAkB,EAAAG,EAAA,GACArB,EAAA9C,KAAAD,GAAA8C,EAAAxB,KAAAyB,EAAAzB,KAAA,KAAAhB,GAEAuC,GAAAC,GACAD,GAAAE,GAGA,QAAAsB,IAAA/C,GASA,IARA,GAEAwB,GACAC,EACAuB,EACAC,EALA3vC,EAAA0sC,EAAA,GACAkD,EAAAlD,EAAA,GAKA/gC,EAAAwjC,GAAApkC,EAEAY,GAEA,GADA+jC,EAAAG,GAAAlkC,EAAAikC,GAAA5vC,EACA0vC,EAAAlD,GAAA7gC,IAAA2Z,MAAuC,CAEvC,GADAqqB,EAAA3vC,EAAA8vC,GAAAnkC,EAAAikC,KACAD,EAAAnD,IAMO,CACPkD,GAAAlD,IACA0B,EAAAviC,EAAAo/B,EACAoD,EAAAxiC,GACSgkC,GAAAnD,IACT0B,EAAAviC,EACAwiC,EAAAxiC,EAAAq/B,GAEAkD,EAAAC,EAAAxiC,CAEA,OAfA,IAAAA,EAAAm/B,EAAA,CACAoD,EAAAviC,CACA,OAEAA,IAAAm/B,EAgBA2B,GAAAC,EACA,IAAAqD,GAAAhB,GAAArC,EAGA,IAFAyC,GAAArN,OAAAoM,EAAA6B,GAEA7B,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,MANAU,IAAAX,GACAC,EAAAY,GAAAb,EAAAxB,MACAyC,GAAArN,OAAAiO,EAAA5B,GACA4B,EAAA1E,KAAA8C,EAAA9C,KAAAD,GAAA8C,EAAAxB,KAAAqD,EAAArD,MACAuB,GAAAC,OACAD,IAAAE,EAIA,KAAAA,EAEA,YADA4B,EAAA1E,KAAAD,GAAA8C,EAAAxB,KAAAqD,EAAArD,MAKAmC,IAAAX,GACAW,GAAAV,EAEA,IAAAC,GAAAF,EAAAxB,KACAnH,EAAA6I,EAAA,GACA5I,EAAA4I,EAAA,GACAxC,EAAAc,EAAA,GAAAnH,EACAsG,EAAAa,EAAA,GAAAlH,EACA8I,EAAAH,EAAAzB,KACAl7B,EAAA88B,EAAA,GAAA/I,EACA9zB,EAAA68B,EAAA,GAAA9I,EACAx/B,EAAA,GAAA4lC,EAAAn6B,EAAAo6B,EAAAr6B,GACAw+B,EAAApE,IAAAC,IACA4C,EAAAj9B,IAAAC,IACAi6B,IAAAj6B,EAAAu+B,EAAAnE,EAAA4C,GAAAzoC,EAAAu/B,GAAAqG,EAAA6C,EAAAj9B,EAAAw+B,GAAAhqC,EAAAw/B,EAEA+F,IAAA4C,EAAA9C,KAAA+C,EAAAE,EAAA5C,GACAqE,EAAA1E,KAAAD,GAAAgD,EAAA1B,EAAA,KAAAhB,GACAyC,EAAA9C,KAAAD,GAAAsB,EAAA4B,EAAA,KAAA5C,GACAuC,GAAAC,GACAD,GAAAE,IAGA,QAAA0B,IAAA7B,EAAA4B,GACA,GAAAlD,GAAAsB,EAAAtB,KACAuD,EAAAvD,EAAA,GACAwD,EAAAxD,EAAA,GACAyD,EAAAD,EAAAN,CAEA,KAAAO,EAAA,MAAAF,EAEA,IAAA/B,GAAAF,EAAAjD,CACA,KAAAmD,EAAA,QAAA3hC,IAEAmgC,GAAAwB,EAAAxB,IACA,IAAA0D,GAAA1D,EAAA,GACA2D,EAAA3D,EAAA,GACA4D,EAAAD,EAAAT,CAEA,KAAAU,EAAA,MAAAF,EAEA,IAAAG,GAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACAtrC,EAAAurC,EAAAD,CAEA,OAAAE,KAAAxrC,EAAAuB,KAAA8C,KAAArE,IAAA,EAAAwrC,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GAEAA,EAAAG,GAAA,EAGA,QAAAN,IAAA9B,EAAA4B,GACA,GAAAzB,GAAAH,EAAAhD,CACA,IAAAmD,EAAA,MAAA0B,IAAA1B,EAAAyB,EACA,IAAAlD,GAAAsB,EAAAtB,IACA,OAAAA,GAAA,KAAAkD,EAAAlD,EAAA,GAAAngC,IAUA,QAAAkkC,IAAA1rC,EAAAC,EAAAiJ,GACA,OAAAlJ,EAAA,GAAAkJ,EAAA,KAAAjJ,EAAA,GAAAD,EAAA,KAAAA,EAAA,GAAAC,EAAA,KAAAiJ,EAAA,GAAAlJ,EAAA,IAGA,QAAA2rC,IAAA3rC,EAAAC,GACA,MAAAA,GAAA,GAAAD,EAAA,IACAC,EAAA,GAAAD,EAAA,GAGA,QAAA4rC,IAAAC,EAAAC,GACA,GACA7wC,GACA0D,EACAygC,EAHAuI,EAAAkE,EAAA5d,KAAA0d,IAAA1uC,KAUA,KALAspC,MACA7qC,GAAA,GAAAgH,OAAAmpC,EAAAxyC,QACA+wC,GAAA,GAAAvE,IACA3E,GAAA,GAAA2E,MAIA,GADAzG,EAAAyK,GACAlC,KAAAvI,GAAAuI,EAAA,GAAAvI,EAAAzgC,GAAAgpC,EAAA,KAAAvI,EAAAzgC,GAAAgpC,EAAA,GAAAvI,EAAAnkC,GACA0sC,EAAA,KAAA1sC,GAAA0sC,EAAA,KAAAhpC,IACA+rC,GAAA/C,GACA1sC,EAAA0sC,EAAA,GAAAhpC,EAAAgpC,EAAA,IAEAA,EAAAkE,EAAA5uC,UACK,KAAAmiC,EAGL,KAFAiL,IAAAjL,EAAA6J,KAQA,GAFAf,KAEA4D,EAAA,CACA,GAAA/kC,IAAA+kC,EAAA,MACA9kC,GAAA8kC,EAAA,MACA7kC,GAAA6kC,EAAA,MACA5kC,GAAA4kC,EAAA,KACAtE,IAAAzgC,EAAAC,EAAAC,EAAAC,GACAihC,GAAAphC,EAAAC,EAAAC,EAAAC,GAGA9I,KAAAmoC,SACAnoC,KAAA1C,SAEA0uC,GACAlJ,GACAqF,GACA7qC,GAAA,KAkIA,QAAAqwC,IAAAtuC,EAAAsc,EAAAnD,GACAxY,KAAAX,SACAW,KAAA2b,OACA3b,KAAAwY,YAGA,QAAAo1B,IAAAn3B,EAAA5Z,EAAA0D,GACAP,KAAAyW,IACAzW,KAAAnD,IACAmD,KAAAO,IA4CA,QAAAiY,IAAAhQ,GACA,MAAAA,GAAAqlC,QAAAC,GAGA,QAAAC;AACAn0C,EAAAi5B,MAAA0T,2BASA,QAAAyH,MACA,OAAAp0C,EAAAi5B,MAAAuU,OAGA,QAAA6G,MACA,GAAApzC,GAAAC,EAAA8P,EAAA5K,IASA,OARA4K,aAAAsjC,aACAtjC,IAAAujC,iBAAAvjC,EACA/P,EAAA+P,EAAA0W,MAAAnI,QAAA3b,MACA1C,EAAA8P,EAAA+1B,OAAAxnB,QAAA3b,QAEA3C,EAAA+P,EAAAwjC,YACAtzC,EAAA8P,EAAAyjC,gBAEA,MAAAxzC,EAAAC,IAGA,QAAAwzC,MACA,MAAAtuC,MAAA6tC,QAAAC,GA0VA,QAAAS,MACA30C,EAAAi5B,MAAA0T,2BA2FA,QAAAiI,IAAAxpC,GACA,OAAU2W,KAAA3W,GAIV,QAAAypC,MACA,OAAA70C,EAAAi5B,MAAAuU,OAGA,QAAAsH,MACA,GAAAC,GAAA3uC,KAAAmuC,iBAAAnuC,IACA,eAAA2uC,EAAArtB,MAAAnI,QAAA3b,MAAAmxC,EAAAhO,OAAAxnB,QAAA3b,QAIA,QAAAoxC,IAAApmC,GACA,MAAAA,EAAAqmC,SAAA,KAAArmC,IAAA+uB,YAAA,MACA,OAAA/uB,GAAAqmC,QAGA,QAAAC,IAAApB,GACA,MAAAA,GAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGA,QAAAqB,IAAAvmC,GACA,GAAA4wB,GAAA5wB,EAAAqmC,OACA,OAAAzV,KAAA4V,IAAAjhB,OAAAqL,EAAAN,WAAA,KAGA,QAAAmW,MACA,MAAAC,IAAA1nB,IAGA,QAAA2nB,MACA,MAAAD,IAAAxnB,IAOA,QAAAwnB,IAAAF,GAOA,QAAAI,GAAAzc,GACA,GAAA0c,GAAA1c,EACA2c,SAAA,UAAAC,GACAhzC,UAAA,YACAC,MAAAgyC,GAAA,YAEAa,GAAA5yC,QAAAC,OAAA,QACA8hC,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAAgR,GAAAH,SACA1yC,MAAA0yC,GACAjrC,KAAA,WACA,GAAAspC,GAAAkB,GAAA5uC,MAAA0tC,MACApxC,IAAA0D,MACAw+B,KAAA,IAAAkP,EAAA,OACAlP,KAAA,IAAAkP,EAAA,OACAlP,KAAA,QAAAkP,EAAA,MAAAA,EAAA,OACAlP,KAAA,SAAAkP,EAAA,MAAAA,EAAA,SAGA/a,EAAAp2B,UAAA,cACAC,MAAAgyC,GAAA,eACA/xC,QAAAC,OAAA,QACA8hC,KAAA,qBACAA,KAAA,SAAAgR,GAAA1W,WACA0F,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,+BAEA,IAAAiR,GAAA9c,EAAAp2B,UAAA,WACAC,KAAAwyC,EAAAU,QAAA,SAAA7sC,GAAsC,MAAAA,GAAA8Y,MAEtC8zB,GAAA1yC,OAAAC,SAEAyyC,EAAAhzC,QAAAC,OAAA,QACA8hC,KAAA,iBAAA37B,GAAoC,wBAAAA,EAAA8Y,OACpC6iB,KAAA,kBAAA37B,GAAqC,MAAA2sC,IAAA3sC,EAAA8Y,QAErCgX,EACAvuB,KAAAurC,GACAnR,KAAA,eACAA,KAAA,wBACAjmB,MAAA,+CACAgb,GAAA,mCAAAqc,GAyCA,QAAAD,KACA,GAAAhd,GAAAr2B,GAAA0D,MACA2mC,EAAAiI,GAAA5uC,MAAA84B,SAEA6N,IACAhU,EAAAp2B,UAAA,cACAgc,MAAA,gBACAimB,KAAA,IAAAmI,EAAA,OACAnI,KAAA,IAAAmI,EAAA,OACAnI,KAAA,QAAAmI,EAAA,MAAAA,EAAA,OACAnI,KAAA,SAAAmI,EAAA,MAAAA,EAAA,OAEAhU,EAAAp2B,UAAA,WACAgc,MAAA,gBACAimB,KAAA,aAAA37B,GAAkC,YAAAA,EAAA8Y,KAAA9Y,EAAA8Y,KAAA1gB,OAAA,GAAA0rC,EAAA,MAAAkJ,EAAA,EAAAlJ,EAAA,MAAAkJ,EAAA,IAClCrR,KAAA,aAAA37B,GAAkC,YAAAA,EAAA8Y,KAAA,GAAAgrB,EAAA,MAAAkJ,EAAA,EAAAlJ,EAAA,MAAAkJ,EAAA,IAClCrR,KAAA,iBAAA37B,GAAsC,YAAAA,EAAA8Y,MAAA,MAAA9Y,EAAA8Y,KAAAgrB,EAAA,MAAAA,EAAA,MAAAkJ,MACtCrR,KAAA,kBAAA37B,GAAuC,YAAAA,EAAA8Y,MAAA,MAAA9Y,EAAA8Y,KAAAgrB,EAAA,MAAAA,EAAA,MAAAkJ,OAIvCld,EAAAp2B,UAAA,sBACAgc,MAAA,kBACAimB,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,QAAAsR,GAAAzgC,EAAA0kB,GACA,MAAA1kB,GAAAw/B,QAAAiB,SAAA,GAAAC,GAAA1gC,EAAA0kB,GAGA,QAAAgc,GAAA1gC,EAAA0kB,GACA/zB,KAAAqP,OACArP,KAAA+zB,OACA/zB,KAAAo5B,MAAA/pB,EAAAw/B,QACA7uC,KAAAinC,OAAA,EAyBA,QAAA2I,KAqEA,QAAAI,KACA,GAAAC,GAAAC,GAAA7gC,IACA8gC,GAAAC,GAAAC,IACAjtC,KAAAC,IAAA4sC,EAAA,GAAA7gC,EAAA,IAAAhM,KAAAC,IAAA4sC,EAAA,GAAA7gC,EAAA,IAAAihC,GAAA,EACAD,GAAA,GAEAhhC,EAAA6gC,EACAK,GAAA,EACAC,KACAC,IAGA,QAAAA,KACA,GAAAxrC,EAKA,QAHAyI,EAAA2B,EAAA,GAAAqhC,EAAA,GACA/iC,EAAA0B,EAAA,GAAAqhC,EAAA,GAEAC,GACA,IAAAC,IACA,IAAAC,IACAC,IAAApjC,EAAArK,KAAAE,IAAAggB,EAAAwtB,EAAA1tC,KAAAuO,IAAA+E,EAAAq6B,EAAAtjC,IAAAujC,EAAAF,EAAArjC,EAAAwjC,EAAAF,EAAAtjC,GACAyjC,IAAAxjC,EAAAtK,KAAAE,IAAAukC,EAAAsJ,EAAA/tC,KAAAuO,IAAAuQ,EAAAzQ,EAAA/D,IAAA0jC,EAAAD,EAAAzjC,EAAAgE,EAAAD,EAAA/D,EACA,MAEA,KAAA2jC,IACAR,EAAA,GAAApjC,EAAArK,KAAAE,IAAAggB,EAAAwtB,EAAA1tC,KAAAuO,IAAA+E,EAAAo6B,EAAArjC,IAAAujC,EAAAF,EAAArjC,EAAAwjC,EAAAF,GACAF,EAAA,IAAApjC,EAAArK,KAAAE,IAAAggB,EAAAytB,EAAA3tC,KAAAuO,IAAA+E,EAAAq6B,EAAAtjC,IAAAujC,EAAAF,EAAAG,EAAAF,EAAAtjC,GACAyjC,EAAA,GAAAxjC,EAAAtK,KAAAE,IAAAukC,EAAAsJ,EAAA/tC,KAAAuO,IAAAuQ,EAAAivB,EAAAzjC,IAAA0jC,EAAAD,EAAAzjC,EAAAgE,EAAAD,GACAy/B,EAAA,IAAAxjC,EAAAtK,KAAAE,IAAAukC,EAAAp2B,EAAArO,KAAAuO,IAAAuQ,EAAAzQ,EAAA/D,IAAA0jC,EAAAD,EAAAz/B,EAAAD,EAAA/D,EACA,MAEA,KAAA4jC,IACAT,IAAAG,EAAA5tC,KAAAE,IAAAggB,EAAAlgB,KAAAuO,IAAA+E,EAAAo6B,EAAArjC,EAAAojC,IAAAI,EAAA7tC,KAAAE,IAAAggB,EAAAlgB,KAAAuO,IAAA+E,EAAAq6B,EAAAtjC,EAAAojC,KACAK,IAAAE,EAAAhuC,KAAAE,IAAAukC,EAAAzkC,KAAAuO,IAAAuQ,EAAAivB,EAAAzjC,EAAAwjC,IAAAx/B,EAAAtO,KAAAE,IAAAukC,EAAAzkC,KAAAuO,IAAAuQ,EAAAzQ,EAAA/D,EAAAwjC,KAKAD,EAAAD,IACAH,IAAA,EACA7rC,EAAA8rC,IAAAC,IAAA/rC,EACAA,EAAAgsC,IAAAC,IAAAjsC,EACA2W,IAAA41B,KAAAlC,EAAA7Q,KAAA,SAAAgR,GAAA7zB,EAAA41B,GAAA51B,MAGAjK,EAAA0/B,IACAF,IAAA,EACAlsC,EAAAmsC,IAAA1/B,IAAAzM,EACAA,EAAAosC,IAAA1/B,IAAA1M,EACA2W,IAAA61B,KAAAnC,EAAA7Q,KAAA,SAAAgR,GAAA7zB,EAAA61B,GAAA71B,MAGAyd,EAAAN,YAAA6N,EAAAvN,EAAAN,WACAsX,IAAAY,EAAArK,EAAA,MAAAsK,EAAAtK,EAAA,OACA0J,IAAAe,EAAAzK,EAAA,MAAAj1B,EAAAi1B,EAAA,OAEAA,EAAA,QAAAqK,GACArK,EAAA,QAAAyK,GACAzK,EAAA,QAAAsK,GACAtK,EAAA,QAAAj1B,IACA0nB,EAAAN,YAAAkY,EAAAI,IAAAH,EAAAv/B,IACAi+B,EAAAr1C,KAAA+U,GACAoiC,EAAArC,SAIA,QAAAsC,KAEA,GADAnD,KACA30C,EAAAi5B,MAAA8e,QAAA,CACA,GAAA/3C,EAAAi5B,MAAA8e,QAAA12C,OAAA,MACA22C,IAAAjzB,aAAAizB,GACAA,EAAAhzB,WAAA,WAA6CgzB,EAAA,MAAsB,KACnEjf,EAAAY,GAAA,6DAEAiT,IAAA5sC,EAAAi5B,MAAA4T,KAAA6J,GACA7J,EAAAlT,GAAA,+DAEAZ,GAAA6L,KAAA,wBACA6Q,EAAA7Q,KAAA,SAAAgR,GAAAH,SACAjW,EAAAN,YAAA6N,EAAAvN,EAAAN,WACAgW,GAAAnI,KAAAvN,EAAAN,UAAA,KAAA6W,EAAAr1C,KAAA+U,IACAoiC,EAAA1mC,MAGA,QAAA8mC,KACA,OAAAj4C,EAAAi5B,MAAAif,SACA,QACA3B,EAAAU,GAAAK,CACA,MAEA,SACAR,IAAAW,KACAR,IAAAE,EAAAE,EAAAxjC,EAAAojC,EAAAC,EAAAE,EAAAvjC,EAAAojC,GACAK,IAAAz/B,EAAAC,EAAAhE,EAAAwjC,EAAAC,EAAAC,EAAA1jC,EAAAwjC,GACAR,EAAAY,GACAd,IAEA,MAEA,SACAE,IAAAW,IAAAX,IAAAY,KACAT,EAAA,EAAAE,EAAAE,EAAAxjC,EAAwCojC,EAAA,IAAAC,EAAAE,EAAAvjC,GACxCyjC,EAAA,EAAAz/B,EAAAC,EAAAhE,EAAwCwjC,EAAA,IAAAC,EAAAC,EAAA1jC,GACxCgjC,EAAAC,GACAtB,EAAA7Q,KAAA,SAAAgR,GAAA1W,WACA0X,IAEA,MAEA,gBAEAD,KAGA,QAAAwB,KACA,OAAAn4C,EAAAi5B,MAAAif,SACA,QACA3B,IACAC,EAAAC,EAAAF,GAAA,EACAK,IAEA,MAEA,SACAE,IAAAY,KACAT,EAAA,EAAAE,EAAAE,EAAmCJ,EAAA,IAAAC,EAAAE,GACnCE,EAAA,EAAAz/B,EAAAC,EAAmCw/B,EAAA,IAAAC,EAAAC,GACnCV,EAAAW,GACAb,IAEA,MAEA,SACAE,IAAAC,KACA/2C,EAAAi5B,MAAAmf,QACAnB,IAAAE,EAAAE,EAAAxjC,EAAAojC,EAAAC,EAAAE,EAAAvjC,EAAAojC,GACAK,IAAAz/B,EAAAC,EAAAhE,EAAAwjC,EAAAC,EAAAC,EAAA1jC,EAAAwjC,GACAR,EAAAY,KAEAT,EAAA,EAAAE,EAAAE,EAAqCJ,EAAA,IAAAC,EAAAE,GACrCE,EAAA,EAAAz/B,EAAAC,EAAqCw/B,EAAA,IAAAC,EAAAC,GACrCV,EAAAW,IAEAhC,EAAA7Q,KAAA,SAAAgR,GAAA7zB,IACA60B,IAEA,MAEA,gBAEAD,KA3NA,GAAA32C,EAAAi5B,MAAA8e,SAAgC,GAAA/3C,EAAAi5B,MAAAof,eAAAh3C,OAAArB,EAAAi5B,MAAA8e,QAAA12C,OAAA,MAAAs1C,UAChC,IAAAqB,EAAA,MACA,IAAAhyB,EAAA5U,MAAAhL,KAAAsL,WAAA,CAEA,GAQAwlC,GAAAE,EACAG,EAAAC,EACAL,EAAAE,EACAx/B,EAAAC,EACAjE,EACAC,EACA4iC,EAEAF,EACAC,EAjBAhhC,EAAArP,KACA2b,EAAA/hB,EAAAi5B,MAAAxzB,OAAA8zB,SAAAxX,KACA+0B,EAAA,eAAA92C,EAAAi5B,MAAAqf,QAAAv2B,EAAA,UAAAA,GAAAi1B,GAAAh3C,EAAAi5B,MAAAmf,OAAAV,GAAAD,GACAR,EAAA7B,IAAAtnB,GAAA,KAAAyqB,GAAAx2B,GACAu1B,EAAAlC,IAAAxnB,GAAA,KAAA4qB,GAAAz2B,GACAyd,EAAAwV,GAAAv/B,GACAq+B,EAAAtU,EAAAsU,OACA/G,EAAAvN,EAAAN,UACAxV,EAAAoqB,EAAA,MACA7F,EAAA6F,EAAA,MACAh3B,EAAAg3B,EAAA,MACAxrB,EAAAwrB,EAAA,MAIAyC,EAAAU,GAAAK,GAAAt3C,EAAAi5B,MAAAwf,SAGA5B,EAAAP,GAAA7gC,GACAD,EAAAqhC,EACAgB,EAAA3B,EAAAzgC,EAAA/D,WAAAgnC,aAEA,aAAA32B,EACAyd,EAAAN,UAAA6N,IACAmK,EAAA9B,IAAAtnB,GAAApE,EAAAmtB,EAAA,GAAAU,EAAAnC,IAAAxnB,GAAAqgB,EAAA4I,EAAA,KACAM,EAAA/B,IAAAtnB,GAAAhR,EAAAo6B,EAAAr/B,EAAAu9B,IAAAxnB,GAAAtF,EAAAivB,KAGAL,EAAAnK,EAAA,MACAwK,EAAAxK,EAAA,MACAoK,EAAApK,EAAA,MACAl1B,EAAAk1B,EAAA,OAGAqK,EAAAF,EACAM,EAAAD,EACAF,EAAAF,EACAr/B,EAAAD,CAEA,IAAAkhB,GAAAr2B,GAAA+S,GACAmvB,KAAA,yBAEA6Q,EAAA1c,EAAAp2B,UAAA,YACAiiC,KAAA,SAAAgR,GAAA7zB,GAEA,IAAA/hB,EAAAi5B,MAAA8e,QACAhf,EACAY,GAAA,kBAAAyc,GAAA,GACAzc,GAAA,mCAAAme,GAAA,OACK,CACL,GAAAjL,GAAAnqC,GAAA1C,EAAAi5B,MAAA4T,MACAlT,GAAA,gBAAAse,GAAA,GACAte,GAAA,cAAAwe,GAAA,GACAxe,GAAA,kBAAAyc,GAAA,GACAzc,GAAA,gBAAAme,GAAA,EAEAa,IAAA34C,EAAAi5B,MAAA4T,MAGA8H,KACAiE,GAAAnjC,GACAsgC,EAAAr1C,KAAA+U,GACAoiC,EAAAzuC,SA6JA,QAAAusC,KACA,GAAAnW,GAAAp5B,KAAA6uC,UAAiC/V,UAAA,KAGjC,OAFAM,GAAAsU,SAAA1iC,MAAAhL,KAAAsL,WACA8tB,EAAA4V,MACA5V,EA9XA,GAIAwY,GAJAlE,EAAAgB,GACA9uB,EAAA6uB,GACAgE,EAAAr3B,GAAAg0B,EAAA,uBACAS,EAAA,CA+YA,OA7VAT,GAAAoB,KAAA,SAAA7d,EAAAgU,GACAhU,EAAAmG,UACAnG,EACAY,GAAA,yBAAyCuc,EAAA9vC,KAAAsL,WAAAgnC,cAAAtvC,UACzCuwB,GAAA,uCAAuDuc,EAAA9vC,KAAAsL,WAAAP,QACvDmvB,MAAA,mBAQA,QAAAA,GAAAl1B,GACAo0B,EAAAN,UAAA,IAAA9zB,GAAA8pC,GAAA4D,GAAA,KAAA33C,EAAAiK,GACA2qC,EAAAr1C,KAAA+U,GACAoiC,EAAArC,QAVA,GAAA//B,GAAArP,KACAo5B,EAAA/pB,EAAAw/B,QACA4C,EAAA3B,EAAAzgC,EAAA/D,WACAqnC,EAAAvZ,EAAAN,UACA4Z,EAAA1D,EAAAhhB,MAAA,kBAAA2Y,KAAA37B,MAAAhL,KAAAsL,WAAAq7B,EAAAvN,EAAAsU,QACA3yC,EAAA4yB,GAAAglB,EAAAD,EAQA,OAAAC,IAAAD,EAAAxY,IAAA,KAGAvH,EACAvuB,KAAA,WACA,GAAAiL,GAAArP,KACA+zB,EAAAzoB,UACA8tB,EAAA/pB,EAAAw/B,QACA6D,EAAA1D,EAAAhhB,MAAA,kBAAA2Y,KAAA37B,MAAAqE,EAAA0kB,GAAA4S,EAAAvN,EAAAsU,QACA+D,EAAA3B,EAAAzgC,EAAA0kB,GAAAue,aAEAE,IAAAnjC,GACA+pB,EAAAN,UAAA,MAAA4Z,GAAA5D,GAAA4D,GAAA,KAAAA,EACA/C,EAAAr1C,KAAA+U,GACAoiC,EAAAzuC,QAAAosC,QAAArkC,SA8CAglC,EAAA31C,WACAk4C,YAAA,WAEA,MADA,OAAAtyC,KAAAinC,SAAAjnC,KAAAo5B,MAAA0W,QAAA9vC,UAAA4yC,UAAA,GACA5yC,MAEAgD,MAAA,WAEA,MADAhD,MAAA4yC,WAAA5yC,KAAA4yC,UAAA,EAAA5yC,KAAAyxC,KAAA,UACAzxC,MAEAovC,MAAA,WAEA,MADApvC,MAAAyxC,KAAA,SACAzxC,MAEA+K,IAAA,WAEA,MADA,OAAA/K,KAAAinC,eAAAjnC,MAAAo5B,MAAA0W,QAAA9vC,KAAAyxC,KAAA,QACAzxC,MAEAyxC,KAAA,SAAA91B,GACAmY,GAAA,GAAA+e,IAAAzD,EAAAzzB,EAAAqzB,EAAAjhB,OAAA/tB,KAAAo5B,MAAAN,YAAA2Z,EAAAznC,MAAAynC,GAAA92B,EAAA3b,KAAAqP,KAAArP,KAAA+zB,SA2OAqb,EAAA1B,OAAA,SAAA9lC,GACA,MAAA0D,WAAArQ,QAAAyyC,EAAA,kBAAA9lC,KAAAkrC,MAAAlrC,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAwnC,GAAA1B,GAGA0B,EAAAxvB,OAAA,SAAAhY,GACA,MAAA0D,WAAArQ,QAAA2kB,EAAA,kBAAAhY,KAAAkrC,KAAAlrC,GAAAwnC,GAAAxvB,GAGAwvB,EAAAS,WAAA,SAAAjoC,GACA,MAAA0D,WAAArQ,QAAA40C,GAAAjoC,EAAAwnC,GAAAS,GAGAT,EAAA7b,GAAA,WACA,GAAA/1B,GAAAi1C,EAAAlf,GAAAvoB,MAAAynC,EAAAnnC,UACA,OAAA9N,KAAAi1C,EAAArD,EAAA5xC,GAGA4xC,EAUA,QAAA2D,IAAAhyC,GACA,gBAAAa,EAAAC,GACA,MAAAd,GACAa,EAAA8rB,OAAAlwB,MAAAoE,EAAAvC,OAAA7B,MACAqE,EAAA6rB,OAAAlwB,MAAAqE,EAAAxC,OAAA7B,QA2HA,QAAAw1C,IAAAnwC,GACA,MAAAA,GAAA6qB,OAGA,QAAAulB,IAAApwC,GACA,MAAAA,GAAAxD,OAGA,QAAA6zC,IAAArwC,GACA,MAAAA,GAAAsM,OAGA,QAAAgkC,IAAAtwC,GACA,MAAAA,GAAA+I,WAGA,QAAAwnC,IAAAvwC,GACA,MAAAA,GAAAiJ,SA6EA,QAAAunC,MACArzC,KAAAszC,QAsBA,QAAAC,IAAAC,EAAA5xC,EAAAC,GACA,GAAAhF,GAAA22C,EAAAzgC,EAAAnR,EAAAC,EACA4xC,EAAA52C,EAAA+E,EACA8xC,EAAA72C,EAAA42C,CACAD,GAAAxuC,EAAApD,EAAA8xC,GAAA7xC,EAAA4xC,GA2BA,QAAAE,IAAA92C,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAA+2C,GAAAxwC,KAAAuwC,KAAA92C,GAGA,QAAAg3C,IAAAh3C,GACA,MAAAA,GAAA,EAAAi3C,GAAAj3C,GAAA,GAAAi3C,GAAA1wC,KAAA6I,KAAApP,GAGA,QAAAk3C,IAAAl3C,GACA,OAAAA,EAAAm3C,GAAAn3C,EAAA,IAAAA,EAGA,QAAAo3C,OAEA,QAAAC,IAAAC,EAAAC,GACAD,GAAAE,GAAAh6C,eAAA85C,EAAAx4B,OACA04B,GAAAF,EAAAx4B,MAAAw4B,EAAAC,GA8CA,QAAAE,IAAAC,EAAAH,EAAAI,GACA,GAAAC,GAAA15C,GAAA,EAAA0J,EAAA8vC,EAAAt5C,OAAAu5C,CAEA,KADAJ,EAAAM,cACA35C,EAAA0J,GAAAgwC,EAAAF,EAAAx5C,GAAAq5C,EAAAhlC,MAAAqlC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAL,GAAAO,UAGA,QAAAC,IAAAL,EAAAH,GACA,GAAAr5C,IAAA,EAAA0J,EAAA8vC,EAAAt5C,MAEA,KADAm5C,EAAAS,iBACA95C,EAAA0J,GAAA6vC,GAAAC,EAAAx5C,GAAAq5C,EAAA,EACAA,GAAAU,aAuCA,QAAAC,MACAC,GAAA5lC,MAAA6lC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAK,EAAAC,GACAP,GAAA5lC,MAAA+lC,GACAC,GAAAE,EAAAD,GAAAE,EACAD,GAAAE,GAAAD,GAAAC,GACAC,GAAAH,EAAAI,GAAAC,GAAAJ,IAAA,EAAAK,IAAAC,GAAA7B,GAAAuB,GAGA,QAAAJ,IAAAG,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAD,IAAA,EAAAK,EAKA,IAAAE,GAAAR,EAAAG,GACAM,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAAN,GAAAJ,GACAW,EAAAlC,GAAAuB,GACA9+B,EAAAo/B,GAAAK,EACA5mB,EAAAomB,GAAAO,EAAAx/B,EAAAk/B,GAAAK,GACAljC,EAAA2D,EAAAs/B,EAAA/B,GAAAgC,EACAG,IAAAv3C,IAAAoX,GAAAlD,EAAAwc,IAGAmmB,GAAAH,EAAAI,GAAAO,EAAAJ,GAAAK,EASA,QAAAE,IAAAC,GACA,OAAArgC,GAAAqgC,EAAA,GAAAA,EAAA,IAAAxC,GAAAwC,EAAA,KAGA,QAAAA,IAAAD,GACA,GAAAd,GAAAc,EAAA,GAAAb,EAAAa,EAAA,GAAAH,EAAAN,GAAAJ,EACA,QAAAU,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAe,IAAA10C,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAA00C,IAAA30C,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAIA,QAAA20C,IAAA50C,EAAAC,GACAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAGA,QAAA40C,IAAAC,EAAAjgC,GACA,OAAAigC,EAAA,GAAAjgC,EAAAigC,EAAA,GAAAjgC,EAAAigC,EAAA,GAAAjgC,GAIA,QAAAkgC,IAAA9zC,GACA,GAAAoM,GAAA2nC,GAAA/zC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAAoM,EAAApM,EAAA,IAAAoM,EAAApM,EAAA,IAAAoM,EAsCA,QAAA4nC,IAAAvB,EAAAC,GACAuB,GAAAv0C,KAAAw0C,IAAAC,GAAA1B,EAAA2B,GAAA3B,IACAC,EAAA2B,QAAA3B,GACAA,EAAA4B,QAAA5B,GAGA,QAAA6B,IAAA9B,EAAAC,GACA,GAAA7mC,GAAA2nC,IAAAf,EAAAE,GAAAD,EAAAC,IACA,IAAA6B,GAAA,CACA,GAAAC,GAAAf,GAAAc,GAAA3oC,GACA6oC,GAAAD,EAAA,IAAAA,EAAA,MACAE,EAAAjB,GAAAgB,EAAAD,EACAX,IAAAa,GACAA,EAAApB,GAAAoB,EACA,IAGAC,GAHAC,EAAApC,EAAAqC,GACAC,EAAAF,EAAA,OACAG,EAAAL,EAAA,GAAAM,GAAAF,EAEAG,EAAA10C,GAAAq0C,GAAA,GACAK,IAAAH,EAAAD,GAAAE,KAAAD,EAAAtC,IACAmC,EAAAD,EAAA,GAAAM,GACAL,EAAAN,QAAAM,KACKI,KAAA,aAAAE,GAAAH,EAAAD,GAAAE,KAAAD,EAAAtC,IACLmC,GAAAD,EAAA,GAAAM,GACAL,EAAAP,QAAAO,KAEAlC,EAAA2B,QAAA3B,GACAA,EAAA4B,QAAA5B,KAEAwC,EACAzC,EAAAqC,GACAzoC,GAAA8nC,GAAA1B,GAAApmC,GAAA8nC,GAAAC,SAAA3B,GAEApmC,GAAAomC,EAAA2B,IAAA/nC,GAAA8nC,GAAAC,MAAAD,GAAA1B,GAGA2B,IAAAD,IACA1B,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,IAEAA,EAAAqC,GACAzoC,GAAA8nC,GAAA1B,GAAApmC,GAAA8nC,GAAAC,SAAA3B,GAEApmC,GAAAomC,EAAA2B,IAAA/nC,GAAA8nC,GAAAC,MAAAD,GAAA1B,OAKAuB,IAAAvB,EAAAC,EAEA8B,IAAA3oC,EAAAipC,GAAArC,EAGA,QAAA0C,MACAC,GAAA7oC,MAAAgoC,GAGA,QAAAc,MACAnB,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAgB,GAAA7oC,MAAAynC,GACAQ,GAAA,KAGA,QAAAc,IAAA7C,EAAAC,GACA,GAAA8B,GAAA,CACA,GAAAK,GAAApC,EAAAqC,EACAS,IAAAx5C,IAAAyE,GAAAq0C,GAAA,IAAAA,KAAA,YAAAA,OAEAW,IAAA/C,EAAAgD,GAAA/C,CAEAP,IAAA5lC,MAAAkmC,EAAAC,GACA6B,GAAA9B,EAAAC,GAGA,QAAAgD,MACAvD,GAAAN,YAGA,QAAA8D,MACAL,GAAAE,GAAAC,IACAtD,GAAAL,UACAtxC,GAAA+0C,IAAAK,KAAAzB,KAAAC,GAAA,MACAF,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAI,GAAA,KAMA,QAAAnoC,IAAAumC,EAAAwB,GACA,OAAAA,GAAAxB,GAAA,EAAAwB,EAAA,IAAAA,EAGA,QAAAyB,IAAA92C,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAGA,QAAA82C,IAAAh5B,EAAA9iB,GACA,MAAA8iB,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAA9iB,MAAA8iB,EAAA,GAAA9iB,EAAA8iB,EAAA,IAAAA,EAAA,GAAA9iB,EAyEA,QAAA+7C,IAAAtD,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAsD,IAAA5C,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAsD,IAAAh8C,EAAA0D,EAAAiV,KACAsjC,GACAC,KAAAl8C,EAAAk8C,IAAAD,GACAE,KAAAz4C,EAAAy4C,IAAAF,GACAG,KAAAzjC,EAAAyjC,IAAAH,GAGA,QAAAI,MACAC,GAAA/pC,MAAAgqC,GAGA,QAAAA,IAAA9D,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACA5sC,IAAAstC,EAAAN,GAAAL,GACA1sC,GAAAqtC,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACA4D,GAAA/pC,MAAAkqC,GACAT,GAAAlwC,GAAAC,GAAAywC,IAGA,QAAAC,IAAAhE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACA14C,EAAAo5C,EAAAN,GAAAL,GACA/0C,EAAA01C,EAAAjC,GAAAsB,GACA9/B,EAAAw+B,GAAAuB,GACA16C,EAAAmb,GAAA4gC,IAAA/7C,EAAA+N,GAAA4M,EAAA6jC,GAAA94C,GAAA1F,KAAAw+C,GAAAx8C,EAAA8L,GAAA6M,GAAA3a,KAAA8N,GAAApI,EAAAqI,GAAA/L,GAAAhC,GAAA8N,GAAA9L,EAAA+L,GAAArI,EAAA84C,GAAA7jC,EACA+jC,KAAA1+C,EACA2+C,IAAA3+C,GAAA8N,OAAA9L,IACA48C,IAAA5+C,GAAA+N,OAAArI,IACAm5C,IAAA7+C,GAAAw+C,OAAA7jC,IACAqjC,GAAAlwC,GAAAC,GAAAywC,IAGA,QAAAM,MACAR,GAAA/pC,MAAAwpC,GAKA,QAAAgB,MACAT,GAAA/pC,MAAAyqC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IACAd,GAAA/pC,MAAAwpC,GAGA,QAAAiB,IAAAvE,EAAAC,GACAyE,GAAA1E,EAAA2E,GAAA1E,EACAD,GAAAE,GAAAD,GAAAC,GACA2D,GAAA/pC,MAAA2qC,EACA,IAAA9D,GAAAN,GAAAJ,EACA5sC,IAAAstC,EAAAN,GAAAL,GACA1sC,GAAAqtC,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACAsD,GAAAlwC,GAAAC,GAAAywC,IAGA,QAAAU,IAAAzE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACA14C,EAAAo5C,EAAAN,GAAAL,GACA/0C,EAAA01C,EAAAjC,GAAAsB,GACA9/B,EAAAw+B,GAAAuB,GACAlnC,EAAAzF,GAAA4M,EAAA6jC,GAAA94C,EACA+N,EAAA+qC,GAAAx8C,EAAA8L,GAAA6M,EACA0kC,EAAAvxC,GAAApI,EAAAqI,GAAA/L,EACAiU,EAAA8lC,GAAAvoC,IAAAC,IAAA4rC,KACA5qB,EAAA3mB,GAAA9L,EAAA+L,GAAArI,EAAA84C,GAAA7jC,EACA1C,EAAAhC,IAAA6iC,GAAArkB,GAAAxe,EACAjW,EAAAmb,GAAAlF,EAAAwe,EACA6qB,KAAArnC,EAAAzE,EACA+rC,IAAAtnC,EAAAxE,EACA+rC,IAAAvnC,EAAAonC,EACAX,IAAA1+C,EACA2+C,IAAA3+C,GAAA8N,OAAA9L,IACA48C,IAAA5+C,GAAA+N,OAAArI,IACAm5C,IAAA7+C,GAAAw+C,OAAA7jC,IACAqjC,GAAAlwC,GAAAC,GAAAywC,IA+CA,QAAAiB,IAAAhF,EAAAC,GACA,OAAAD,EAAA1B,GAAA0B,EAAAiF,GAAAjF,GAAA1B,GAAA0B,EAAAiF,GAAAjF,EAAAC,GAKA,QAAAiF,IAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAF,IAAAG,GAAAC,EAAAC,GAAAC,GAAAJ,GAAAK,GAAAJ,EAAAC,IACAE,GAAAJ,GACAC,GAAAC,EAAAG,GAAAJ,EAAAC,GACAL,GAGA,QAAAS,IAAAN,GACA,gBAAAnF,EAAAC,GACA,MAAAD,IAAAmF,GAAAnF,EAAA1B,GAAA0B,EAAAiF,GAAAjF,GAAA1B,GAAA0B,EAAAiF,GAAAjF,EAAAC,IAIA,QAAAsF,IAAAJ,GACA,GAAAO,GAAAD,GAAAN,EAEA,OADAO,GAAA7sB,OAAA4sB,IAAAN,GACAO,EAGA,QAAAF,IAAAJ,EAAAC,GAMA,QAAAK,GAAA1F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACA14C,EAAA84C,GAAAL,GAAAW,EACA11C,EAAAyzC,GAAAsB,GAAAW,EACAzgC,EAAAw+B,GAAAuB,GACA9+B,EAAAjB,EAAAylC,EAAAp+C,EAAAq+C,CACA,QACAllC,GAAAzV,EAAA46C,EAAA1kC,EAAA2kC,EAAAv+C,EAAAo+C,EAAAzlC,EAAA0lC,GACArH,GAAAp9B,EAAA0kC,EAAA56C,EAAA66C,IAbA,GAAAH,GAAAtF,GAAA+E,GACAQ,EAAAlH,GAAA0G,GACAS,EAAAxF,GAAAgF,GACAS,EAAApH,GAAA2G,EA0BA,OAZAK,GAAA7sB,OAAA,SAAAmnB,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACA14C,EAAA84C,GAAAL,GAAAW,EACA11C,EAAAyzC,GAAAsB,GAAAW,EACAzgC,EAAAw+B,GAAAuB,GACA9+B,EAAAjB,EAAA2lC,EAAA56C,EAAA66C,CACA,QACAplC,GAAAzV,EAAA46C,EAAA3lC,EAAA4lC,EAAAv+C,EAAAo+C,EAAAxkC,EAAAykC,GACArH,GAAAp9B,EAAAwkC,EAAAp+C,EAAAq+C,KAIAF,EAoBA,QAAAK,IAAAjH,EAAAjlC,EAAAuoC,EAAA4D,EAAAxpC,EAAAC,GACA,GAAA2lC,EAAA,CACA,GAAA6D,GAAA5F,GAAAxmC,GACAqsC,EAAAxH,GAAA7kC,GACAuQ,EAAA47B,EAAA5D,CACA,OAAA5lC,GACAA,EAAA3C,EAAAmsC,EAAAf,GACAxoC,EAAA5C,EAAAuQ,EAAA,IAEA5N,EAAA2pC,GAAAF,EAAAzpC,GACAC,EAAA0pC,GAAAF,EAAAxpC,IACAupC,EAAA,EAAAxpC,EAAAC,EAAAD,EAAAC,KAAAD,GAAAwpC,EAAAf,IAEA,QAAAnrC,GAAApK,EAAA8M,EAAyBwpC,EAAA,EAAAt2C,EAAA+M,EAAA/M,EAAA+M,EAAiC/M,GAAA0a,EAC1DtQ,EAAAgnC,IAAAmF,GAAAC,EAAA7F,GAAA3wC,IAAAw2C,EAAAxH,GAAAhvC,KACAovC,EAAAhlC,QAAA,GAAAA,EAAA,KAKA,QAAAqsC,IAAAF,EAAAnsC,GACAA,EAAAinC,GAAAjnC,KAAA,IAAAmsC,EACA5E,GAAAvnC,EACA,IAAAD,GAAAwkC,IAAAvkC,EAAA,GACA,UAAAA,EAAA,MAAAD,KAAAorC,GAAA9B,IAAA8B,GAkIA,QAAAmB,IAAAtsC,EAAApU,EAAA2gD,EAAAC,GACA57C,KAAAnD,EAAAuS,EACApP,KAAAwV,EAAAxa,EACAgF,KAAAwE,EAAAm3C,EACA37C,KAAA4K,EAAAgxC,EACA57C,KAAA8S,GAAA,EACA9S,KAAAyE,EAAAzE,KAAA0O,EAAA,KA+EA,QAAAmtC,IAAAv5C,GACA,GAAAmC,EAAAnC,EAAArH,OAAA,CAKA,IAJA,GAAAwJ,GAGA5C,EAFA9G,EAAA,EACA6G,EAAAU,EAAA,KAEAvH,EAAA0J,GACA7C,EAAA6C,EAAA5C,EAAAS,EAAAvH,GACA8G,EAAA6M,EAAA9M,EACAA,EAAAC,CAEAD,GAAA6C,EAAA5C,EAAAS,EAAA,GACAT,EAAA6M,EAAA9M,GASA,QAAAk6C,IAAAnzC,EAAAC,EAAAC,EAAAC,GAEA,QAAAizC,GAAAl/C,EAAA0D,GACA,MAAAoI,IAAA9L,MAAAgM,GAAAD,GAAArI,MAAAuI,EAGA,QAAA6kB,GAAAquB,EAAAC,EAAAX,EAAAlH,GACA,GAAAxyC,GAAA,EAAAs6C,EAAA,CACA,UAAAF,IACAp6C,EAAAu6C,EAAAH,EAAAV,OAAAY,EAAAC,EAAAF,EAAAX,KACAc,EAAAJ,EAAAC,GAAA,EAAAX,EAAA,GACA,EAAAlH,GAAAhlC,MAAA,IAAAxN,GAAA,IAAAA,EAAA+G,EAAAE,EAAAjH,EAAA,EAAAkH,EAAAF,UACAhH,KAAA05C,EAAA,QAAAY,OAEA9H,GAAAhlC,MAAA6sC,EAAA,GAAAA,EAAA,IAIA,QAAAE,GAAAztC,EAAA4sC,GACA,MAAAj4C,IAAAqL,EAAA,GAAA/F,GAAA8vC,GAAA6C,EAAA,MACAj4C,GAAAqL,EAAA,GAAA7F,GAAA4vC,GAAA6C,EAAA,MACAj4C,GAAAqL,EAAA,GAAA9F,GAAA6vC,GAAA6C,EAAA,MACAA,EAAA,MAGA,QAAAe,GAAAz6C,EAAAC,GACA,MAAAu6C,GAAAx6C,EAAA/E,EAAAgF,EAAAhF,GAGA,QAAAu/C,GAAAx6C,EAAAC,GACA,GAAAshC,GAAAgZ,EAAAv6C,EAAA,GACA06C,EAAAH,EAAAt6C,EAAA,EACA,OAAAshC,KAAAmZ,EAAAnZ,EAAAmZ,EACA,IAAAnZ,EAAAthC,EAAA,GAAAD,EAAA,GACA,IAAAuhC,EAAAvhC,EAAA,GAAAC,EAAA,GACA,IAAAshC,EAAAvhC,EAAA,GAAAC,EAAA,GACAA,EAAA,GAAAD,EAAA,GAGA,gBAAAwyC,GAmBA,QAAAhlC,GAAAvS,EAAA0D,GACAw7C,EAAAl/C,EAAA0D,IAAAg8C,EAAAntC,MAAAvS,EAAA0D,GAGA,QAAAi8C,KAGA,OAFAC,GAAA,EAEA1hD,EAAA,EAAA0J,EAAAi4C,EAAAzhD,OAAyCF,EAAA0J,IAAO1J,EAChD,OAAA4hD,GAAAT,EAAAU,EAAAF,EAAA3hD,GAAAwN,EAAA,EAAAuI,EAAA8rC,EAAA3hD,OAAAmU,EAAAwtC,EAAA,GAAAp2C,EAAA4I,EAAA,GAAA7I,EAAA6I,EAAA,GAAkH7G,EAAAuI,IAAOvI,EACzHo0C,EAAAn2C,EAAA01C,EAAA31C,EAAA6I,EAAAwtC,EAAAr0C,GAAA/B,EAAA4I,EAAA,GAAA7I,EAAA6I,EAAA,GACA8sC,GAAApzC,EAAyBvC,EAAAuC,IAAAtC,EAAAm2C,IAAA7zC,EAAAozC,IAAA31C,EAAA21C,IAAAvzC,EAAAg0C,MAAAF,EACTl2C,GAAAuC,IAAAtC,EAAAm2C,IAAA7zC,EAAAozC,IAAA31C,EAAA21C,IAAAvzC,EAAAg0C,MAAAF,CAIhB,OAAAA,GAIA,QAAA5H,KACA0H,EAAAM,EAAAC,KAAAJ,KAAAK,GAAA,EAGA,QAAAjI,KACA,GAAAkI,GAAAR,IACAS,EAAAF,GAAAC,EACAjB,GAAAe,EAAAngD,GAAAmgD,IAAA7hD,QACAgiD,GAAAlB,KACA3H,EAAAS,eACAoI,IACA7I,EAAAM,YACA/mB,EAAA,YAAAymB,GACAA,EAAAO,WAEAoH,GACAmB,GAAAJ,EAAAT,EAAAW,EAAArvB,EAAAymB,GAEAA,EAAAU,cAEAyH,EAAAnI,EAAA0I,EAAAJ,EAAAE,EAAA,KAGA,QAAAlI,KACAyI,EAAA/tC,MAAAgoC,EACAsF,KAAAn6C,KAAAq6C,MACAQ,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAA3zC,IAMA,QAAA+qC,KACAmI,IACA1F,EAAAoG,EAAAC,GACAC,GAAAL,GAAAR,EAAAc,SACAb,EAAAv6C,KAAAs6C,EAAAe,WAEAT,EAAA/tC,QACAiuC,GAAAd,EAAA5H,UAGA,QAAAyC,GAAAv6C,EAAA0D,GACA,GAAAuS,GAAAipC,EAAAl/C,EAAA0D,EAEA,IADAm8C,GAAAE,EAAAr6C,MAAA1F,EAAA0D,IACA68C,EACAI,EAAA3gD,EAAA4gD,EAAAl9C,EAAAm9C,EAAA5qC,EACAsqC,GAAA,EACAtqC,IACAypC,EAAA7H,YACA6H,EAAAntC,MAAAvS,EAAA0D,QAGA,IAAAuS,GAAAuqC,EAAAd,EAAAntC,MAAAvS,EAAA0D,OACA,CACA,GAAAqB,IAAA07C,EAAAl6C,KAAAE,IAAAu6C,GAAAz6C,KAAAuO,IAAAmsC,GAAAR,IAAAC,EAAAn6C,KAAAE,IAAAu6C,GAAAz6C,KAAAuO,IAAAmsC,GAAAP,KACA17C,GAAAhF,EAAAuG,KAAAE,IAAAu6C,GAAAz6C,KAAAuO,IAAAmsC,GAAAjhD,IAAA0D,EAAA6C,KAAAE,IAAAu6C,GAAAz6C,KAAAuO,IAAAmsC,GAAAv9C,IACAw9C,IAAAn8C,EAAAC,EAAA8G,EAAAC,EAAAC,EAAAC,IACAu0C,IACAd,EAAA7H,YACA6H,EAAAntC,MAAAxN,EAAA,GAAAA,EAAA,KAEA26C,EAAAntC,MAAAvN,EAAA,GAAAA,EAAA,IACAiR,GAAAypC,EAAA5H,UACAoI,GAAA,GACWjqC,IACXypC,EAAA7H,YACA6H,EAAAntC,MAAAvS,EAAA0D,GACAw8C,GAAA,GAIAO,EAAAzgD,EAAA0gD,EAAAh9C,EAAA88C,EAAAvqC,EA/GA,GAEAgqC,GACAJ,EACAE,EACAY,EAAAC,EAAAC,EACAJ,EAAAC,EAAAF,EACAD,EACAL,EARAR,EAAAnI,EACAyI,EAAAmB,KASAb,GACA/tC,QACAslC,YACAC,UACAE,eACAC,aAmGA,OAAAqI,IAqCA,QAAAc,MACAC,GAAA9uC,MAAA+uC,GACAD,GAAAvJ,QAAAyJ,GAGA,QAAAA,MACAF,GAAA9uC,MAAA8uC,GAAAvJ,QAAAV,GAGA,QAAAkK,IAAA7I,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACA6I,GAAA/I,EAAAgJ,GAAAtK,GAAAuB,GAAAgJ,GAAA5I,GAAAJ,GACA2I,GAAA9uC,MAAAovC,GAGA,QAAAA,IAAAlJ,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAU,GAAAlC,GAAAuB,GACAU,EAAAN,GAAAJ,GACAmC,EAAAr0C,GAAAiyC,EAAA+I,IACAI,EAAA9I,GAAA+B,GACAgH,EAAA1K,GAAA0D,GACA76C,EAAAo5C,EAAAyI,EACAn+C,EAAAg+C,GAAArI,EAAAoI,GAAArI,EAAAwI,EACAjpC,EAAA8oC,GAAApI,EAAAqI,GAAAtI,EAAAwI,CACAE,IAAA//C,IAAAoX,GAAA4gC,GAAA/5C,IAAA0D,KAAAiV,IACA6oC,GAAA/I,EAAAgJ,GAAApI,EAAAqI,GAAAtI,EAkBA,QAAA2I,IAAAh2C,EAAAE,EAAA4E,GACA,GAAAnN,GAAAof,GAAA/W,EAAAE,EAAA2vC,GAAA/qC,GAAAqO,OAAAjT,EACA,iBAAAjM,GAAsB,MAAA0D,GAAA4D,IAAA,SAAA5D,GAA2B,OAAA1D,EAAA0D,MAGjD,QAAAs+C,IAAAl2C,EAAAE,EAAA4E,GACA,GAAA5Q,GAAA8iB,GAAAhX,EAAAE,EAAA4vC,GAAAhrC,GAAAsO,OAAAlT,EACA,iBAAAtI,GAAsB,MAAA1D,GAAAsH,IAAA,SAAAtH,GAA2B,OAAAA,EAAA0D,MAGjD,QAAAu+C,MAOA,QAAAA,KACA,OAAYnjC,KAAA,kBAAA44B,YAAAwK,KAGZ,QAAAA,KACA,MAAAp/B,IAAAL,GAAAy5B,EAAAiG,KAAAxF,EAAAwF,GAAA76C,IAAAqjB,GACAzL,OAAA4D,GAAAL,GAAA05B,EAAAiG,KAAAxF,EAAAwF,GAAA96C,IAAAujB,IACA3L,OAAA4D,GAAAL,GAAA3W,EAAA8E,KAAA5E,EAAA4E,GAAAmS,OAAA,SAAA/iB,GAAsE,MAAAwG,IAAAxG,EAAAmiD,GAAAvG,KAAkCt0C,IAAAtH,IACxGkf,OAAA4D,GAAAL,GAAA1W,EAAA8E,KAAA5E,EAAA4E,GAAAkS,OAAA,SAAArf,GAAsE,MAAA8C,IAAA9C,EAAA0+C,GAAAxG,KAAkCt0C,IAAA5D,IAdxG,GAAAsI,GAAAF,EAAA6wC,EAAAT,EACAjwC,EAAAF,EAAA6wC,EAAAT,EAEAn8C,EAAA0D,EAAAinB,EAAAE,EADAja,EAAA,GAAAC,EAAAD,EAAAuxC,EAAA,GAAAC,EAAA,IAEAz9B,EAAA,GA+EA,OAlEAs9B,GAAAC,MAAA,WACA,MAAAA,KAAA56C,IAAA,SAAAowC,GAA8C,OAAS54B,KAAA,aAAA44B,kBAGvDuK,EAAAI,QAAA,WACA,OACAvjC,KAAA,UACA44B,aACA/sB,EAAAuxB,GAAAh9B,OACA2L,EAAA+xB,GAAAnyC,MAAA,GACAkgB,EAAAgyB,GAAAntB,UAAA/kB,MAAA,GACAogB,EAAAsxB,GAAA3sB,UAAA/kB,MAAA,OAKAw3C,EAAApR,OAAA,SAAA9lC,GACA,MAAA0D,WAAArQ,OACA6jD,EAAAK,YAAAv3C,GAAAw3C,YAAAx3C,GADAk3C,EAAAM,eAIAN,EAAAK,YAAA,SAAAv3C,GACA,MAAA0D,WAAArQ,QACA89C,GAAAnxC,EAAA,MAAA4xC,GAAA5xC,EAAA,MACAoxC,GAAApxC,EAAA,MAAA6xC,GAAA7xC,EAAA,MACAmxC,EAAAS,IAAA5xC,EAAAmxC,IAAAS,IAAA5xC,GACAoxC,EAAAS,IAAA7xC,EAAAoxC,IAAAS,IAAA7xC,GACAk3C,EAAAt9B,gBALAu3B,EAAAC,IAAAQ,EAAAC,KAQAqF,EAAAM,YAAA,SAAAx3C,GACA,MAAA0D,WAAArQ,QACA0N,GAAAf,EAAA,MAAAiB,GAAAjB,EAAA,MACAgB,GAAAhB,EAAA,MAAAkB,GAAAlB,EAAA,MACAe,EAAAE,IAAAjB,EAAAe,IAAAE,IAAAjB,GACAgB,EAAAE,IAAAlB,EAAAgB,IAAAE,IAAAlB,GACAk3C,EAAAt9B,gBALA7Y,EAAAC,IAAAC,EAAAC,KAQAg2C,EAAAp/B,KAAA,SAAA9X,GACA,MAAA0D,WAAArQ,OACA6jD,EAAAO,UAAAz3C,GAAA03C,UAAA13C,GADAk3C,EAAAQ,aAIAR,EAAAO,UAAA,SAAAz3C,GACA,MAAA0D,WAAArQ,QACA+jD,GAAAp3C,EAAA,GAAAq3C,GAAAr3C,EAAA,GACAk3C,IAFAE,EAAAC,IAKAH,EAAAQ,UAAA,SAAA13C,GACA,MAAA0D,WAAArQ,QACAwS,GAAA7F,EAAA,GAAA8F,GAAA9F,EAAA,GACAk3C,IAFArxC,EAAAC,IAKAoxC,EAAAt9B,UAAA,SAAA5Z,GACA,MAAA0D,WAAArQ,QACAumB,GAAA5Z,EACA/K,EAAA+hD,GAAAh2C,EAAAE,EAAA,IACAvI,EAAAs+C,GAAAl2C,EAAAE,EAAA2Y,GACAgG,EAAAo3B,GAAA5F,EAAAS,EAAA,IACA/xB,EAAAm3B,GAAA9F,EAAAS,EAAAh4B,GACAs9B,GANAt9B,GASAs9B,EACAK,eAAA,QAAA1G,KAAA,OAAAA,MACA2G,eAAA,QAAA3G,KAAA,OAAAA,MAGA,QAAA8G,MACA,MAAAT,QAqEA,QAAAU,MACAC,GAAArwC,MAAAswC,GAGA,QAAAA,IAAA7iD,EAAA0D,GACAk/C,GAAArwC,MAAAuwC,GACApyC,GAAAqyC,GAAA/iD,EAAA2Q,GAAAqyC,GAAAt/C,EAGA,QAAAo/C,IAAA9iD,EAAA0D,GACAu/C,GAAAlhD,IAAAihD,GAAAhjD,EAAA+iD,GAAAr/C,GACAq/C,GAAA/iD,EAAAgjD,GAAAt/C,EAGA,QAAAw/C,MACAJ,GAAApyC,GAAAC,IAqBA,QAAAwyC,IAAAnjD,EAAA0D,GACA1D,EAAAojD,QAAApjD,GACAA,EAAAgM,QAAAhM,GACA0D,EAAA2/C,QAAA3/C,GACAA,EAAAuI,QAAAvI,GA4CA,QAAA4/C,IAAAtjD,EAAA0D,GACA6/C,IAAAvjD,EACAwjD,IAAA9/C,IACA+/C,GAGA,QAAAC,MACAC,GAAApxC,MAAAqxC,GAGA,QAAAA,IAAA5jD,EAAA0D,GACAigD,GAAApxC,MAAAsxC,GACAP,GAAAQ,GAAA9jD,EAAA+jD,GAAArgD,GAGA,QAAAmgD,IAAA7jD,EAAA0D,GACA,GAAAkN,GAAA5Q,EAAA8jD,GAAAjzC,EAAAnN,EAAAqgD,GAAAprC,EAAAohC,GAAAnpC,IAAAC,IACAmzC,KAAArrC,GAAAmrC,GAAA9jD,GAAA,EACAikD,IAAAtrC,GAAAorC,GAAArgD,GAAA,EACAwgD,IAAAvrC,EACA2qC,GAAAQ,GAAA9jD,EAAA+jD,GAAArgD,GAGA,QAAAygD,MACAR,GAAApxC,MAAA+wC,GAGA,QAAAc,MACAT,GAAApxC,MAAA8xC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAArkD,EAAA0D,GACAigD,GAAApxC,MAAAgyC,GACAjB,GAAAkB,GAAAV,GAAA9jD,EAAAykD,GAAAV,GAAArgD,GAGA,QAAA6gD,IAAAvkD,EAAA0D,GACA,GAAAkN,GAAA5Q,EAAA8jD,GACAjzC,EAAAnN,EAAAqgD,GACAprC,EAAAohC,GAAAnpC,IAAAC,IAEAmzC,KAAArrC,GAAAmrC,GAAA9jD,GAAA,EACAikD,IAAAtrC,GAAAorC,GAAArgD,GAAA,EACAwgD,IAAAvrC,EAEAA,EAAAorC,GAAA/jD,EAAA8jD,GAAApgD,EACAghD,IAAA/rC,GAAAmrC,GAAA9jD,GACA2kD,IAAAhsC,GAAAorC,GAAArgD,GACAkhD,IAAA,EAAAjsC,EACA2qC,GAAAQ,GAAA9jD,EAAA+jD,GAAArgD,GAGA,QAAAmhD,IAAAlzC,GACAxO,KAAAyO,SAAAD,EA0CA,QAAAmzC,MACA3hD,KAAA4hD,WA+CA,QAAAC,IAAA1yC,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IA2OA,QAAA2yC,IAAAC,GACA,MAAAA,GAAA9mD,OAAA,EAKA,QAAAohD,IAAAz6C,EAAAC,GACA,QAAAD,IAAA/E,GAAA,KAAA+E,EAAA,GAAAkyC,GAAA2E,GAAA3E,GAAAlyC,EAAA,MACAC,IAAAhF,GAAA,KAAAgF,EAAA,GAAAiyC,GAAA2E,GAAA3E,GAAAjyC,EAAA,IAaA,QAAAmgD,IAAA5N,GACA,GAGA2I,GAHAtH,EAAA7rC,IACAstC,EAAAttC,IACAq4C,EAAAr4C,GAGA,QACA8qC,UAAA,WACAN,EAAAM,YACAqI,EAAA,GAEA3tC,MAAA,SAAA6nC,EAAAE,GACA,GAAA+K,GAAAjL,EAAA,EAAArD,OACA8D,EAAAr0C,GAAA4zC,EAAAxB,EACApyC,IAAAq0C,EAAA9D,IAAA6E,IACArE,EAAAhlC,MAAAqmC,EAAAyB,KAAAC,GAAA,IAAArD,QACAM,EAAAhlC,MAAA6yC,EAAA/K,GACA9C,EAAAO,UACAP,EAAAM,YACAN,EAAAhlC,MAAA8yC,EAAAhL,GACA9C,EAAAhlC,MAAA6nC,EAAAC,GACA6F,EAAA,GACOkF,IAAAC,GAAAxK,GAAA9D,KACPvwC,GAAAoyC,EAAAwM,GAAAxJ,KAAAhD,GAAAwM,EAAAxJ,IACAp1C,GAAA4zC,EAAAiL,GAAAzJ,KAAAxB,GAAAiL,EAAAzJ,IACAvB,EAAAiL,GAAA1M,EAAAyB,EAAAD,EAAAE,GACA/C,EAAAhlC,MAAA6yC,EAAA/K,GACA9C,EAAAO,UACAP,EAAAM,YACAN,EAAAhlC,MAAA8yC,EAAAhL,GACA6F,EAAA,GAEA3I,EAAAhlC,MAAAqmC,EAAAwB,EAAAC,EAAAC,GACA8K,EAAAC,GAEAvN,QAAA,WACAP,EAAAO,UACAc,EAAAyB,EAAAttC,KAEAmzC,MAAA,WACA,SAAAA,IAKA,QAAAoF,IAAA1M,EAAAyB,EAAAD,EAAAE,GACA,GAAAzB,GACA0M,EACAC,EAAArO,GAAAyB,EAAAwB,EACA,OAAA5zC,IAAAg/C,GAAA5J,GACA6J,IAAAtO,GAAAkD,IAAAkL,EAAAzM,GAAAwB,IAAAnD,GAAAiD,GACAjD,GAAAmD,IAAAzB,EAAAC,GAAAuB,IAAAlD,GAAAyB,KACAC,EAAA0M,EAAAC,KACAnL,EAAAC,GAAA,EAGA,QAAAoL,IAAAvG,EAAAC,EAAAX,EAAAlH,GACA,GAAAmB,EACA,UAAAyG,EACAzG,EAAA+F,EAAAxH,GACAM,EAAAhlC,OAAAwkC,GAAA2B,GACAnB,EAAAhlC,MAAA,EAAAmmC,GACAnB,EAAAhlC,MAAAwkC,GAAA2B,GACAnB,EAAAhlC,MAAAwkC,GAAA,GACAQ,EAAAhlC,MAAAwkC,IAAA2B,GACAnB,EAAAhlC,MAAA,GAAAmmC,GACAnB,EAAAhlC,OAAAwkC,IAAA2B,GACAnB,EAAAhlC,OAAAwkC,GAAA,GACAQ,EAAAhlC,OAAAwkC,GAAA2B,OACG,IAAAlyC,GAAA24C,EAAA,GAAAC,EAAA,IAAAxD,GAAA,CACH,GAAAnD,GAAA0G,EAAA,GAAAC,EAAA,GAAArI,MACA2B,GAAA+F,EAAAhG,EAAA,EACAlB,EAAAhlC,OAAAkmC,EAAAC,GACAnB,EAAAhlC,MAAA,EAAAmmC,GACAnB,EAAAhlC,MAAAkmC,EAAAC,OAEAnB,GAAAhlC,MAAA6sC,EAAA,GAAAA,EAAA,IA0LA,QAAAuG,IAAAC,GACA,gBAAArO,GACA,GAAArhC,GAAA,GAAA2vC,GACA,QAAAxoD,KAAAuoD,GAAA1vC,EAAA7Y,GAAAuoD,EAAAvoD,EAEA,OADA6Y,GAAAqhC,SACArhC,GAIA,QAAA2vC,OAYA,QAAAC,IAAAC,EAAAlV,EAAAxpC,GACA,GAAArJ,GAAA6yC,EAAA,MAAAA,EAAA,MACA5yC,EAAA4yC,EAAA,MAAAA,EAAA,MACAmV,EAAAD,EAAA9G,YAAA8G,EAAA9G,YAEA8G,GACAzoC,MAAA,KACAR,WAAA,MAEA,MAAAkpC,GAAAD,EAAA9G,WAAA,MAEAgH,GAAA5+C,EAAA0+C,EAAAxO,OAAA2O,IAEA,IAAAlhD,GAAAkhD,GAAAnF,SACAnnC,EAAArT,KAAAuO,IAAA9W,GAAAgH,EAAA,MAAAA,EAAA,OAAA/G,GAAA+G,EAAA,MAAAA,EAAA,QACAhF,GAAA6wC,EAAA,OAAA7yC,EAAA4b,GAAA5U,EAAA,MAAAA,EAAA,UACAtB,GAAAmtC,EAAA,OAAA5yC,EAAA2b,GAAA5U,EAAA,MAAAA,EAAA,SAIA,OAFA,OAAAghD,GAAAD,EAAA9G,WAAA+G,GAEAD,EACAzoC,MAAA,IAAA1D,GACAkD,WAAA9c,EAAA0D,IAGA,QAAAyiD,IAAAJ,EAAA7iD,EAAAmE,GACA,MAAAy+C,IAAAC,IAAA,KAAA7iD,GAAAmE,GAUA,QAAA++C,IAAAC,GACA,MAAAV,KACApzC,MAAA,SAAAvS,EAAA0D,GACA1D,EAAAqmD,EAAArmD,EAAA0D,GACAP,KAAAo0C,OAAAhlC,MAAAvS,EAAA,GAAAA,EAAA,OAKA,QAAAsmD,IAAAD,EAAAE,GAEA,QAAAC,GAAA16C,EAAAC,EAAA6sC,EAAAkH,EAAAn2C,EAAA88C,EAAAz6C,EAAAC,EAAAmuC,EAAAiF,EAAA31C,EAAAg9C,EAAAjjB,EAAA8T,GACA,GAAA3mC,GAAA5E,EAAAF,EACA+E,EAAA5E,EAAAF,EACA+E,EAAAF,IAAAC,GACA,IAAAC,EAAA,EAAAy1C,GAAA9iB,IAAA,CACA,GAAA1+B,GAAA+6C,EAAAT,EACAr6C,EAAA2E,EAAAD,EACAuE,EAAAw4C,EAAAC,EACAzyC,EAAA8lC,GAAAh1C,IAAAC,IAAAiJ,KACA04C,EAAA3P,GAAA/oC,GAAAgG,GACA6mC,EAAAt0C,MAAAyH,GAAA,GAAA2tC,IAAAp1C,GAAAoyC,EAAAwB,GAAAwB,IAAAhD,EAAAwB,GAAA,EAAAjhC,GAAAnU,EAAAD,GACA8M,EAAAw0C,EAAAvL,EAAA6L,GACAp3C,EAAAsC,EAAA,GACArC,EAAAqC,EAAA,GACA+0C,EAAAr3C,EAAAzD,EACA+6C,EAAAr3C,EAAAzD,EACA+6C,EAAAj2C,EAAA+1C,EAAAh2C,EAAAi2C,GACAC,IAAAh2C,EAAAy1C,GACA//C,IAAAoK,EAAAg2C,EAAA/1C,EAAAg2C,GAAA/1C,EAAA,QACAgvC,EAAAT,EAAA11C,EAAAD,EAAA+8C,EAAAC,EAAAK,MACAP,EAAA16C,EAAAC,EAAA6sC,EAAAkH,EAAAn2C,EAAA88C,EAAAl3C,EAAAC,EAAAsrC,EAAA/1C,GAAAkP,EAAAjP,GAAAiP,EAAAhG,EAAAw1B,EAAA8T,GACAA,EAAAhlC,MAAAhD,EAAAC,GACAg3C,EAAAj3C,EAAAC,EAAAsrC,EAAA/1C,EAAAC,EAAAiJ,EAAAjC,EAAAC,EAAAmuC,EAAAiF,EAAA31C,EAAAg9C,EAAAjjB,EAAA8T,KAIA,gBAAAA,GAYA,QAAAhlC,GAAAvS,EAAA0D,GACA1D,EAAAqmD,EAAArmD,EAAA0D,GACA6zC,EAAAhlC,MAAAvS,EAAA,GAAAA,EAAA,IAGA,QAAA63C,KACA/rC,EAAAiB,IACAi6C,EAAAz0C,MAAAgoC,EACAhD,EAAAM,YAGA,QAAA0C,GAAA9B,EAAAC,GACA,GAAAzqC,GAAAurC,IAAAf,EAAAC,IAAA7mC,EAAAw0C,EAAA5N,EAAAC,EACA8N,GAAA16C,EAAAC,EAAA6sC,EAAAkH,EAAAn2C,EAAA88C,EAAA36C,EAAA+F,EAAA,GAAA9F,EAAA8F,EAAA,GAAA+mC,EAAAH,EAAAqH,EAAA7xC,EAAA,GAAAtE,EAAAsE,EAAA,GAAAw4C,EAAAx4C,EAAA,GAAAg5C,GAAA1P,GACAA,EAAAhlC,MAAAzG,EAAAC,GAGA,QAAA+rC,KACAkP,EAAAz0C,QACAglC,EAAAO,UAGA,QAAAoP,KACArP,IACAmP,EAAAz0C,MAAA40C,EACAH,EAAAlP,QAAAsP,EAGA,QAAAD,GAAA1O,EAAAC,GACA6B,EAAAhC,EAAAE,EAAAC,GAAAhoC,EAAA5E,EAAA6E,EAAA5E,EAAAs7C,EAAAvH,EAAAwH,EAAA39C,EAAA49C,EAAAd,EACAO,EAAAz0C,MAAAgoC,EAGA,QAAA6M,KACAZ,EAAA16C,EAAAC,EAAA6sC,EAAAkH,EAAAn2C,EAAA88C,EAAA/1C,EAAAC,EAAA4nC,EAAA8O,EAAAC,EAAAC,EAAAN,GAAA1P,GACAyP,EAAAlP,UACAA,IA/CA,GAAAS,GAAA7nC,EAAAC,EAAA02C,EAAAC,EAAAC,EACA3O,EAAA9sC,EAAAC,EAAA+zC,EAAAn2C,EAAA88C,EAEAO,GACAz0C,QACAslC,YACAC,UACAE,aAAA,WAAgCT,EAAAS,eAAuBgP,EAAAnP,UAAAqP,GACvDjP,WAAA,WAA8BV,EAAAU,aAAqB+O,EAAAnP,aA0CnD,OAAAmP,IAUA,QAAAjB,IAAAM,GACA,MAAAmB,IAAA,WAAuC,MAAAnB,OAGvC,QAAAmB,IAAAC,GAYA,QAAA1B,GAAAxzC,GAEA,MADAA,GAAAm1C,EAAAn1C,EAAA,GAAAomC,GAAApmC,EAAA,GAAAomC,KACApmC,EAAA,GAAAqH,EAAAhJ,EAAAC,EAAA0B,EAAA,GAAAqH,GAGA,QAAA0X,GAAA/e,GAEA,MADAA,GAAAm1C,EAAAp2B,QAAA/e,EAAA,GAAA3B,GAAAgJ,GAAA/I,EAAA0B,EAAA,IAAAqH,GACArH,MAAA,GAAA0oC,GAAA1oC,EAAA,GAAA0oC,IAGA,QAAA0M,GAAA3nD,EAAA0D,GACA,MAAA1D,GAAAqmD,EAAArmD,EAAA0D,IAAA1D,EAAA,GAAA4Z,EAAAhJ,EAAAC,EAAA7Q,EAAA,GAAA4Z,GA2CA,QAAAguC,KACAF,EAAA3J,GAAA3gC,EAAAugC,GAAAC,EAAAC,EAAAC,GAAAuI,EACA,IAAA5lB,GAAA4lB,EAAA5N,EAAAC,EAGA,OAFA9nC,GAAA5Q,EAAAygC,EAAA,GAAA7mB,EACA/I,EAAAnN,EAAA+8B,EAAA,GAAA7mB,EACA68B,IAGA,QAAAA,KAEA,MADAoR,GAAAC,EAAA,KACA/B,EA3EA,GAAAM,GAGAz1C,EAAAC,EACAuM,EAAAsqC,EAEA37C,EAAAC,EAAAC,EAEA47C,EACAC,EARAluC,EAAA,IACA5Z,EAAA,IAAA0D,EAAA,IACA+0C,EAAA,EAAAC,EAAA,EACAkF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAiK,EAAA,KAAAC,EAAAC,GACAn8C,EAAA,KAAAo8C,EAAAC,GACA5B,EAAA,GAAA6B,EAAAC,GAAAV,EAAApB,EAuEA,OArDAR,GAAAxO,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAAS,GAAAN,EAAA5qC,EAAAgrC,EAAAF,EAAAJ,EAAAvQ,OAGAwO,EAAAwC,UAAA,SAAAx9C,GACA,MAAA0D,WAAArQ,QAAA4pD,GAAAj9C,EAAAy9C,GAAAT,EAAAh9C,EAAA4tC,GAAA,EAAAA,KAAAoP,EAAA,KAAAE,IAAAxR,KAAAsR,EAAA9M,IAGA8K,EAAA9G,WAAA,SAAAl0C,GACA,MAAA0D,WAAArQ,QAAA8pD,EAAA,MAAAn9C,GAAAe,EAAAC,EAAAC,EAAAC,EAAA,KAAAk8C,IAAAlJ,GAAAnzC,GAAAf,EAAA,MAAAgB,GAAAhB,EAAA,MAAAiB,GAAAjB,EAAA,MAAAkB,GAAAlB,EAAA,OAAA0rC,KAAA,MAAA3qC,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAGA85C,EAAAzoC,MAAA,SAAAvS,GACA,MAAA0D,WAAArQ,QAAAwb,GAAA7O,EAAA68C,KAAAhuC,GAGAmsC,EAAAjpC,UAAA,SAAA/R,GACA,MAAA0D,WAAArQ,QAAA4B,GAAA+K,EAAA,GAAArH,GAAAqH,EAAA,GAAA68C,MAAA5nD,EAAA0D,IAGAqiD,EAAAtlB,OAAA,SAAA11B,GACA,MAAA0D,WAAArQ,QAAAq6C,EAAA1tC,EAAA,OAAA4tC,GAAAD,EAAA3tC,EAAA,OAAA4tC,GAAAiP,MAAAnP,EAAAwC,GAAAvC,EAAAuC,KAGA8K,EAAA3oC,OAAA,SAAArS,GACA,MAAA0D,WAAArQ,QAAAw/C,EAAA7yC,EAAA,OAAA4tC,GAAAkF,EAAA9yC,EAAA,OAAA4tC,GAAAmF,EAAA/yC,EAAA3M,OAAA,EAAA2M,EAAA,OAAA4tC,GAAA,EAAAiP,MAAAhK,EAAA3C,GAAA4C,EAAA5C,GAAA6C,EAAA7C,KAGA8K,EAAAphC,UAAA,SAAA5Z,GACA,MAAA0D,WAAArQ,QAAAgqD,EAAAC,GAAAV,EAAApB,EAAAx7C,KAAA0rC,KAAAsD,GAAAwM,IAGAR,EAAAD,UAAA,SAAAjV,EAAAxpC,GACA,MAAAy+C,IAAAC,EAAAlV,EAAAxpC,IAGA0+C,EAAAI,QAAA,SAAAjjD,EAAAmE,GACA,MAAA8+C,IAAAJ,EAAA7iD,EAAAmE,IAgBA,WAGA,MAFAg/C,GAAAoB,EAAAt5C,MAAAhL,KAAAsL,WACAs3C,EAAAz0B,OAAA+0B,EAAA/0B,UACAs2B,KAIA,QAAAa,IAAAhB,GACA,GAAApN,GAAA,EACAC,EAAAvD,GAAA,EACA9iC,EAAAuzC,GAAAC,GACA51C,EAAAoC,EAAAomC,EAAAC,EAMA,OAJAzoC,GAAA62C,UAAA,SAAA39C,GACA,MAAA0D,WAAArQ,OAAA6V,EAAAomC,EAAAtvC,EAAA,GAAA4tC,GAAA2B,EAAAvvC,EAAA,GAAA4tC,KAAA0B,EAAAY,GAAAX,EAAAW,KAGAppC,EAGA,QAAA82C,IAAAtO,GAGA,QAAAuO,GAAAnQ,EAAAC,GACA,OAAAD,EAAAI,EAAA1B,GAAAuB,GAAAG,GAHA,GAAAA,GAAAC,GAAAuB,EAUA,OAJAuO,GAAAt3B,OAAA,SAAAtxB,EAAA0D,GACA,OAAA1D,EAAA64C,EAAA7B,GAAAtzC,EAAAm1C,KAGA+P,EAGA,QAAAC,IAAA98C,EAAAE,GAQA,QAAAo6C,GAAArmD,EAAA0D,GACA,GAAA2K,GAAA0rC,GAAA9rC,EAAA,EAAArG,EAAAuvC,GAAAzzC,IAAAkE,CACA,QAAAyG,EAAA8oC,GAAAn3C,GAAA4H,GAAA8oB,EAAAriB,EAAAyqC,GAAA94C,IATA,GAAA8oD,GAAA3R,GAAAprC,GAAAnE,GAAAkhD,EAAA3R,GAAAlrC,IAAA,CAGA,IAAAzF,GAAAoB,GAAAg0C,GAAA,MAAA+M,IAAA58C,EAEA,IAAAkC,GAAA,EAAA66C,GAAA,EAAAlhD,EAAAkhD,GAAAp4B,EAAAqpB,GAAA9rC,GAAArG,CAYA,OALAy+C,GAAA/0B,OAAA,SAAAtxB,EAAA0D,GACA,GAAAqlD,GAAAr4B,EAAAhtB,CACA,QAAAyV,GAAAnZ,EAAAwG,GAAAuiD,IAAAnhD,EAAAohD,GAAAD,GAAA/R,IAAA/oC,GAAAjO,IAAA+oD,KAAAnhD,MAAA,EAAAA,MAGAy+C,EAoBA,QAAA4C,IAAAC,GACA,GAAAthD,GAAAshD,EAAA9qD,MACA,QACAmU,MAAA,SAAAvS,EAAA0D,GAAuC,IAAZ,GAAAxF,IAAA,IAAYA,EAAA0J,GAAAshD,EAAAhrD,GAAAqU,MAAAvS,EAAA0D,IACvCylD,OAAA,WAAoC,IAAZ,GAAAjrD,IAAA,IAAYA,EAAA0J,GAAAshD,EAAAhrD,GAAAirD,UACpCtR,UAAA,WAAuC,IAAZ,GAAA35C,IAAA,IAAYA,EAAA0J,GAAAshD,EAAAhrD,GAAA25C,aACvCC,QAAA,WAAqC,IAAZ,GAAA55C,IAAA,IAAYA,EAAA0J,GAAAshD,EAAAhrD,GAAA45C,WACrCE,aAAA,WAA0C,IAAZ,GAAA95C,IAAA,IAAYA,EAAA0J,GAAAshD,EAAAhrD,GAAA85C,gBAC1CC,WAAA,WAAwC,IAAZ,GAAA/5C,IAAA,IAAYA,EAAA0J,GAAAshD,EAAAhrD,GAAA+5C,eAyFxC,QAAAmR,IAAA9rC,GACA,gBAAAtd,EAAA0D,GACA,GAAA8N,GAAAsnC,GAAA94C,GACAyR,EAAAqnC,GAAAp1C,GACAkW,EAAA0D,EAAA9L,EAAAC,EACA,QACAmI,EAAAnI,EAAA0lC,GAAAn3C,GACA4Z,EAAAu9B,GAAAzzC,KAKA,QAAA2lD,IAAAh3C,GACA,gBAAArS,EAAA0D,GACA,GAAAiV,GAAAohC,GAAA/5C,IAAA0D,KACAuK,EAAAoE,EAAAsG,GACA2wC,EAAAnS,GAAAlpC,GACAs7C,EAAAzQ,GAAA7qC,EACA,QACAkL,GAAAnZ,EAAAspD,EAAA3wC,EAAA4wC,GACAvS,GAAAr+B,GAAAjV,EAAA4lD,EAAA3wC,KAiCA,QAAA6wC,IAAA/Q,EAAAC,GACA,OAAAD,EAAAgR,GAAAC,IAAAzS,GAAAyB,GAAA,KAYA,QAAAiR,IAAAtD,GACA,GAIAuD,GAJA31C,EAAA8xC,GAAAM,GACA/oC,EAAArJ,EAAAqJ,MACAR,EAAA7I,EAAA6I,UACAmiC,EAAAhrC,EAAAgrC,UAsBA,OAnBAhrC,GAAAqJ,MAAA,SAAAvS,GACA,MAAA0D,WAAArQ,QAAAkf,EAAAvS,GAAA6+C,GAAA31C,EAAAgrC,WAAA,MAAAhrC,GAAAqJ,KAGArJ,EAAA6I,UAAA,SAAA/R,GACA,MAAA0D,WAAArQ,QAAA0e,EAAA/R,GAAA6+C,GAAA31C,EAAAgrC,WAAA,MAAAhrC,GAAA6I,KAGA7I,EAAAgrC,WAAA,SAAAl0C,GACA,IAAA0D,UAAArQ,OAAA,MAAAwrD,GAAA,KAAA3K,GACA,IAAA2K,EAAA,MAAA7+C,EAAA,CACA,GAAA6O,GAAAm9B,GAAAz5B,IACAnV,EAAA2U,GACA/R,KAAA5C,EAAA,GAAAyR,EAAAzR,EAAA,GAAAyR,IAAAzR,EAAA,GAAAyR,EAAAzR,EAAA,GAAAyR,IAGA,MADAqlC,GAAAl0C,GACAkJ,GAGAA,EAAAgrC,WAAA,MAGA,QAAA4K,IAAAnmD,GACA,MAAAgmD,KAAAzS,GAAAvzC,GAAA,GAGA,QAAAomD,IAAA/9C,EAAAE,GAOA,QAAAo6C,GAAArmD,EAAA0D,GACAqC,EAAA,EAAgBrC,GAAAuzC,GAAA2E,KAAAl4C,GAAAuzC,GAAA2E,IACNl4C,EAAAuzC,GAAA2E,KAAAl4C,EAAAuzC,GAAA2E,GACV,IAAAvtC,GAAAtI,EAAAgkD,GAAAF,GAAAnmD,GAAAkE,EACA,QAAAyG,EAAA8oC,GAAAvvC,EAAA5H,GAAA+F,EAAAsI,EAAAyqC,GAAAlxC,EAAA5H,IAVA,GAAAiR,GAAA6nC,GAAA/sC,GACAnE,EAAAmE,IAAAE,EAAAkrC,GAAAprC,GAAA09C,GAAAx4C,EAAA6nC,GAAA7sC,IAAAw9C,GAAAI,GAAA59C,GAAA49C,GAAA99C,IACAhG,EAAAkL,EAAA84C,GAAAF,GAAA99C,GAAAnE,IAEA,OAAAA,IASAy+C,EAAA/0B,OAAA,SAAAtxB,EAAA0D,GACA,GAAA4oC,GAAAvmC,EAAArC,EAAA2K,EAAA26C,GAAAphD,GAAAmyC,GAAA/5C,IAAAssC,IACA,QAAAnzB,GAAAnZ,EAAAwG,GAAA8lC,IAAA1kC,EAAAohD,GAAA1c,GAAA,EAAAmZ,GAAAsE,GAAAhkD,EAAAsI,EAAA,EAAAzG,IAAAqvC,KAGAoP,GAdAmD,GAuBA,QAAAQ,IAAAvR,EAAAC,GACA,OAAAD,EAAAC,GAUA,QAAAuR,IAAAl+C,EAAAE,GAOA,QAAAo6C,GAAArmD,EAAA0D,GACA,GAAAwmD,GAAAzyC,EAAA/T,EAAAymD,EAAAviD,EAAA5H,CACA,QAAAkqD,EAAA/S,GAAAgT,GAAA1yC,EAAAyyC,EAAApR,GAAAqR,IARA,GAAAl5C,GAAA6nC,GAAA/sC,GACAnE,EAAAmE,IAAAE,EAAAkrC,GAAAprC,IAAAkF,EAAA6nC,GAAA7sC,OAAAF,GACA0L,EAAAxG,EAAArJ,EAAAmE,CAEA,OAAAvF,IAAAoB,GAAAg0C,GAAAoO,IAOA3D,EAAA/0B,OAAA,SAAAtxB,EAAA0D,GACA,GAAAwmD,GAAAzyC,EAAA/T,CACA,QAAAyV,GAAAnZ,EAAAwG,GAAA0jD,IAAAtiD,EAAAohD,GAAAkB,GAAAzyC,EAAAuxC,GAAAphD,GAAAmyC,GAAA/5C,IAAAkqD,OAGA7D,GASA,QAAA+D,IAAApqD,EAAA0D,GACA,GAAA+N,GAAAqnC,GAAAp1C,GAAAkW,EAAAk/B,GAAA94C,GAAAyR,CACA,QAAAA,EAAA0lC,GAAAn3C,GAAA4Z,EAAAu9B,GAAAzzC,GAAAkW,GAWA,QAAAywC,IAAAzwC,EAAA0wC,EAAAC,GACA,WAAA3wC,GAAA,IAAA0wC,GAAA,IAAAC,EAAApC,GAAAxC,IACApzC,MAAA,SAAAvS,EAAA0D,GACAP,KAAAo0C,OAAAhlC,MAAAvS,EAAA4Z,EAAA0wC,EAAA5mD,EAAAkW,EAAA2wC,MAuCA,QAAAC,IAAAxqD,EAAA0D,GACA,OAAAo1C,GAAAp1C,GAAAyzC,GAAAn3C,GAAAm3C,GAAAzzC,IAWA,QAAA+mD,IAAAzqD,EAAA0D,GACA,GAAA+N,GAAAqnC,GAAAp1C,GAAAkW,EAAA,EAAAk/B,GAAA94C,GAAAyR,CACA,QAAAA,EAAA0lC,GAAAn3C,GAAA4Z,EAAAu9B,GAAAzzC,GAAAkW,GAaA,QAAA8wC,IAAAjS,EAAAC,GACA,OAAA+Q,GAAAC,IAAAzS,GAAAyB,GAAA,KAAAD,GAnmfA,GAAAkS,IAAA,QAEA1kD,GAAA,SAAAlB,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA+H,KAGAsnB,GAAA,SAAAnwB,GAEA,MADA,KAAAA,EAAA9F,SAAA8F,EAAA4B,EAAA5B,KAEA29B,KAAA,SAAA98B,EAAA/E,EAAAqQ,EAAAu6C,GAGA,IAFA,MAAAv6C,MAAA,GACA,MAAAu6C,MAAA7lD,EAAA3G,QACAiS,EAAAu6C,GAAA,CACA,GAAAC,GAAAx6C,EAAAu6C,IAAA,CACA1mD,GAAAa,EAAA8lD,GAAA7qD,GAAA,EAAAqQ,EAAAw6C,EAAA,EACAD,EAAAC,EAEA,MAAAx6C,IAEA7E,MAAA,SAAAzG,EAAA/E,EAAAqQ,EAAAu6C,GAGA,IAFA,MAAAv6C,MAAA,GACA,MAAAu6C,MAAA7lD,EAAA3G,QACAiS,EAAAu6C,GAAA,CACA,GAAAC,GAAAx6C,EAAAu6C,IAAA,CACA1mD,GAAAa,EAAA8lD,GAAA7qD,GAAA,EAAA4qD,EAAAC,EACAx6C,EAAAw6C,EAAA,EAEA,MAAAx6C,MAWAy6C,GAAAz2B,GAAApuB,IACA2qB,GAAAk6B,GAAAt/C,MACAu/C,GAAAD,GAAAjpB,KAEAmpB,GAAA,SAAAjmD,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAgI,KAGAk+C,GAAA,SAAAjrD,GACA,cAAAA,EAAA+M,KAAA/M,GAGAkrD,GAAA,SAAAzlD,EAAAM,GACA,GAEAhB,GACAiB,EAHA4B,EAAAnC,EAAArH,OACA6V,EAAA,EAGAiC,EAAA,EACAhY,GAAA,EACAwN,EAAA,CAEA,UAAA3F,EACA,OAAA7H,EAAA0J,GACAsD,MAAAnG,EAAAkmD,GAAAxlD,EAAAvH,OACA8H,EAAAjB,EAAAkP,EACAA,GAAAjO,IAAA0F,EACAwK,GAAAlQ,GAAAjB,EAAAkP,QAMA,QAAA/V,EAAA0J,GACAsD,MAAAnG,EAAAkmD,GAAAllD,EAAAN,EAAAvH,KAAAuH,OACAO,EAAAjB,EAAAkP,EACAA,GAAAjO,IAAA0F,EACAwK,GAAAlQ,GAAAjB,EAAAkP,GAKA,IAAAvI,EAAA,QAAAwK,IAAAxK,EAAA,IAGAy/C,GAAA,SAAA1lD,EAAAM,GACA,GAAAkQ,GAAAi1C,GAAAzlD,EAAAM,EACA,OAAAkQ,GAAA1P,KAAA8C,KAAA4M,MAGA46B,GAAA,SAAAprC,EAAAM,GACA,GAEAhB,GACAC,EACAiJ,EAJA/P,GAAA,EACA0J,EAAAnC,EAAArH,MAKA,UAAA2H,EAAA,CACA,OAAA7H,EAAA0J,GAAA,UAAA5C,EAAAS,EAAAvH,KAAA8G,KAAA,CAA2DD,EAAAkJ,EAAAjJ,CAAW,OACtE,OAAA9G,EAAA0J,GAAA,OAAA5C,EAAAS,EAAAvH,MACA6G,EAAAC,IAAAD,EAAAC,GACAiJ,EAAAjJ,IAAAiJ,EAAAjJ,QAIA,CACA,OAAA9G,EAAA0J,GAAA,UAAA5C,EAAAe,EAAAN,EAAAvH,KAAAuH,KAAAT,KAAA,CAAwED,EAAAkJ,EAAAjJ,CAAW,OACnF,OAAA9G,EAAA0J,GAAA,OAAA5C,EAAAe,EAAAN,EAAAvH,KAAAuH,MACAV,EAAAC,IAAAD,EAAAC,GACAiJ,EAAAjJ,IAAAiJ,EAAAjJ,IAIA,OAAAD,EAAAkJ,IAGAxI,GAAAgC,MAAAlK,UAEAkN,GAAAhF,GAAAgF,MACAnD,GAAA7B,GAAA6B,IAEA8jD,GAAA,SAAAprD,GACA,kBACA,MAAAA,KAIAqrD,GAAA,SAAArrD,GACA,MAAAA,IAGA8iB,GAAA,SAAA3c,EAAAC,EAAAyc,GACA1c,KAAAC,KAAAyc,GAAAjb,EAAA6G,UAAArQ,QAAA,GAAAgI,EAAAD,IAAA,KAAAyB,EAAA,KAAAib,CAMA,KAJA,GAAA3kB,IAAA,EACA0J,EAAA,EAAArB,KAAAE,IAAA,EAAAF,KAAAkc,MAAArc,EAAAD,GAAA0c,IACAC,EAAA,GAAArb,OAAAG,KAEA1J,EAAA0J,GACAkb,EAAA5kB,GAAAiI,EAAAjI,EAAA2kB,CAGA,OAAAC,IAGA9b,GAAAT,KAAA8C,KAAA,IACApC,GAAAV,KAAA8C,KAAA,IACAnC,GAAAX,KAAA8C,KAAA,GAEAsoB,GAAA,SAAAxrB,EAAAC,EAAAC,GACA,GAAAwc,GAAA3c,EAAAC,EAAAC,EAAAC,EACA,OAAAyc,IACAvc,KAAAkc,KAAAtc,EAAA0c,KACAtc,KAAAK,MAAAR,EAAAyc,OAAA,EACAA,IAcAyoC,GAAA,SAAAz7B,GACA,MAAAtpB,MAAAkc,KAAAlc,KAAAM,IAAAgpB,EAAAzxB,QAAAmI,KAAAglD,KAAA,GAGAC,GAAA,WAKA,QAAAA,GAAA7rD,GACA,GAAAzB,GAEA8B,EADA4H,EAAAjI,EAAAvB,OAEAyxB,EAAA,GAAApoB,OAAAG,EAEA,KAAA1J,EAAA,EAAeA,EAAA0J,IAAO1J,EACtB2xB,EAAA3xB,GAAAyC,EAAAhB,EAAAzB,KAAAyB,EAGA,IAAA0M,GAAA8iB,EAAAU,GACA/jB,EAAAO,EAAA,GACAL,EAAAK,EAAA,GACAo/C,EAAA34B,EAAAjD,EAAA/jB,EAAAE,EAGAvE,OAAAC,QAAA+jD,OAAA95B,GAAA7lB,EAAAE,EAAAy/C,GAIA,KADA,GAAAx3C,GAAAw3C,EAAArtD,OACAqtD,EAAA,IAAA3/C,GAAA2/C,EAAA/jB,UAAAzzB,CACA,MAAAw3C,EAAAx3C,EAAA,IAAAjI,GAAAy/C,EAAAzpD,QAAAiS,CAEA,IACAy3C,GADAC,EAAA,GAAAlkD,OAAAwM,EAAA,EAIA,KAAA/V,EAAA,EAAeA,GAAA+V,IAAQ/V,EACvBwtD,EAAAC,EAAAztD,MACAwtD,EAAA5/C,GAAA5N,EAAA,EAAAutD,EAAAvtD,EAAA,GAAA4N,EACA4/C,EAAA1/C,GAAA9N,EAAA+V,EAAAw3C,EAAAvtD,GAAA8N,CAIA,KAAA9N,EAAA,EAAeA,EAAA0J,IAAO1J,EACtB8B,EAAA6vB,EAAA3xB,GACA4N,GAAA9L,MAAAgM,GACA2/C,EAAA/6B,GAAA66B,EAAAzrD,EAAA,EAAAiU,IAAAvO,KAAA/F,EAAAzB,GAIA,OAAAytD,GA7CA,GAAAhrD,GAAA0qD,GACAl8B,EAAA0hB,GACA/d,EAAAw4B,EA0DA,OAZAE,GAAA7qD,MAAA,SAAAoK,GACA,MAAA0D,WAAArQ,QAAAuC,EAAA,kBAAAoK,KAAAqgD,GAAArgD,GAAAygD,GAAA7qD,GAGA6qD,EAAAr8B,OAAA,SAAApkB,GACA,MAAA0D,WAAArQ,QAAA+wB,EAAA,kBAAApkB,KAAAqgD,IAAArgD,EAAA,GAAAA,EAAA,KAAAygD,GAAAr8B,GAGAq8B,EAAA34B,WAAA,SAAA9nB,GACA,MAAA0D,WAAArQ,QAAA00B,EAAA,kBAAA/nB,KAAAqgD,GAAA3jD,MAAAC,QAAAqD,GAAAN,GAAAhN,KAAAsN,MAAAygD,GAAA14B,GAGA04B,GAGA14B,GAAA,SAAArtB,EAAAoM,EAAA9L,GAEA,GADA,MAAAA,MAAAklD,IACArjD,EAAAnC,EAAArH,OAAA,CACA,IAAAyT,OAAA,GAAAjK,EAAA,SAAA7B,EAAAN,EAAA,KAAAA,EACA,IAAAoM,GAAA,SAAA9L,EAAAN,EAAAmC,EAAA,GAAAA,EAAA,EAAAnC,EACA,IAAAmC,GACA3J,GAAA2J,EAAA,GAAAiK,EACA3T,EAAAqI,KAAAK,MAAA3I,GACA8G,GAAAgB,EAAAN,EAAAvH,KAAAuH,GACAT,GAAAe,EAAAN,EAAAvH,EAAA,GAAAA,EAAA,EAAAuH,EACA,OAAAV,IAAAC,EAAAD,IAAA9G,EAAAC,KAGA0tD,GAAA,SAAA/7B,EAAA/a,EAAArO,GAEA,MADAopB,GAAAvoB,GAAA7J,KAAAoyB,EAAAo7B,IAAAj4B,KAAA/sB,IACAM,KAAAkc,MAAAhc,EAAAqO,IAAA,GAAAge,GAAAjD,EAAA,KAAAiD,GAAAjD,EAAA,MAAAtpB,KAAAI,IAAAkpB,EAAAzxB,QAAA,QAGAytD,GAAA,SAAAh8B,EAAA/a,EAAArO,GACA,MAAAF,MAAAkc,MAAAhc,EAAAqO,IAAA,IAAAq2C,GAAAt7B,GAAAtpB,KAAAI,IAAAkpB,EAAAzxB,QAAA,QAGAqI,GAAA,SAAAhB,EAAAM,GACA,GAEAhB,GACAC,EAHA9G,GAAA,EACA0J,EAAAnC,EAAArH,MAIA,UAAA2H,EAAA,CACA,OAAA7H,EAAA0J,GAAA,UAAA5C,EAAAS,EAAAvH,KAAA8G,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAA9G,EAAA0J,GAAA,OAAA5C,EAAAS,EAAAvH,KAAA8G,EAAAD,MAAAC,OAGA,CACA,OAAA9G,EAAA0J,GAAA,UAAA5C,EAAAe,EAAAN,EAAAvH,KAAAuH,KAAAT,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAA9G,EAAA0J,GAAA,OAAA5C,EAAAe,EAAAN,EAAAvH,KAAAuH,KAAAT,EAAAD,MAAAC,GAGA,MAAAD,IAGA+mD,GAAA,SAAArmD,EAAAM,GACA,GAEAhB,GAFAmR,EAAA,EACAtO,EAAAnC,EAAArH,OAEAF,GAAA,EACAwN,EAAA9D,CAEA,UAAA7B,EACA,OAAA7H,EAAA0J,GAAAsD,MAAAnG,EAAAkmD,GAAAxlD,EAAAvH,OAA6DwN,EAA7DwK,GAAAnR,MAIA,QAAA7G,EAAA0J,GAAAsD,MAAAnG,EAAAkmD,GAAAllD,EAAAN,EAAAvH,KAAAuH,OAA0EiG,EAA1EwK,GAAAnR,CAGA,IAAA2G,EAAA,MAAAwK,GAAAxK,GAGAqgD,GAAA,SAAAtmD,EAAAM,GACA,GAEAhB,GAFAinD,KACApkD,EAAAnC,EAAArH,OAEAF,GAAA,CAEA,UAAA6H,EACA,OAAA7H,EAAA0J,GAAAsD,MAAAnG,EAAAkmD,GAAAxlD,EAAAvH,MAAA8tD,EAAAtmD,KAAAX,OAIA,QAAA7G,EAAA0J,GAAAsD,MAAAnG,EAAAkmD,GAAAllD,EAAAN,EAAAvH,KAAAuH,MAAAumD,EAAAtmD,KAAAX,EAGA,OAAA+tB,IAAAk5B,EAAAh5B,KAAA/sB,IAAA,KAGAnG,GAAA,SAAAmsD,GAQA,IAPA,GACAh4C,GAGAi4C,EACAzmD,EALAmC,EAAAqkD,EAAA7tD,OAEAF,GAAA,EACAwN,EAAA,IAIAxN,EAAA0J,GAAA8D,GAAAugD,EAAA/tD,GAAAE,MAGA,KAFA8tD,EAAA,GAAAzkD,OAAAiE,KAEA9D,GAAA,GAGA,IAFAnC,EAAAwmD,EAAArkD,GACAqM,EAAAxO,EAAArH,SACA6V,GAAA,GACAi4C,IAAAxgD,GAAAjG,EAAAwO,EAIA,OAAAi4C,IAGAp3C,GAAA,SAAArP,EAAAM,GACA,GAEAhB,GACAC,EAHA9G,GAAA,EACA0J,EAAAnC,EAAArH,MAIA,UAAA2H,EAAA,CACA,OAAA7H,EAAA0J,GAAA,UAAA5C,EAAAS,EAAAvH,KAAA8G,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAA9G,EAAA0J,GAAA,OAAA5C,EAAAS,EAAAvH,KAAA6G,EAAAC,IAAAD,EAAAC,OAGA,CACA,OAAA9G,EAAA0J,GAAA,UAAA5C,EAAAe,EAAAN,EAAAvH,KAAAuH,KAAAT,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAA9G,EAAA0J,GAAA,OAAA5C,EAAAe,EAAAN,EAAAvH,KAAAuH,KAAAV,EAAAC,IAAAD,EAAAC,GAGA,MAAAD,IAGAonD,GAAA,SAAA1mD,GAEA,IADA,GAAAvH,GAAA,EAAA0J,EAAAnC,EAAArH,OAAA,EAAAyT,EAAApM,EAAA,GAAA0mD,EAAA,GAAA1kD,OAAAG,EAAA,IAAAA,GACA1J,EAAA0J,GAAAukD,EAAAjuD,IAAA2T,IAAApM,IAAAvH,GACA,OAAAiuD,IAGAC,GAAA,SAAA3mD,EAAA8E,GAEA,IADA,GAAArM,GAAAqM,EAAAnM,OAAAiuD,EAAA,GAAA5kD,OAAAvJ,GACAA,KAAAmuD,EAAAnuD,GAAAuH,EAAA8E,EAAArM,GACA,OAAAmuD,IAGAC,GAAA,SAAA7mD,EAAAvB,GACA,GAAA0D,EAAAnC,EAAArH,OAAA,CACA,GACAwJ,GAEA2kD,EAHAruD,EAAA,EAEAwN,EAAA,EAEA8gD,EAAA/mD,EAAAiG,EAIA,KAFAxH,MAAA+B,MAEA/H,EAAA0J,IAAA1D,EAAAqoD,EAAA9mD,EAAAvH,GAAAsuD,GAAA,OAAAtoD,EAAAsoD,UAAAD,EAAA7gD,EAAAxN,EAEA,YAAAgG,EAAAsoD,KAAA9gD,EAAA,SAGA+gD,GAAA,SAAAhnD,EAAAkjC,EAAAN,GAKA,IAJA,GACAlgC,GACAjK,EAFA+V,GAAA,MAAAo0B,EAAA5iC,EAAArH,OAAAiqC,IAAAM,EAAA,MAAAA,EAAA,GAAAA,GAIA10B,GACA/V,EAAAqI,KAAAmmD,SAAAz4C,IAAA,EACA9L,EAAA1C,EAAAwO,EAAA00B,GACAljC,EAAAwO,EAAA00B,GAAAljC,EAAAvH,EAAAyqC,GACAljC,EAAAvH,EAAAyqC,GAAAxgC,CAGA,OAAA1C,IAGAknD,GAAA,SAAAlnD,EAAAM,GACA,GAEAhB,GAFAmR,EAAA,EACAtO,EAAAnC,EAAArH,OAEAF,GAAA,CAEA,UAAA6H,EACA,OAAA7H,EAAA0J,IAAA7C,GAAAU,EAAAvH,MAAAgY,GAAAnR,OAIA,QAAA7G,EAAA0J,IAAA7C,GAAAgB,EAAAN,EAAAvH,KAAAuH,MAAAyQ,GAAAnR,EAGA,OAAAmR,IAGA02C,GAAA,SAAApwC,GACA,KAAA5U,EAAA4U,EAAApe,QAAA,QACA,QAAAF,IAAA,EAAA+V,EAAAa,GAAA0H,EAAApe,GAAAwuD,EAAA,GAAAnlD,OAAAwM,KAAqE/V,EAAA+V,GACrE,OAAArM,GAAA8D,GAAA,EAAA+T,EAAAmtC,EAAA1uD,GAAA,GAAAuJ,OAAAG,KAA0D8D,EAAA9D,GAC1D6X,EAAA/T,GAAA8Q,EAAA9Q,GAAAxN,EAGA,OAAA0uD,IAOAC,GAAA,WACA,MAAAD,IAAAn+C,YAGAq+C,GAAA,GAIA3lD,GAAA5J,UAAA6J,EAAA7J,WACAwvD,YAAA5lD,EACAkoB,IAAA,SAAAhyB,GACA,MAAAyvD,IAAAzvD,IAAA8F,OAEAS,IAAA,SAAAvG,GACA,MAAA8F,MAAA2pD,GAAAzvD,IAEAmK,IAAA,SAAAnK,EAAAsD,GAEA,MADAwC,MAAA2pD,GAAAzvD,GAAAsD,EACAwC,MAEAhD,OAAA,SAAA9C,GACA,GAAAo1C,GAAAqa,GAAAzvD,CACA,OAAAo1C,KAAAtvC,mBAAAsvC,IAEAua,MAAA,WACA,OAAAva,KAAAtvC,MAAAsvC,EAAA,KAAAqa,UAAA3pD,MAAAsvC,IAEAwa,KAAA,WACA,GAAAA,KACA,QAAAxa,KAAAtvC,MAAAsvC,EAAA,KAAAqa,IAAAG,EAAAvnD,KAAA+sC,EAAAhoC,MAAA,GACA,OAAAwiD,IAEAp9B,OAAA,WACA,GAAAA,KACA,QAAA4iB,KAAAtvC,MAAAsvC,EAAA,KAAAqa,IAAAj9B,EAAAnqB,KAAAvC,KAAAsvC,GACA,OAAA5iB,IAEAq9B,QAAA,WACA,GAAAA,KACA,QAAAza,KAAAtvC,MAAAsvC,EAAA,KAAAqa,IAAAI,EAAAxnD,MAAyErI,IAAAo1C,EAAAhoC,MAAA,GAAA9J,MAAAwC,KAAAsvC,IACzE,OAAAya,IAEAhqD,KAAA,WACA,GAAAA,GAAA,CACA,QAAAuvC,KAAAtvC,MAAAsvC,EAAA,KAAAqa,MAAA5pD,CACA,OAAAA,IAEAm0B,MAAA,WACA,OAAAob,KAAAtvC,MAAA,GAAAsvC,EAAA,KAAAqa,GAAA,QACA,WAEAvlD,KAAA,SAAAxB,GACA,OAAA0sC,KAAAtvC,MAAAsvC,EAAA,KAAAqa,IAAA/mD,EAAA5C,KAAAsvC,KAAAhoC,MAAA,GAAAtH,OA0BA,IAAAgqD,IAAA,WAOA,QAAAh/C,GAAA1I,EAAAg+B,EAAA2pB,EAAAC,GACA,GAAA5pB,GAAAwpB,EAAA7uD,OAAA,aAAAkvD,EACAA,EAAA7nD,GAAA,MAAA8nD,EACA9nD,EAAAutB,KAAAu6B,GACA9nD,CAWA,KATA,GAGAqyB,GACAn3B,EAEAkvB,EANA3xB,GAAA,EACA0J,EAAAnC,EAAArH,OACAf,EAAA4vD,EAAAxpB,KAGA+pB,EAAApmD,IAEA25C,EAAAqM,MAEAlvD,EAAA0J,IACAioB,EAAA29B,EAAA5pD,IAAAk0B,EAAAz6B,EAAAsD,EAAA8E,EAAAvH,IAAA,KACA2xB,EAAAnqB,KAAA/E,GAEA6sD,EAAAhmD,IAAAswB,GAAAn3B,GAQA,OAJA6sD,GAAAjmD,KAAA,SAAAsoB,EAAAxyB,GACAgwD,EAAAtM,EAAA1jD,EAAA8Q,EAAA0hB,EAAA4T,EAAA2pB,EAAAC,MAGAtM,EAGA,QAAAmM,GAAA5lD,EAAAm8B,GACA,KAAAA,EAAAwpB,EAAA7uD,OAAA,MAAAkJ,EACA,IAAA7B,GAAAgoD,EAAAC,EAAAjqB,EAAA,EAGA,OAFA,OAAA6pB,GAAA7pB,GAAAwpB,EAAA7uD,OAAAqH,EAAA6B,EAAA4lD,WACAznD,KAAA6B,EAAAC,KAAA,SAAA0O,EAAA2D,GAA8CnU,EAAAC,MAAarI,IAAAuc,EAAAiW,OAAAq9B,EAAAj3C,EAAAwtB,QAC3D,MAAAgqB,EAAAhoD,EAAAutB,KAAA,SAAAjuB,EAAAC,GAAwD,MAAAyoD,GAAA1oD,EAAA1H,IAAA2H,EAAA3H,OAAgCoI,EAzCxF,GAEA8nD,GACAD,EACAH,EAJAF,KACAS,IA2CA,OAAAP,IACA9lD,OAAA,SAAA5B,GAA6B,MAAA0I,GAAA1I,EAAA,EAAAoC,EAAAC,IAC7BR,IAAA,SAAA7B,GAA0B,MAAA0I,GAAA1I,EAAA,EAAAsC,EAAAC,IAC1BklD,QAAA,SAAAznD,GAA8B,MAAAynD,GAAA/+C,EAAA1I,EAAA,EAAAsC,EAAAC,GAAA,IAC9B3K,IAAA,SAAA2I,GAAoC,MAAdinD,GAAAvnD,KAAAM,GAAcmnD,GACpCO,SAAA,SAAAlsB,GAAkE,MAAnCksB,GAAAT,EAAA7uD,OAAA,GAAAojC,EAAmC2rB,GAClEI,WAAA,SAAA/rB,GAAqD,MAApB+rB,GAAA/rB,EAAoB2rB,GACrDG,OAAA,SAAAvnD,GAAqC,MAAZunD,GAAAvnD,EAAYonD,KAsBrCQ,GAAAvmD,EAAA7J,SAEA0K,GAAA1K,UAAAiK,EAAAjK,WACAwvD,YAAA9kD,EACAonB,IAAAs+B,GAAAt+B,IACAttB,IAAA,SAAApB,GAGA,MAFAA,IAAA,GACAwC,KAAA2pD,GAAAnsD,KACAwC,MAEAhD,OAAAwtD,GAAAxtD,OACA6sD,MAAAW,GAAAX,MACAn9B,OAAA89B,GAAAV,KACA/pD,KAAAyqD,GAAAzqD,KACAm0B,MAAAs2B,GAAAt2B,MACA9vB,KAAAomD,GAAApmD,KAmBA,IAAA0lD,IAAA,SAAA3lD,GACA,GAAA2lD,KACA,QAAA5vD,KAAAiK,GAAA2lD,EAAAvnD,KAAArI,EACA,OAAA4vD,IAGAp9B,GAAA,SAAAvoB,GACA,GAAAuoB,KACA,QAAAxyB,KAAAiK,GAAAuoB,EAAAnqB,KAAA4B,EAAAjK,GACA,OAAAwyB,IAGAq9B,GAAA,SAAA5lD,GACA,GAAA4lD,KACA,QAAA7vD,KAAAiK,GAAA4lD,EAAAxnD,MAAqCrI,MAAAsD,MAAA2G,EAAAjK,IACrC,OAAA6vD,IAGAU,GAAA,SAAA94C,EAAArO,GAKA,MAJAqO,GAAA,MAAAA,EAAA,GAAAA,EACArO,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAgI,UAAArQ,QAAAqI,EAAAqO,IAAA,GACArO,GAAAqO,EACA,WACA,MAAAvO,MAAAmmD,SAAAjmD,EAAAqO,IAIA2lC,GAAA,SAAAoT,EAAAC,GACA,GAAA9tD,GAAAqO,CAGA,OAFAw/C,GAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,GAAApqD,EAGA,UAAA1D,EAAA0D,EAAA1D,IAAA,SAGA,GACAA,GAAA,EAAAuG,KAAAmmD,SAAA,EACAhpD,EAAA,EAAA6C,KAAAmmD,SAAA,EACAr+C,EAAArO,IAAA0D,WACK2K,KAAA,EAEL,OAAAw/C,GAAAC,EAAApqD,EAAA6C,KAAA8C,MAAA,EAAA9C,KAAAM,IAAAwH,QAIA0/C,GAAA,WACA,GAAAC,GAAAvT,GAAAtsC,MAAAhL,KAAAsL,UACA,mBACA,MAAAlI,MAAAsX,IAAAmwC,OAIAC,GAAA,SAAArmD,GACA,kBACA,OAAA+kD,GAAA,EAAAzuD,EAAA,EAA4BA,EAAA0J,IAAO1J,EAAAyuD,GAAApmD,KAAAmmD,QACnC,OAAAC,KAIAuB,GAAA,SAAAtmD,GACA,GAAAumD,GAAAF,GAAArmD,EACA,mBACA,MAAAumD,KAAAvmD,IAIAwmD,GAAA,SAAA3V,GACA,kBACA,OAAAlyC,KAAAM,IAAA,EAAAN,KAAAmmD,UAAAjU,IAgCA9lB,GAAA,EAEA07B,GAAA,QAAAC,GAAAvgD,GAGA,QAAAsgD,GAAAlmD,GACA,MAAA5B,MAAAI,IAAAwB,EAAA4F,GAKA,MARAA,MAMAsgD,EAAA17B,SAAA27B,EAEAD,GACC17B,IAED47B,GAAA,QAAAD,GAAAvgD,GAGA,QAAAwgD,GAAApmD,GACA,SAAA5B,KAAAI,IAAA,EAAAwB,EAAA4F,GAKA,MARAA,MAMAwgD,EAAA57B,SAAA27B,EAEAC,GACC57B,IAED67B,GAAA,QAAAF,GAAAvgD,GAGA,QAAAygD,GAAArmD,GACA,QAAAA,GAAA,MAAA5B,KAAAI,IAAAwB,EAAA4F,GAAA,EAAAxH,KAAAI,IAAA,EAAAwB,EAAA4F,IAAA,EAKA,MARAA,MAMAygD,EAAA77B,SAAA27B,EAEAE,GACC77B,IAED3pB,GAAAzC,KAAAkoD,GACA7lD,GAAAI,GAAA,EAsCAU,GAAA,KACAG,GAAA,KACAD,GAAA,KACAE,GAAA,IACAE,GAAA,KACAD,GAAA,MACAE,GAAA,MACAC,GAAA,MACAC,GAAA,MACAR,GAAA,EAAAD,MAcAglD,GAAA,QAEAC,GAAA,QAAAL,GAAAp4C,GAGA,QAAAy4C,GAAAxmD,GACA,MAAAA,OAAA+N,EAAA,GAAA/N,EAAA+N,GAKA,MARAA,MAMAy4C,EAAAD,UAAAJ,EAEAK,GACCD,IAEDE,GAAA,QAAAN,GAAAp4C,GAGA,QAAA04C,GAAAzmD,GACA,QAAAA,MAAA+N,EAAA,GAAA/N,EAAA+N,GAAA,EAKA,MARAA,MAMA04C,EAAAF,UAAAJ,EAEAM,GACCF,IAEDG,GAAA,QAAAP,GAAAp4C,GAGA,QAAA24C,GAAA1mD,GACA,QAAAA,GAAA,KAAAA,MAAA+N,EAAA,GAAA/N,EAAA+N,IAAA/N,GAAA,GAAAA,IAAA+N,EAAA,GAAA/N,EAAA+N,GAAA,KAKA,MARAA,MAMA24C,EAAAH,UAAAJ,EAEAO,GACCH,IAEDI,GAAA,EAAAvoD,KAAAkoD,GACAM,GAAA,EACAC,GAAA,GAEAC,GAAA,QAAAX,GAAAvpD,EAAA8M,GAGA,QAAAo9C,GAAA9mD,GACA,MAAApD,GAAAwB,KAAAI,IAAA,OAAAwB,GAAA5B,KAAAuC,KAAAoN,EAAA/N,GAAA0J,GAHA,GAAAqE,GAAA3P,KAAA6I,KAAA,GAAArK,EAAAwB,KAAAE,IAAA,EAAA1B,MAAA8M,GAAAi9C,GASA,OAHAG,GAAAF,UAAA,SAAAhqD,GAAqC,MAAAupD,GAAAvpD,EAAA8M,EAAAi9C,KACrCG,EAAAD,OAAA,SAAAn9C,GAAkC,MAAAy8C,GAAAvpD,EAAA8M,IAElCo9C,GACCF,GAAAC,IAEDE,GAAA,QAAAZ,GAAAvpD,EAAA8M,GAGA,QAAAq9C,GAAA/mD,GACA,SAAApD,EAAAwB,KAAAI,IAAA,OAAAwB,OAAA5B,KAAAuC,KAAAX,EAAA+N,GAAArE,GAHA,GAAAqE,GAAA3P,KAAA6I,KAAA,GAAArK,EAAAwB,KAAAE,IAAA,EAAA1B,MAAA8M,GAAAi9C,GASA,OAHAI,GAAAH,UAAA,SAAAhqD,GAAsC,MAAAupD,GAAAvpD,EAAA8M,EAAAi9C,KACtCI,EAAAF,OAAA,SAAAn9C,GAAmC,MAAAy8C,GAAAvpD,EAAA8M,IAEnCq9C,GACCH,GAAAC,IAEDG,GAAA,QAAAb,GAAAvpD,EAAA8M,GAGA,QAAAs9C,GAAAhnD,GACA,QAAAA,EAAA,EAAAA,EAAA,KACApD,EAAAwB,KAAAI,IAAA,KAAAwB,GAAA5B,KAAAuC,KAAAoN,EAAA/N,GAAA0J,GACA,EAAA9M,EAAAwB,KAAAI,IAAA,MAAAwB,GAAA5B,KAAAuC,KAAAoN,EAAA/N,GAAA0J,IAAA,EALA,GAAAqE,GAAA3P,KAAA6I,KAAA,GAAArK,EAAAwB,KAAAE,IAAA,EAAA1B,MAAA8M,GAAAi9C,GAWA,OAHAK,GAAAJ,UAAA,SAAAhqD,GAAwC,MAAAupD,GAAAvpD,EAAA8M,EAAAi9C,KACxCK,EAAAH,OAAA,SAAAn9C,GAAqC,MAAAy8C,GAAAvpD,EAAA8M,IAErCs9C,GACCJ,GAAAC,IAEDI,GAAA,SAAAvP,GAOA,IANA,GAEA96C,GAFA7G,GAAA,EACA0J,EAAAi4C,EAAAzhD,OAEA4G,EAAA66C,EAAAj4C,EAAA,GACAwnD,EAAA,IAEAlxD,EAAA0J,GACA7C,EAAAC,EACAA,EAAA66C,EAAA3hD,GACAkxD,GAAArqD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAGA,OAAAoqD,GAAA,GAGAC,GAAA,SAAAxP,GAUA,IATA,GAIA96C,GAEAkJ,EANA/P,GAAA,EACA0J,EAAAi4C,EAAAzhD,OACA4B,EAAA,EACA0D,EAAA,EAEAsB,EAAA66C,EAAAj4C,EAAA,GAEAgS,EAAA,IAEA1b,EAAA0J,GACA7C,EAAAC,EACAA,EAAA66C,EAAA3hD,GACA0b,GAAA3L,EAAAlJ,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACA/E,IAAA+E,EAAA,GAAAC,EAAA,IAAAiJ,EACAvK,IAAAqB,EAAA,GAAAC,EAAA,IAAAiJ,CAGA,OAAA2L,IAAA,GAAA5Z,EAAA4Z,EAAAlW,EAAAkW,IAOApP,GAAA,SAAAzF,EAAAC,EAAAiJ,GACA,OAAAjJ,EAAA,GAAAD,EAAA,KAAAkJ,EAAA,GAAAlJ,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAkJ,EAAA,GAAAlJ,EAAA,KAuBAuqD,GAAA,SAAAnxD,GACA,IAAAyJ,EAAAzJ,EAAAC,QAAA,aAEA,IAAAF,GACA0J,EACA2nD,EAAA,GAAA9nD,OAAAG,GACA4nD,EAAA,GAAA/nD,OAAAG,EAEA,KAAA1J,EAAA,EAAaA,EAAA0J,IAAO1J,EAAAqxD,EAAArxD,KAAAC,EAAAD,GAAA,IAAAC,EAAAD,GAAA,GAAAA,EAEpB,KADAqxD,EAAAv8B,KAAA3oB,GACAnM,EAAA,EAAaA,EAAA0J,IAAO1J,EAAAsxD,EAAAtxD,IAAAqxD,EAAArxD,GAAA,IAAAqxD,EAAArxD,GAAA,GAEpB,IAAAuxD,GAAAnlD,EAAAilD,GACAG,EAAAplD,EAAAklD,GAGAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAAtxD,OAAA,KAAAqxD,IAAArxD,OAAA,GACAkxD,IAIA,KAAApxD,EAAAuxD,EAAArxD,OAAA,EAAmCF,GAAA,IAAQA,EAAAoxD,EAAA5pD,KAAAvH,EAAAoxD,EAAAE,EAAAvxD,IAAA,IAC3C,KAAAA,GAAAyxD,EAAqBzxD,EAAAwxD,EAAAtxD,OAAAwxD,IAAqC1xD,EAAAoxD,EAAA5pD,KAAAvH,EAAAoxD,EAAAG,EAAAxxD,IAAA,IAE1D,OAAAoxD,IAGAO,GAAA,SAAAhQ,EAAAttC,GAQA,OAHAvG,GAAAC,EAJArE,EAAAi4C,EAAAzhD,OACAyT,EAAAguC,EAAAj4C,EAAA,GACA5H,EAAAuS,EAAA,GAAA7O,EAAA6O,EAAA,GACAzG,EAAA+F,EAAA,GAAA9F,EAAA8F,EAAA,GAEAi+C,GAAA,EAEA5xD,EAAA,EAAiBA,EAAA0J,IAAO1J,EACxB2T,EAAAguC,EAAA3hD,GAAA8N,EAAA6F,EAAA,GAAA5F,EAAA4F,EAAA,GACA5F,EAAAvI,GAAAqI,EAAArI,GAAA1D,GAAA8L,EAAAE,IAAAtI,EAAAuI,IAAAF,EAAAE,GAAAD,IAAA8jD,MACAhkD,EAAAE,EAAAD,EAAAE,CAGA,OAAA6jD,IAGAC,GAAA,SAAAlQ,GAUA,IATA,GAGA9iC,GACAC,EAJA9e,GAAA,EACA0J,EAAAi4C,EAAAzhD,OACA4G,EAAA66C,EAAAj4C,EAAA,GAGAqV,EAAAjY,EAAA,GACAkY,EAAAlY,EAAA,GACAgrD,EAAA,IAEA9xD,EAAA0J,GACAmV,EAAAE,EACAD,EAAAE,EACAlY,EAAA66C,EAAA3hD,GACA+e,EAAAjY,EAAA,GACAkY,EAAAlY,EAAA,GACA+X,GAAAE,EACAD,GAAAE,EACA8yC,GAAAzpD,KAAA8C,KAAA0T,IAAAC,IAGA,OAAAgzC,IAGAC,GAAA1pD,KAAAkoD,GACAyB,GAAA,EAAAD,GACAE,GAAA,KACAC,GAAAF,GAAAC,EAYAzlD,GAAAnN,UAAAyN,EAAAzN,WACAwvD,YAAAriD,EACA2lD,OAAA,SAAArwD,EAAA0D,GACAP,KAAA4H,EAAArF,KAAA,IAAAvC,KAAAwH,IAAAxH,KAAA0H,KAAA7K,EAAA,IAAAmD,KAAAyH,IAAAzH,KAAA2H,KAAApH,IAEA4sD,UAAA,WACA,OAAAntD,KAAA0H,MACA1H,KAAA0H,IAAA1H,KAAAwH,IAAAxH,KAAA2H,IAAA3H,KAAAyH;AACAzH,KAAA4H,EAAArF,KAAA,OAGA6qD,OAAA,SAAAvwD,EAAA0D,GACAP,KAAA4H,EAAArF,KAAA,IAAAvC,KAAA0H,KAAA7K,EAAA,IAAAmD,KAAA2H,KAAApH,IAEA8sD,iBAAA,SAAAxkD,EAAAC,EAAAjM,EAAA0D,GACAP,KAAA4H,EAAArF,KAAA,KAAAsG,EAAA,KAAAC,EAAA,IAAA9I,KAAA0H,KAAA7K,EAAA,IAAAmD,KAAA2H,KAAApH,IAEA+O,cAAA,SAAAzG,EAAAC,EAAAsD,EAAAC,EAAAxP,EAAA0D,GACAP,KAAA4H,EAAArF,KAAA,KAAAsG,EAAA,KAAAC,EAAA,KAAAsD,EAAA,KAAAC,EAAA,IAAArM,KAAA0H,KAAA7K,EAAA,IAAAmD,KAAA2H,KAAApH,IAEA+sD,MAAA,SAAAzkD,EAAAC,EAAAsD,EAAAC,EAAAnB,GACArC,KAAAC,KAAAsD,KAAAC,KAAAnB,IACA,IAAAvC,GAAA3I,KAAA0H,IACAkB,EAAA5I,KAAA2H,IACA+5B,EAAAt1B,EAAAvD,EACA84B,EAAAt1B,EAAAvD,EACAkE,EAAArE,EAAAE,EACAoE,EAAArE,EAAAE,EACAykD,EAAAvgD,IAAAC,GAGA,IAAA/B,EAAA,WAAAlB,OAAA,oBAAAkB,EAGA,WAAAlL,KAAA0H,IACA1H,KAAA4H,EAAArF,KACA,IAAAvC,KAAA0H,IAAAmB,EAAA,IAAA7I,KAAA2H,IAAAmB,OAKA,IAAAykD,EAAAP,GAKA,GAAA5pD,KAAAC,IAAA4J,EAAAy0B,EAAAC,EAAA30B,GAAAggD,IAAA9hD,EAOA,CACA,GAAAsiD,GAAAphD,EAAAzD,EACA8kD,EAAAphD,EAAAzD,EACA8kD,EAAAhsB,IAAAC,IACAgsB,EAAAH,IAAAC,IACAG,EAAAxqD,KAAA8C,KAAAwnD,GACAG,EAAAzqD,KAAA8C,KAAAqnD,GACAt+C,EAAA/D,EAAA9H,KAAAmjD,KAAAuG,GAAA1pD,KAAAuwC,MAAA+Z,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GACAC,EAAA7+C,EAAA4+C,EACAE,EAAA9+C,EAAA2+C,CAGAxqD,MAAAC,IAAAyqD,EAAA,GAAAd,IACAhtD,KAAA4H,EAAArF,KACA,IAAAsG,EAAAilD,EAAA9gD,EAAA,IAAAlE,EAAAglD,EAAA7gD,GAIAjN,KAAA4H,EAAArF,KACA,IAAA2I,EAAA,IAAAA,EAAA,UAAA+B,EAAAugD,EAAAxgD,EAAAygD,GAAA,IAAAztD,KAAA0H,IAAAmB,EAAAklD,EAAArsB,EAAA,IAAA1hC,KAAA2H,IAAAmB,EAAAilD,EAAApsB,OAzBA3hC,MAAA4H,EAAArF,KACA,IAAAvC,KAAA0H,IAAAmB,EAAA,IAAA7I,KAAA2H,IAAAmB,UA4BA+hC,IAAA,SAAAhuC,EAAA0D,EAAA2K,EAAAyxC,EAAAT,EAAA8R,GACAnxD,KAAA0D,KAAA2K,IACA,IAAAuC,GAAAvC,EAAA9H,KAAAoC,IAAAm3C,GACAjvC,EAAAxC,EAAA9H,KAAAuC,IAAAg3C,GACAh0C,EAAA9L,EAAA4Q,EACA7E,EAAArI,EAAAmN,EACAX,EAAA,EAAAihD,EACA1rB,EAAA0rB,EAAArR,EAAAT,IAAAS,CAGA,IAAAzxC,EAAA,WAAAlB,OAAA,oBAAAkB,EAGA,QAAAlL,KAAA0H,IACA1H,KAAA4H,EAAArF,KACA,IAAAoG,EAAA,IAAAC,IAKAxF,KAAAC,IAAArD,KAAA0H,IAAAiB,GAAAqkD,IAAA5pD,KAAAC,IAAArD,KAAA2H,IAAAiB,GAAAokD,KACAhtD,KAAA4H,EAAArF,KACA,IAAAoG,EAAA,IAAAC,GAKAsC,IAGAo3B,EAAA2qB,GACAjtD,KAAA4H,EAAArF,KACA,IAAA2I,EAAA,IAAAA,EAAA,QAAA6B,EAAA,IAAAlQ,EAAA4Q,EAAA,IAAAlN,EAAAmN,EACA,IAAAxC,EAAA,IAAAA,EAAA,QAAA6B,EAAA,IAAA/M,KAAA0H,IAAAiB,EAAA,IAAA3I,KAAA2H,IAAAiB,IAMA05B,EAAA,IAAAA,IAAAyqB,OACA/sD,KAAA4H,EAAArF,KACA,IAAA2I,EAAA,IAAAA,EAAA,QAAAo3B,GAAAwqB,IAAA,IAAA//C,EAAA,IAAA/M,KAAA0H,IAAA7K,EAAAqO,EAAA9H,KAAAoC,IAAA02C,GAAA,IAAAl8C,KAAA2H,IAAApH,EAAA2K,EAAA9H,KAAAuC,IAAAu2C,OAIA+R,KAAA,SAAApxD,EAAA0D,EAAA1F,EAAAC,GACAkF,KAAA4H,EAAArF,KAAA,IAAAvC,KAAAwH,IAAAxH,KAAA0H,KAAA7K,EAAA,IAAAmD,KAAAyH,IAAAzH,KAAA2H,KAAApH,EAAA,KAAA1F,EAAA,KAAAC,EAAA,KAAAD,EAAA,MAEA+uB,SAAA,WACA,MAAA5pB,MAAA4H,EAAA4S,KAAA,KAIA,IAAA0zC,IAAA,SAAArrD,GACA,GAAAhG,IAAAmD,KAAA+I,GAAAzO,KAAA,KAAAuI,GACAtC,GAAAP,KAAAgJ,GAAA1O,KAAA,KAAAuI,EACA,OAAAjE,GAAAoB,KAAAqJ,MAAAxM,EAAA0D,GAAA1D,EAAA0D,EAAAsC,IAmFAsrD,GAAA,SAAAtxD,EAAA0D,GACA,GAAAwH,MAAAlL,OAAAkL,MAAAxH,MAAA,MAAAP,KAEA,IAAA2I,GAAA3I,KAAAwH,IACAoB,EAAA5I,KAAAyH,IACAoB,EAAA7I,KAAA0H,IACAoB,EAAA9I,KAAA2H,GAKA,IAAAI,MAAAY,GACAE,GAAAF,EAAAvF,KAAAK,MAAA5G,IAAA,EACAiM,GAAAF,EAAAxF,KAAAK,MAAAlD,IAAA,MAIA,MAAAoI,EAAA9L,KAAAgM,GAAAD,EAAArI,KAAAuI,GAiCA,MAAA9I,KAhCA,IAEAgI,GACAjN,EAHAya,EAAA3M,EAAAF,EACAH,EAAAxI,KAAAyI,KAIA,QAAA1N,GAAAwF,GAAAqI,EAAAE,GAAA,MAAAjM,GAAA8L,EAAAE,GAAA,GACA,OACA,EAAAb,GAAA,GAAA1D,OAAA,GAAA0D,EAAAjN,GAAAyN,IAAAR,QACAwN,GAAA,EAAA3M,EAAAF,EAAA6M,EAAA1M,EAAAF,EAAA4M,EAAA3Y,EAAAgM,GAAAtI,EAAAuI,EACA,MAEA,QACA,EAAAd,GAAA,GAAA1D,OAAA,GAAA0D,EAAAjN,GAAAyN,IAAAR,QACAwN,GAAA,EAAA7M,EAAAE,EAAA2M,EAAA1M,EAAAF,EAAA4M,EAAA7M,EAAA9L,GAAA0D,EAAAuI,EACA,MAEA,QACA,EAAAd,GAAA,GAAA1D,OAAA,GAAA0D,EAAAjN,GAAAyN,IAAAR,QACAwN,GAAA,EAAA3M,EAAAF,EAAA6M,EAAA5M,EAAAE,EAAA0M,EAAA3Y,EAAAgM,GAAAD,EAAArI,EACA,MAEA,QACA,EAAAyH,GAAA,GAAA1D,OAAA,GAAA0D,EAAAjN,GAAAyN,IAAAR,QACAwN,GAAA,EAAA7M,EAAAE,EAAA2M,EAAA5M,EAAAE,EAAA0M,EAAA7M,EAAA9L,GAAA+L,EAAArI,GAKAP,KAAAyI,OAAAzI,KAAAyI,MAAAxN,SAAA+E,KAAAyI,MAAAD,GAUA,MAJAxI,MAAAwH,IAAAmB,EACA3I,KAAAyH,IAAAmB,EACA5I,KAAA0H,IAAAmB,EACA7I,KAAA2H,IAAAmB,EACA9I,MAGAouD,GAAA,WACA,GAAA5xD,KAIA,OAHAwD,MAAAquD,MAAA,SAAA7lD,GACA,IAAAA,EAAAvN,OAAA,EAAAuB,GAAA+F,KAAAiG,EAAAhM,YAA8CgM,IAAAxG,QAE9CxF,GAGA8xD,GAAA,SAAA1mD,GACA,MAAA0D,WAAArQ,OACA+E,KAAAqJ,OAAAzB,EAAA,OAAAA,EAAA,OAAAyB,OAAAzB,EAAA,OAAAA,EAAA,OACAG,MAAA/H,KAAAwH,KAAA5J,SAAAoC,KAAAwH,IAAAxH,KAAAyH,MAAAzH,KAAA0H,IAAA1H,KAAA2H,OAGA4mD,GAAA,SAAA/lD,EAAAG,EAAAC,EAAAC,EAAAC,GACA9I,KAAAwI,OACAxI,KAAA2I,KACA3I,KAAA4I,KACA5I,KAAA6I,KACA7I,KAAA8I,MAGA0lD,GAAA,SAAA3xD,EAAA0D,EAAA4O,GACA,GAAA3S,GAGAqM,EACAC,EACAsD,EACAC,EAKA1B,EACA5P,EAXA4N,EAAA3I,KAAAwH,IACAoB,EAAA5I,KAAAyH,IAKA6E,EAAAtM,KAAA0H,IACA6E,EAAAvM,KAAA2H,IACA8mD,KACAjmD,EAAAxI,KAAAyI,KAYA,KARAD,GAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAA/lD,EAAAG,EAAAC,EAAA0D,EAAAC,IACA,MAAA4C,IAAA/F,KAEAT,EAAA9L,EAAAsS,EAAAvG,EAAArI,EAAA4O,EACA7C,EAAAzP,EAAAsS,EAAA5C,EAAAhM,EAAA4O,EACAA,MAGAxE,EAAA8jD,EAAA5vD,OAGA,OAAA2J,EAAAmC,EAAAnC,QACAK,EAAA8B,EAAAhC,IAAA2D,IACAxD,EAAA6B,EAAA/B,IAAA2D,IACAH,EAAAzB,EAAA9B,IAAAF,IACA0D,EAAA1B,EAAA7B,IAAAF,GAGA,GAAAJ,EAAAvN,OAAA,CACA,GAAAgN,IAAAY,EAAAuD,GAAA,EACAlE,GAAAY,EAAAuD,GAAA,CAEAoiD,GAAAlsD,KACA,GAAAgsD,IAAA/lD,EAAA,GAAAP,EAAAC,EAAAkE,EAAAC,GACA,GAAAkiD,IAAA/lD,EAAA,GAAAK,EAAAX,EAAAD,EAAAoE,GACA,GAAAkiD,IAAA/lD,EAAA,GAAAP,EAAAa,EAAAsD,EAAAlE,GACA,GAAAqmD,IAAA/lD,EAAA,GAAAK,EAAAC,EAAAb,EAAAC,KAIAnN,GAAAwF,GAAA2H,IAAA,EAAArL,GAAAoL,KACA0C,EAAA8jD,IAAAxzD,OAAA,GACAwzD,IAAAxzD,OAAA,GAAAwzD,IAAAxzD,OAAA,EAAAF,GACA0zD,IAAAxzD,OAAA,EAAAF,GAAA4P,OAKA,CACA,GAAA8C,GAAA5Q,GAAAmD,KAAA+I,GAAAzO,KAAA,KAAAkO,EAAAhM,MACAkR,EAAAnN,GAAAP,KAAAgJ,GAAA1O,KAAA,KAAAkO,EAAAhM,MACAmR,EAAAF,IAAAC,GACA,IAAAC,EAAAwB,EAAA,CACA,GAAAtM,GAAAO,KAAA8C,KAAAiJ,EAAAxB,EACAhF,GAAA9L,EAAAgG,EAAA+F,EAAArI,EAAAsC,EACAyJ,EAAAzP,EAAAgG,EAAA0J,EAAAhM,EAAAsC,EACArG,EAAAgM,EAAAhM,MAKA,MAAAA,IAGAkyD,GAAA,SAAA7rD,GACA,GAAAkF,MAAAlL,GAAAmD,KAAA+I,GAAAzO,KAAA,KAAAuI,KAAAkF,MAAAxH,GAAAP,KAAAgJ,GAAA1O,KAAA,KAAAuI,IAAA,MAAA7C,KAEA,IAAAgI,GAEA2mD,EACA/rB,EACA5gC,EAKAnF,EACA0D,EACA0H,EACAC,EACAG,EACAC,EACAvN,EACAwN,EAfAC,EAAAxI,KAAAyI,MAIAE,EAAA3I,KAAAwH,IACAoB,EAAA5I,KAAAyH,IACAoB,EAAA7I,KAAA0H,IACAoB,EAAA9I,KAAA2H,GAWA,KAAAa,EAAA,MAAAxI,KAIA,IAAAwI,EAAAvN,OAAA,QAGA,IAFAoN,EAAAxL,IAAAoL,GAAAU,EAAAE,GAAA,IAAAF,EAAAV,EAAmDY,EAAAZ,GACnDK,EAAA/H,IAAA2H,GAAAU,EAAAE,GAAA,IAAAF,EAAAV,EAAoDY,EAAAZ,EACpDF,EAAAQ,QAAAzN,EAAAuN,GAAA,EAAAD,IAAA,MAAArI,KACA,KAAAwI,EAAAvN,OAAA,OACA+M,EAAAjN,EAAA,MAAAiN,EAAAjN,EAAA,MAAAiN,EAAAjN,EAAA,QAAA4zD,EAAA3mD,EAAAO,EAAAxN,GAIA,KAAAyN,EAAAhM,OAAAqG,GAAA,GAAA+/B,EAAAp6B,QAAAxG,MAAA,MAAAhC,KAIA,QAHAgC,EAAAwG,EAAAxG,aAAAwG,GAAAxG,KAGA4gC,GAAA5gC,EAAA4gC,EAAA5gC,aAAA4gC,GAAA5gC,KAAAhC,MAGAgI,GAGAhG,EAAAgG,EAAAjN,GAAAiH,QAAAgG,GAAAjN,IAGAyN,EAAAR,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAQ,KAAAR,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAQ,EAAAvN,SACA0zD,IAAApmD,GAAAC,EACAxI,KAAAyI,MAAAD,GAGAxI,OAbAA,KAAAyI,MAAAzG,EAAAhC,OAqBA4uD,GAAA,WACA,MAAA5uD,MAAAyI,OAGAomD,GAAA,WACA,GAAA9uD,GAAA,CAIA,OAHAC,MAAAquD,MAAA,SAAA7lD,GACA,IAAAA,EAAAvN,OAAA,IAAA8E,QAAgCyI,IAAAxG,QAEhCjC,GAGA+uD,GAAA,SAAAjzC,GACA,GAAAlR,GAAAs1B,EAAAt3B,EAAAC,EAAAC,EAAAC,EAAA2lD,KAAAjmD,EAAAxI,KAAAyI,KAEA,KADAD,GAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAA/lD,EAAAxI,KAAAwH,IAAAxH,KAAAyH,IAAAzH,KAAA0H,IAAA1H,KAAA2H,MACAgD,EAAA8jD,EAAA5vD,OACA,IAAAgd,EAAArT,EAAAmC,EAAAnC,KAAAG,EAAAgC,EAAAhC,GAAAC,EAAA+B,EAAA/B,GAAAC,EAAA8B,EAAA9B,GAAAC,EAAA6B,EAAA7B,KAAAN,EAAAvN,OAAA,CACA,GAAAgN,IAAAU,EAAAE,GAAA,EAAAX,GAAAU,EAAAE,GAAA,GACAm3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAh4B,EAAAC,EAAAW,EAAAC,KACAm3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAt3B,EAAAT,EAAAD,EAAAa,KACAm3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAh4B,EAAAW,EAAAC,EAAAX,KACA+3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAt3B,EAAAC,EAAAX,EAAAC,IAGA,MAAAlI,OAGA+uD,GAAA,SAAAlzC,GACA,GAAAlR,GAAA8jD,KAAAzsD,IAEA,KADAhC,KAAAyI,OAAAgmD,EAAAlsD,KAAA,GAAAgsD,IAAAvuD,KAAAyI,MAAAzI,KAAAwH,IAAAxH,KAAAyH,IAAAzH,KAAA0H,IAAA1H,KAAA2H,MACAgD,EAAA8jD,EAAA5vD,OAAA,CACA,GAAA2J,GAAAmC,EAAAnC,IACA,IAAAA,EAAAvN,OAAA,CACA,GAAAglC,GAAAt3B,EAAAgC,EAAAhC,GAAAC,EAAA+B,EAAA/B,GAAAC,EAAA8B,EAAA9B,GAAAC,EAAA6B,EAAA7B,GAAAb,GAAAU,EAAAE,GAAA,EAAAX,GAAAU,EAAAE,GAAA,GACAm3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAt3B,EAAAC,EAAAX,EAAAC,KACA+3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAh4B,EAAAW,EAAAC,EAAAX,KACA+3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAt3B,EAAAT,EAAAD,EAAAa,KACAm3B,EAAAz3B,EAAA,KAAAimD,EAAAlsD,KAAA,GAAAgsD,IAAAtuB,EAAAh4B,EAAAC,EAAAW,EAAAC,IAEA9G,EAAAO,KAAAoI,GAEA,KAAAA,EAAA3I,EAAAnD,OACAgd,EAAAlR,EAAAnC,KAAAmC,EAAAhC,GAAAgC,EAAA/B,GAAA+B,EAAA9B,GAAA8B,EAAA7B,GAEA,OAAA9I,OAOAgvD,GAAA,SAAApnD,GACA,MAAA0D,WAAArQ,QAAA+E,KAAA+I,GAAAnB,EAAA5H,WAAA+I,IAOAkmD,GAAA,SAAArnD,GACA,MAAA0D,WAAArQ,QAAA+E,KAAAgJ,GAAApB,EAAA5H,WAAAgJ,IAwBAkmD,GAAAzlD,EAAArP,UAAAuP,EAAAvP,SAEA80D,IAAAplD,KAAA,WACA,GAEAJ,GACAu2B,EAHAn2B,EAAA,GAAAH,GAAA3J,KAAA+I,GAAA/I,KAAAgJ,GAAAhJ,KAAAwH,IAAAxH,KAAAyH,IAAAzH,KAAA0H,IAAA1H,KAAA2H,KACAa,EAAAxI,KAAAyI,KAIA,KAAAD,EAAA,MAAAsB,EAEA,KAAAtB,EAAAvN,OAAA,MAAA6O,GAAArB,MAAAoB,EAAArB,GAAAsB,CAGA,KADAJ,IAAYgkB,OAAAllB,EAAAnJ,OAAAyK,EAAArB,MAAA,GAAAnE,OAAA,KACZkE,EAAAkB,EAAA7K,OACA,OAAA9D,GAAA,EAAmBA,EAAA,IAAOA,GAC1BklC,EAAAz3B,EAAAklB,OAAA3yB,MACAklC,EAAAhlC,OAAAyO,EAAAnH,MAAsCmrB,OAAAuS,EAAA5gC,OAAAmJ,EAAAnJ,OAAAtE,GAAA,GAAAuJ,OAAA,KACtCkE,EAAAnJ,OAAAtE,GAAA8O,EAAAo2B,GAKA,OAAAn2B,IAGAolD,GAAAtwD,IAAAsvD,GACAgB,GAAAjmD,SACAimD,GAAA7lD,MAAA8kD,GACAe,GAAA1yD,KAAA4xD,GACAc,GAAAxhB,OAAA4gB,GACAY,GAAAjpB,KAAAuoB,GACAU,GAAAlyD,OAAA0xD,GACAQ,GAAA5lD,YACA4lD,GAAAn2B,KAAA61B,GACAM,GAAAnvD,KAAA8uD,GACAK,GAAAb,MAAAS,GACAI,GAAAC,WAAAJ,GACAG,GAAAryD,EAAAmyD,GACAE,GAAA3uD,EAAA0uD,EAEA,IAAAG,OAAA9nD,MAEA2D,KAeAlB,GAAA3P,UAAAgR,EAAAhR,WACAwvD,YAAA7/C,EACAslD,MAAA,SAAAxzC,GACA,qBAAAA,IAAA7b,KAAAkK,MAAA,SAAAF,MACA,UAAAhK,KAAAmK,OAAA,MAAAnK,KACA,IAAAgF,GAAAoqD,GAAA90D,KAAAgR,UAAA,EAIA,OAHAtG,GAAAzC,KAAAsZ,KACA7b,KAAAsK,SAAAtK,KAAAoK,OAAA7H,KAAAyC,GACA0F,EAAA1K,MACAA,MAEA6K,MAAA,WAEA,MADA,OAAA7K,KAAAmK,QAAAU,EAAA7K,KAAA,GAAAgK,OAAA,UACAhK,MAEAsvD,MAAA,SAAAzzC,GACA,qBAAAA,IAAA7b,KAAAkK,MAAA,SAAAF,MAGA,OAFAhK,MAAAkK,MAAA,SAAAtG,EAAA2rD,GAA2C1zC,EAAA7Q,MAAA,MAAApH,GAAAmY,OAAAwzC,KAC3CpkD,EAAAnL,MACAA,MAEAwvD,SAAA,SAAA3zC,GACA,qBAAAA,IAAA7b,KAAAkK,MAAA,SAAAF,MAGA,OAFAhK,MAAAkK,MAAA2R,EACA1Q,EAAAnL,MACAA,MA4EA,IAAAyvD,IAAA,SAAA5yD,GACA,kBACA,MAAAA,KAIA2T,GAAA,MACAk/C,GAAAtsD,KAAAkoD,GACAp/C,GAAAwjD,GAAA,EACAC,GAAA,EAAAD,GA4EA7kB,GAAA,WAUA,QAAAA,KACA,GAAA+kB,GACA1kD,EACAqiB,GAAA/hB,EAAAR,MAAAhL,KAAAsL,WACAuB,GAAAnB,EAAAV,MAAAhL,KAAAsL,WACAqxC,EAAA/wC,EAAAZ,MAAAhL,KAAAsL,WAAAY,GACAgwC,EAAApwC,EAAAd,MAAAhL,KAAAsL,WAAAY,GACAo2B,EAAAl/B,KAAAC,IAAA64C,EAAAS,GACA5vC,EAAAmvC,EAAAS,CAQA,IANAnuC,MAAAohD,EAAA/nD,KAGAgF,EAAA0gB,IAAAriB,EAAA2B,IAAA0gB,IAAAriB,GAGA2B,EAAA2D,GAGA,GAAA8xB,EAAAqtB,GAAAn/C,GACAhC,EAAA0+C,OAAArgD,EAAAzJ,KAAAoC,IAAAm3C,GAAA9vC,EAAAzJ,KAAAuC,IAAAg3C,IACAnuC,EAAAq8B,IAAA,IAAAh+B,EAAA8vC,EAAAT,GAAAnvC,GACAwgB,EAAA/c,KACAhC,EAAA0+C,OAAA3/B,EAAAnqB,KAAAoC,IAAA02C,GAAA3uB,EAAAnqB,KAAAuC,IAAAu2C,IACA1tC,EAAAq8B,IAAA,IAAAtd,EAAA2uB,EAAAS,EAAA5vC,QAKA,CACA,GAWA+E,GACAC,EAZA89C,EAAAlT,EACAmT,EAAA5T,EACAgI,EAAAvH,EACAoT,EAAA7T,EACA8T,EAAA1tB,EACA2tB,EAAA3tB,EACA4tB,EAAAlkD,EAAAhB,MAAAhL,KAAAsL,WAAA,EACA6kD,EAAAD,EAAA1/C,KAAA4/C,KAAAplD,MAAAhL,KAAAsL,WAAAlI,KAAA8C,KAAAqnB,IAAA1gB,MACAC,EAAA1J,KAAAuO,IAAAvO,KAAAC,IAAAwJ,EAAA0gB,GAAA,GAAA8iC,EAAArlD,MAAAhL,KAAAsL,YACAglD,EAAAxjD,EACAyjD,EAAAzjD,CAKA,IAAAqjD,EAAA3/C,GAAA,CACA,GAAA6mC,GAAAprC,GAAAkkD,EAAA5iC,EAAAnqB,KAAAuC,IAAAuqD,IACAhvB,EAAAj1B,GAAAkkD,EAAAtjD,EAAAzJ,KAAAuC,IAAAuqD,KACAF,GAAA,EAAA3Y,GAAA7mC,IAAA6mC,GAAAtqC,EAAA,KAAAm3C,GAAA7M,EAAA0Y,GAAA1Y,IACA2Y,EAAA,EAAA9L,EAAA6L,GAAApT,EAAAT,GAAA,IACA+T,GAAA,EAAA/uB,GAAA1wB,IAAA0wB,GAAAn0B,EAAA,KAAA8iD,GAAA3uB,EAAA4uB,GAAA5uB,IACA+uB,EAAA,EAAAJ,EAAAC,GAAAnT,EAAAT,GAAA,GAGA,GAAAlvC,GAAAH,EAAAzJ,KAAAoC,IAAAqqD,GACA5iD,EAAAJ,EAAAzJ,KAAAuC,IAAAkqD,GACArjD,EAAA+gB,EAAAnqB,KAAAoC,IAAAuqD,GACAtjD,EAAA8gB,EAAAnqB,KAAAuC,IAAAoqD,EAGA,IAAAjjD,EAAA0D,GAAA,CACA,GAAAnD,GAAAR,EAAAzJ,KAAAoC,IAAAsqD,GACAxiD,EAAAT,EAAAzJ,KAAAuC,IAAAmqD,GACAviD,EAAAggB,EAAAnqB,KAAAoC,IAAA0+C,GACA12C,EAAA+f,EAAAnqB,KAAAuC,IAAAu+C,EAGA,IAAA5hB,EAAAotB,GAAA,CACA,GAAAc,GAAAR,EAAAx/C,GAAArE,GAAAa,EAAAC,EAAAM,EAAAC,EAAAH,EAAAC,EAAAd,EAAAC,IAAAD,EAAAC,GACA21B,EAAAp1B,EAAAwjD,EAAA,GACAnuB,EAAAp1B,EAAAujD,EAAA,GACA/nB,EAAAp7B,EAAAmjD,EAAA,GACA9nB,EAAAp7B,EAAAkjD,EAAA,GACAC,EAAA,EAAArtD,KAAAuC,IAAAvC,KAAAuwC,MAAAvR,EAAAqG,EAAApG,EAAAqG,IAAAtlC,KAAA8C,KAAAk8B,IAAAC,KAAAj/B,KAAA8C,KAAAuiC,IAAAC,OAAA,GACAgoB,EAAAttD,KAAA8C,KAAAsqD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAF,GAAAltD,KAAAuO,IAAA7E,GAAAygB,EAAAmjC,IAAAD,EAAA,IACAF,EAAAntD,KAAAuO,IAAA7E,GAAAD,EAAA6jD,IAAAD,EAAA,KAKAR,EAAAz/C,GAGA+/C,EAAA//C,IACAsB,EAAAlF,GAAAW,EAAAC,EAAAR,EAAAC,EAAAJ,EAAA0jD,EAAAxjD,GACAgF,EAAAnF,GAAAS,EAAAC,EAAAd,EAAAC,EAAAI,EAAA0jD,EAAAxjD,GAEAyB,EAAA0+C,OAAAp7C,EAAAzD,GAAAyD,EAAA9E,IAAA8E,EAAAxD,GAAAwD,EAAA7E,KAGAsjD,EAAAzjD,EAAA0B,EAAAq8B,IAAA/4B,EAAAzD,GAAAyD,EAAAxD,GAAAiiD,EAAAntD,KAAA4S,MAAAlE,EAAA7E,IAAA6E,EAAA9E,KAAA5J,KAAA4S,MAAAjE,EAAA9E,IAAA8E,EAAA/E,MAAAD,IAIAyB,EAAAq8B,IAAA/4B,EAAAzD,GAAAyD,EAAAxD,GAAAiiD,EAAAntD,KAAA4S,MAAAlE,EAAA7E,IAAA6E,EAAA9E,KAAA5J,KAAA4S,MAAAlE,EAAAxE,IAAAwE,EAAAzE,MAAAN,GACAyB,EAAAq8B,IAAA,IAAAh+B,EAAAzJ,KAAA4S,MAAAlE,EAAAxD,GAAAwD,EAAAxE,IAAAwE,EAAAzD,GAAAyD,EAAAzE,KAAAjK,KAAA4S,MAAAjE,EAAAzD,GAAAyD,EAAAzE,IAAAyE,EAAA1D,GAAA0D,EAAA1E,MAAAN,GACAyB,EAAAq8B,IAAA94B,EAAA1D,GAAA0D,EAAAzD,GAAAiiD,EAAAntD,KAAA4S,MAAAjE,EAAAzE,IAAAyE,EAAA1E,KAAAjK,KAAA4S,MAAAjE,EAAA9E,IAAA8E,EAAA/E,MAAAD,MAKAyB,EAAA0+C,OAAAlgD,EAAAC,GAAAuB,EAAAq8B,IAAA,IAAAh+B,EAAAgjD,EAAAC,GAAA/iD,IArBAyB,EAAA0+C,OAAAlgD,EAAAC,GAyBAsgB,EAAA/c,IAAAw/C,EAAAx/C,GAGA8/C,EAAA9/C,IACAsB,EAAAlF,GAAAJ,EAAAC,EAAAY,EAAAC,EAAAigB,GAAA+iC,EAAAvjD,GACAgF,EAAAnF,GAAAI,EAAAC,EAAAM,EAAAC,EAAA+f,GAAA+iC,EAAAvjD,GAEAyB,EAAA4+C,OAAAt7C,EAAAzD,GAAAyD,EAAA9E,IAAA8E,EAAAxD,GAAAwD,EAAA7E,KAGAqjD,EAAAxjD,EAAA0B,EAAAq8B,IAAA/4B,EAAAzD,GAAAyD,EAAAxD,GAAAgiD,EAAAltD,KAAA4S,MAAAlE,EAAA7E,IAAA6E,EAAA9E,KAAA5J,KAAA4S,MAAAjE,EAAA9E,IAAA8E,EAAA/E,MAAAD,IAIAyB,EAAAq8B,IAAA/4B,EAAAzD,GAAAyD,EAAAxD,GAAAgiD,EAAAltD,KAAA4S,MAAAlE,EAAA7E,IAAA6E,EAAA9E,KAAA5J,KAAA4S,MAAAlE,EAAAxE,IAAAwE,EAAAzE,MAAAN,GACAyB,EAAAq8B,IAAA,IAAAtd,EAAAnqB,KAAA4S,MAAAlE,EAAAxD,GAAAwD,EAAAxE,IAAAwE,EAAAzD,GAAAyD,EAAAzE,KAAAjK,KAAA4S,MAAAjE,EAAAzD,GAAAyD,EAAAzE,IAAAyE,EAAA1D,GAAA0D,EAAA1E,KAAAN,GACAyB,EAAAq8B,IAAA94B,EAAA1D,GAAA0D,EAAAzD,GAAAgiD,EAAAltD,KAAA4S,MAAAjE,EAAAzE,IAAAyE,EAAA1E,KAAAjK,KAAA4S,MAAAjE,EAAA9E,IAAA8E,EAAA/E,MAAAD,KAKAyB,EAAAq8B,IAAA,IAAAtd,EAAAwiC,EAAA7L,EAAAn3C,GArBAyB,EAAA4+C,OAAA5gD,EAAAC,OA1FA+B,GAAA0+C,OAAA,IAoHA,IAFA1+C,EAAA2+C,YAEAyC,EAAA,MAAAphD,GAAA,KAAAohD,EAAA,SA7IA,GAAApkD,GAAAD,EACAG,EAAAD,EACA4kD,EAAAZ,GAAA,GACAW,EAAA,KACAxkD,EAAAD,EACAG,EAAAD,EACAG,EAAAD,GACAyC,EAAA,IA+KA,OAtCAq8B,GAAAqhB,SAAA,WACA,GAAAhhD,KAAAM,EAAAR,MAAAhL,KAAAsL,aAAAI,EAAAV,MAAAhL,KAAAsL,YAAA,EACA1J,IAAAgK,EAAAZ,MAAAhL,KAAAsL,aAAAQ,EAAAd,MAAAhL,KAAAsL,YAAA,EAAAokD,GAAA,CACA,QAAAtsD,KAAAoC,IAAA5D,GAAAsJ,EAAA9H,KAAAuC,IAAA/D,GAAAsJ,IAGA2/B,EAAAr/B,YAAA,SAAA5D,GACA,MAAA0D,WAAArQ,QAAAuQ,EAAA,kBAAA5D,KAAA6nD,IAAA7nD,GAAAijC,GAAAr/B,GAGAq/B,EAAAn/B,YAAA,SAAA9D,GACA,MAAA0D,WAAArQ,QAAAyQ,EAAA,kBAAA9D,KAAA6nD,IAAA7nD,GAAAijC,GAAAn/B,GAGAm/B,EAAAwlB,aAAA,SAAAzoD,GACA,MAAA0D,WAAArQ,QAAAo1D,EAAA,kBAAAzoD,KAAA6nD,IAAA7nD,GAAAijC,GAAAwlB,GAGAxlB,EAAAulB,UAAA,SAAAxoD,GACA,MAAA0D,WAAArQ,QAAAm1D,EAAA,MAAAxoD,EAAA,uBAAAA,KAAA6nD,IAAA7nD,GAAAijC,GAAAulB,GAGAvlB,EAAAj/B,WAAA,SAAAhE,GACA,MAAA0D,WAAArQ,QAAA2Q,EAAA,kBAAAhE,KAAA6nD,IAAA7nD,GAAAijC,GAAAj/B,GAGAi/B,EAAA/+B,SAAA,SAAAlE,GACA,MAAA0D,WAAArQ,QAAA6Q,EAAA,kBAAAlE,KAAA6nD,IAAA7nD,GAAAijC,GAAA/+B,GAGA++B,EAAA7+B,SAAA,SAAApE,GACA,MAAA0D,WAAArQ,QAAA+Q,EAAA,kBAAApE,KAAA6nD,IAAA7nD,GAAAijC,GAAA7+B,GAGA6+B,EAAAr8B,QAAA,SAAA5G,GACA,MAAA0D,WAAArQ,QAAAuT,EAAA,MAAA5G,EAAA,KAAAA,EAAAijC,GAAAr8B,GAGAq8B,EAOAt8B,IAAAnU,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAA8wD,OAAA,GAEAnc,QAAA,YACA30C,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,GAAAP,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,EAAsE,MACpG,QAAAP,KAAA8wD,OAAA,CACA,SAAA9wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,KAKA,IAAAwwD,IAAA,SAAAviD,GACA,UAAAD,IAAAC,IAWAiwB,GAAA,WAQA,QAAAA,GAAAjiC,GACA,GAAAzB,GAEA8H,EAEA+sD,EAHAnrD,EAAAjI,EAAAvB,OAEA+1D,GAAA,CAKA,KAFA,MAAAxiD,IAAAuf,EAAAnf,EAAAghD,EAAA/nD,MAEA9M,EAAA,EAAeA,GAAA0J,IAAQ1J,IACvBA,EAAA0J,GAAAwsD,EAAApuD,EAAArG,EAAAzB,KAAAyB,MAAAw0D,KACAA,MAAAjjC,EAAA2mB,YACA3mB,EAAA4mB,WAEAqc,GAAAjjC,EAAA3e,OAAA8hD,EAAAruD,EAAA9H,EAAAyB,IAAA20D,EAAAtuD,EAAA9H,EAAAyB,GAGA,IAAAozD,EAAA,MAAA7hC,GAAA,KAAA6hC,EAAA,SAxBA,GAAAsB,GAAAr0D,GACAs0D,EAAA5wD,GACA0wD,EAAAxB,IAAA,GACAjhD,EAAA,KACAI,EAAAmiD,GACAhjC,EAAA,IA0CA,OApBA0Q,GAAA5hC,EAAA,SAAA+K,GACA,MAAA0D,WAAArQ,QAAAi2D,EAAA,kBAAAtpD,KAAA6nD,IAAA7nD,GAAA62B,GAAAyyB,GAGAzyB,EAAAl+B,EAAA,SAAAqH,GACA,MAAA0D,WAAArQ,QAAAk2D,EAAA,kBAAAvpD,KAAA6nD,IAAA7nD,GAAA62B,GAAA0yB,GAGA1yB,EAAAwyB,QAAA,SAAArpD,GACA,MAAA0D,WAAArQ,QAAAg2D,EAAA,kBAAArpD,KAAA6nD,KAAA7nD,GAAA62B,GAAAwyB,GAGAxyB,EAAA7vB,MAAA,SAAAhH,GACA,MAAA0D,WAAArQ,QAAA2T,EAAAhH,EAAA,MAAA4G,IAAAuf,EAAAnf,EAAAJ,IAAAiwB,GAAA7vB,GAGA6vB,EAAAjwB,QAAA,SAAA5G,GACA,MAAA0D,WAAArQ,QAAA,MAAA2M,EAAA4G,EAAAuf,EAAA,KAAAA,EAAAnf,EAAAJ,EAAA5G,GAAA62B,GAAAjwB,GAGAiwB,GAGA2yB,GAAA,WAUA,QAAAnF,GAAAzvD,GACA,GAAAzB,GACAwN,EACAkO,EAEA5T,EAEA+sD,EAHAnrD,EAAAjI,EAAAvB,OAEA+1D,GAAA,EAEAK,EAAA,GAAA/sD,OAAAG,GACA6sD,EAAA,GAAAhtD,OAAAG,EAIA,KAFA,MAAA+J,IAAAuf,EAAAnf,EAAAghD,EAAA/nD,MAEA9M,EAAA,EAAeA,GAAA0J,IAAQ1J,EAAA,CACvB,KAAAA,EAAA0J,GAAAwsD,EAAApuD,EAAArG,EAAAzB,KAAAyB,MAAAw0D,EACA,GAAAA,KACAzoD,EAAAxN,EACAgzB,EAAA4iC,YACA5iC,EAAA2mB,gBACS,CAGT,IAFA3mB,EAAA4mB,UACA5mB,EAAA2mB,YACAj+B,EAAA1b,EAAA,EAAyB0b,GAAAlO,IAAQkO,EACjCsX,EAAA3e,MAAAiiD,EAAA56C,GAAA66C,EAAA76C,GAEAsX,GAAA4mB,UACA5mB,EAAA8iC,UAGAG,IACAK,EAAAt2D,IAAA4N,EAAA9F,EAAA9H,EAAAyB,GAAA80D,EAAAv2D,IAAA6N,EAAA/F,EAAA9H,EAAAyB,GACAuxB,EAAA3e,MAAAvG,KAAAhG,EAAA9H,EAAAyB,GAAA60D,EAAAt2D,GAAA+N,KAAAjG,EAAA9H,EAAAyB,GAAA80D,EAAAv2D,KAIA,GAAA60D,EAAA,MAAA7hC,GAAA,KAAA6hC,EAAA,SAGA,QAAA2B,KACA,MAAA9yB,MAAAwyB,WAAAriD,SAAAJ,WAhDA,GAAA7F,GAAA9L,GACAgM,EAAA,KACAD,EAAA6mD,GAAA,GACA3mD,EAAAvI,GACA0wD,EAAAxB,IAAA,GACAjhD,EAAA,KACAI,EAAAmiD,GACAhjC,EAAA,IA6FA,OAjDAk+B,GAAApvD,EAAA,SAAA+K,GACA,MAAA0D,WAAArQ,QAAA0N,EAAA,kBAAAf,KAAA6nD,IAAA7nD,GAAAiB,EAAA,KAAAojD,GAAAtjD,GAGAsjD,EAAAtjD,GAAA,SAAAf,GACA,MAAA0D,WAAArQ,QAAA0N,EAAA,kBAAAf,KAAA6nD,IAAA7nD,GAAAqkD,GAAAtjD,GAGAsjD,EAAApjD,GAAA,SAAAjB,GACA,MAAA0D,WAAArQ,QAAA4N,EAAA,MAAAjB,EAAA,uBAAAA,KAAA6nD,IAAA7nD,GAAAqkD,GAAApjD,GAGAojD,EAAA1rD,EAAA,SAAAqH,GACA,MAAA0D,WAAArQ,QAAA2N,EAAA,kBAAAhB,KAAA6nD,IAAA7nD,GAAAkB,EAAA,KAAAmjD,GAAArjD,GAGAqjD,EAAArjD,GAAA,SAAAhB,GACA,MAAA0D,WAAArQ,QAAA2N,EAAA,kBAAAhB,KAAA6nD,IAAA7nD,GAAAqkD,GAAArjD,GAGAqjD,EAAAnjD,GAAA,SAAAlB,GACA,MAAA0D,WAAArQ,QAAA6N,EAAA,MAAAlB,EAAA,uBAAAA,KAAA6nD,IAAA7nD,GAAAqkD,GAAAnjD,GAGAmjD,EAAAuF,OACAvF,EAAAwF,OAAA,WACA,MAAAF,KAAA10D,EAAA8L,GAAApI,EAAAqI,IAGAqjD,EAAAyF,OAAA,WACA,MAAAH,KAAA10D,EAAA8L,GAAApI,EAAAuI,IAGAmjD,EAAA0F,OAAA,WACA,MAAAJ,KAAA10D,EAAAgM,GAAAtI,EAAAqI,IAGAqjD,EAAAgF,QAAA,SAAArpD,GACA,MAAA0D,WAAArQ,QAAAg2D,EAAA,kBAAArpD,KAAA6nD,KAAA7nD,GAAAqkD,GAAAgF,GAGAhF,EAAAr9C,MAAA,SAAAhH,GACA,MAAA0D,WAAArQ,QAAA2T,EAAAhH,EAAA,MAAA4G,IAAAuf,EAAAnf,EAAAJ,IAAAy9C,GAAAr9C,GAGAq9C,EAAAz9C,QAAA,SAAA5G,GACA,MAAA0D,WAAArQ,QAAA,MAAA2M,EAAA4G,EAAAuf,EAAA,KAAAA,EAAAnf,EAAAJ,EAAA5G,GAAAqkD,GAAAz9C,GAGAy9C,GAGA2F,GAAA,SAAAhwD,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAgI,KAGAioD,GAAA,SAAAhvD,GACA,MAAAA,IAGAivD,GAAA,WAQA,QAAAA,GAAAt1D,GACA,GAAAzB,GAEAwN,EACAkO,EAMAylC,EAGAppC,EAXArO,EAAAjI,EAAAvB,OAGAuuD,EAAA,EACAjsD,EAAA,GAAA+G,OAAAG,GACAstD,EAAA,GAAAztD,OAAAG,GACAk4C,GAAA/wC,EAAAZ,MAAAhL,KAAAsL,WACAg3B,EAAAl/B,KAAAuO,IAAAg+C,GAAAvsD,KAAAE,KAAAqsD,GAAA7jD,EAAAd,MAAAhL,KAAAsL,WAAAqxC,IAEAjuC,EAAAtL,KAAAuO,IAAAvO,KAAAC,IAAAi/B,GAAA79B,EAAAuH,EAAAhB,MAAAhL,KAAAsL,YACA0mD,EAAAtjD,GAAA4zB,EAAA,OAGA,KAAAvnC,EAAA,EAAeA,EAAA0J,IAAO1J,GACtB+X,EAAAi/C,EAAAx0D,EAAAxC,OAAAyC,EAAAhB,EAAAzB,KAAAyB,IAAA,IACAgtD,GAAA12C,EASA,KAJA,MAAAs3C,EAAA7sD,EAAAsyB,KAAA,SAAA90B,EAAAwN,GAAuD,MAAA6hD,GAAA2H,EAAAh3D,GAAAg3D,EAAAxpD,MACvD,MAAAsnB,GAAAtyB,EAAAsyB,KAAA,SAAA90B,EAAAwN,GAAsD,MAAAsnB,GAAArzB,EAAAzB,GAAAyB,EAAA+L,MAGtDxN,EAAA,EAAA0b,EAAA+yC,GAAAlnB,EAAA79B,EAAAutD,GAAAxI,EAAA,EAAkDzuD,EAAA0J,IAAO1J,EAAA4hD,EAAAT,EACzD3zC,EAAAhL,EAAAxC,GAAA+X,EAAAi/C,EAAAxpD,GAAA2zC,EAAAS,GAAA7pC,EAAA,EAAAA,EAAA2D,EAAA,GAAAu7C,EAAAD,EAAAxpD,IACA/L,OAAA+L,GACAhL,MAAAxC,EACAyC,MAAAsV,EACAlH,WAAA+wC,EACA7wC,SAAAowC,EACAlwC,SAAA0C,EAIA,OAAAqjD,GA5CA,GAAAv0D,GAAAq0D,GACAzH,EAAAwH,GACA/hC,EAAA,KACAjkB,EAAA6jD,GAAA,GACA3jD,EAAA2jD,GAAAE,IACA3jD,EAAAyjD,GAAA,EAkEA,OAxBAqC,GAAAt0D,MAAA,SAAAoK,GACA,MAAA0D,WAAArQ,QAAAuC,EAAA,kBAAAoK,KAAA6nD,IAAA7nD,GAAAkqD,GAAAt0D,GAGAs0D,EAAA1H,WAAA,SAAAxiD,GACA,MAAA0D,WAAArQ,QAAAmvD,EAAAxiD,EAAAioB,EAAA,KAAAiiC,GAAA1H,GAGA0H,EAAAjiC,KAAA,SAAAjoB,GACA,MAAA0D,WAAArQ,QAAA40B,EAAAjoB,EAAAwiD,EAAA,KAAA0H,GAAAjiC,GAGAiiC,EAAAlmD,WAAA,SAAAhE,GACA,MAAA0D,WAAArQ,QAAA2Q,EAAA,kBAAAhE,KAAA6nD,IAAA7nD,GAAAkqD,GAAAlmD,GAGAkmD,EAAAhmD,SAAA,SAAAlE,GACA,MAAA0D,WAAArQ,QAAA6Q,EAAA,kBAAAlE,KAAA6nD,IAAA7nD,GAAAkqD,GAAAhmD,GAGAgmD,EAAA9lD,SAAA,SAAApE,GACA,MAAA0D,WAAArQ,QAAA+Q,EAAA,kBAAApE,KAAA6nD,IAAA7nD,GAAAkqD,GAAA9lD,GAGA8lD,GAGAG,GAAAnjD,GAAAiiD,GAMApiD,IAAAvU,WACAu2D,UAAA,WACA3wD,KAAA6O,OAAA8hD,aAEAE,QAAA,WACA7wD,KAAA6O,OAAAgiD,WAEAnc,UAAA,WACA10C,KAAA6O,OAAA6lC,aAEAC,QAAA,WACA30C,KAAA6O,OAAA8lC,WAEAvlC,MAAA,SAAAxN,EAAAsJ,GACAlL,KAAA6O,OAAAO,MAAAlE,EAAA9H,KAAAuC,IAAA/D,GAAAsJ,GAAA9H,KAAAoC,IAAA5D,KA4BA,IAAAswD,IAAA,WACA,MAAAljD,IAAAyvB,KAAA7vB,MAAAqjD,MAGAE,GAAA,WACA,GAAAvwD,GAAAwvD,KAAAxiD,MAAAqjD,IACAnnD,EAAAlJ,EAAAgN,MACAjG,EAAA/G,EAAA4vD,OACA3oD,EAAAjH,EAAA+vD,OACA/oD,EAAAhH,EAAA6vD,OACA3oD,EAAAlH,EAAA8vD,MAiBA,OAfA9vD,GAAAsN,MAAAtN,EAAA/E,QAAA+E,GAAA/E,EACA+E,EAAAgK,WAAAhK,EAAA+G,SAAA/G,GAAA+G,GACA/G,EAAAkK,SAAAlK,EAAAiH,SAAAjH,GAAAiH,GACAjH,EAAAuN,OAAAvN,EAAArB,QAAAqB,GAAArB,EACAqB,EAAA4J,YAAA5J,EAAAgH,SAAAhH,GAAAgH,GACAhH,EAAA8J,YAAA9J,EAAAkH,SAAAlH,GAAAkH,GACAlH,EAAAwwD,eAAA,WAAiC,MAAApjD,IAAArG,YAA2B/G,GAAA4vD,OAC5D5vD,EAAAywD,aAAA,WAA+B,MAAArjD,IAAAnG,YAA2BjH,GAAA+vD,OAC1D/vD,EAAA0wD,gBAAA,WAAkC,MAAAtjD,IAAApG,YAA2BhH,GAAA6vD,OAC7D7vD,EAAA2wD,gBAAA,WAAkC,MAAAvjD,IAAAlG,YAA2BlH,GAAA8vD,OAE7D9vD,EAAAgN,MAAA,SAAAhH,GACA,MAAA0D,WAAArQ,OAAA6P,EAAAgE,GAAAlH,IAAAkD,IAAA+D,QAGAjN,GAGAo/B,IACAvjC,KAAA,SAAA+Q,EAAAzO,GACA,GAAAmL,GAAA9H,KAAA8C,KAAAnG,EAAA2vD,GACAlhD,GAAA0+C,OAAAhiD,EAAA,GACAsD,EAAAq8B,IAAA,IAAA3/B,EAAA,EAAAykD,MAIA6C,IACA/0D,KAAA,SAAA+Q,EAAAzO,GACA,GAAAmL,GAAA9H,KAAA8C,KAAAnG,EAAA,IACAyO,GAAA0+C,QAAA,EAAAhiD,MACAsD,EAAA4+C,QAAAliD,MACAsD,EAAA4+C,QAAAliD,GAAA,EAAAA,GACAsD,EAAA4+C,OAAAliD,GAAA,EAAAA,GACAsD,EAAA4+C,OAAAliD,MACAsD,EAAA4+C,OAAA,EAAAliD,MACAsD,EAAA4+C,OAAA,EAAAliD,KACAsD,EAAA4+C,OAAAliD,KACAsD,EAAA4+C,OAAAliD,EAAA,EAAAA,GACAsD,EAAA4+C,QAAAliD,EAAA,EAAAA,GACAsD,EAAA4+C,QAAAliD,KACAsD,EAAA4+C,QAAA,EAAAliD,KACAsD,EAAA2+C,cAIAsF,GAAArvD,KAAA8C,KAAA,KACAwsD,GAAA,EAAAD,GAEAE,IACAl1D,KAAA,SAAA+Q,EAAAzO,GACA,GAAAQ,GAAA6C,KAAA8C,KAAAnG,EAAA2yD,IACA71D,EAAA0D,EAAAkyD,EACAjkD,GAAA0+C,OAAA,GAAA3sD,GACAiO,EAAA4+C,OAAAvwD,EAAA,GACA2R,EAAA4+C,OAAA,EAAA7sD,GACAiO,EAAA4+C,QAAAvwD,EAAA,GACA2R,EAAA2+C,cAIAyF,GAAA,kBACAC,GAAAzvD,KAAAuC,IAAA+pD,GAAA,IAAAtsD,KAAAuC,IAAA,EAAA+pD,GAAA,IACAoD,GAAA1vD,KAAAuC,IAAAgqD,GAAA,IAAAkD,GACAE,IAAA3vD,KAAAoC,IAAAmqD,GAAA,IAAAkD,GAEAG,IACAv1D,KAAA,SAAA+Q,EAAAzO,GACA,GAAAmL,GAAA9H,KAAA8C,KAAAnG,EAAA6yD,IACA/1D,EAAAi2D,GAAA5nD,EACA3K,EAAAwyD,GAAA7nD,CACAsD,GAAA0+C,OAAA,GAAAhiD,GACAsD,EAAA4+C,OAAAvwD,EAAA0D,EACA,QAAAxF,GAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,GAAA6G,GAAA+tD,GAAA50D,EAAA,EACA+P,EAAA1H,KAAAoC,IAAA5D,GACAmR,EAAA3P,KAAAuC,IAAA/D,EACA4M,GAAA4+C,OAAAr6C,EAAA7H,GAAAJ,EAAAI,GACAsD,EAAA4+C,OAAAtiD,EAAAjO,EAAAkW,EAAAxS,EAAAwS,EAAAlW,EAAAiO,EAAAvK,GAEAiO,EAAA2+C,cAIA8F,IACAx1D,KAAA,SAAA+Q,EAAAzO,GACA,GAAAlF,GAAAuI,KAAA8C,KAAAnG,GACAlD,GAAAhC,EAAA,CACA2T,GAAAy/C,KAAApxD,IAAAhC,OAIAq4D,GAAA9vD,KAAA8C,KAAA,GAEAitD,IACA11D,KAAA,SAAA+Q,EAAAzO,GACA,GAAAQ,IAAA6C,KAAA8C,KAAAnG,GAAA,EAAAmzD,IACA1kD,GAAA0+C,OAAA,IAAA3sD,GACAiO,EAAA4+C,QAAA8F,GAAA3yD,MACAiO,EAAA4+C,OAAA8F,GAAA3yD,MACAiO,EAAA2+C,cAIAriD,IAAA,GACAiI,GAAA3P,KAAA8C,KAAA,KACAuQ,GAAA,EAAArT,KAAA8C,KAAA,IACAtE,GAAA,GAAA6U,GAAA,KAEA28C,IACA31D,KAAA,SAAA+Q,EAAAzO,GACA,GAAAmL,GAAA9H,KAAA8C,KAAAnG,EAAA6B,IACA+G,EAAAuC,EAAA,EACAtC,EAAAsC,EAAAuL,GACA5N,EAAAF,EACAG,EAAAoC,EAAAuL,GAAAvL,EACAkB,GAAAvD,EACAwD,EAAAvD,CACA0F,GAAA0+C,OAAAvkD,EAAAC,GACA4F,EAAA4+C,OAAAvkD,EAAAC,GACA0F,EAAA4+C,OAAAhhD,EAAAC,GACAmC,EAAA4+C,OAAAtiD,GAAAnC,EAAAoK,GAAAnK,EAAAmK,GAAApK,EAAAmC,GAAAlC,GACA4F,EAAA4+C,OAAAtiD,GAAAjC,EAAAkK,GAAAjK,EAAAiK,GAAAlK,EAAAiC,GAAAhC,GACA0F,EAAA4+C,OAAAtiD,GAAAsB,EAAA2G,GAAA1G,EAAA0G,GAAA3G,EAAAtB,GAAAuB,GACAmC,EAAA4+C,OAAAtiD,GAAAnC,EAAAoK,GAAAnK,EAAAkC,GAAAlC,EAAAmK,GAAApK,GACA6F,EAAA4+C,OAAAtiD,GAAAjC,EAAAkK,GAAAjK,EAAAgC,GAAAhC,EAAAiK,GAAAlK,GACA2F,EAAA4+C,OAAAtiD,GAAAsB,EAAA2G,GAAA1G,EAAAvB,GAAAuB,EAAA0G,GAAA3G,GACAoC,EAAA2+C,cAIAkG,IACAryB,GACAwxB,GACAG,GACAM,GACAD,GACAG,GACAC,IAGA/xC,GAAA,WAKA,QAAAA,KACA,GAAAuuC,EAGA,IAFAphD,MAAAohD,EAAA/nD,KACA8T,EAAA3Q,MAAAhL,KAAAsL,WAAA7N,KAAA+Q,GAAAzO,EAAAiL,MAAAhL,KAAAsL,YACAskD,EAAA,MAAAphD,GAAA,KAAAohD,EAAA,SARA,GAAAj0C,GAAA8zC,GAAAzuB,IACAjhC,EAAA0vD,GAAA,IACAjhD,EAAA,IAqBA,OAZA6S,GAAA1F,KAAA,SAAA/T,GACA,MAAA0D,WAAArQ,QAAA0gB,EAAA,kBAAA/T,KAAA6nD,GAAA7nD,GAAAyZ,GAAA1F,GAGA0F,EAAAthB,KAAA,SAAA6H,GACA,MAAA0D,WAAArQ,QAAA8E,EAAA,kBAAA6H,KAAA6nD,IAAA7nD,GAAAyZ,GAAAthB,GAGAshB,EAAA7S,QAAA,SAAA5G,GACA,MAAA0D,WAAArQ,QAAAuT,EAAA,MAAA5G,EAAA,KAAAA,EAAAyZ,GAAA7S,GAGA6S,GAGAiyC,GAAA,YAiBA/jD,IAAAnV,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IACA1H,KAAAyH,IAAAzH,KAAA2H,IAAAiC,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,OAAA30C,KAAA8wD,QACA,OAAA1hD,GAAApP,UAAA0H,IAAA1H,KAAA2H,IACA,QAAA3H,KAAAyO,SAAA2+C,OAAAptD,KAAA0H,IAAA1H,KAAA2H,MAEA3H,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,GAAAP,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,EAAsE,MACpG,QAAAP,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAAyO,SAAA2+C,QAAA,EAAAptD,KAAAwH,IAAAxH,KAAA0H,KAAA,KAAA1H,KAAAyH,IAAAzH,KAAA2H,KAAA,EAC9B,SAAAyH,GAAApP,KAAAnD,EAAA0D,GAEAP,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA7K,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAApH,GAIA,IAAAgzD,IAAA,SAAA/kD,GACA,UAAAe,IAAAf,GAOAgB,IAAApV,WACAu2D,UAAA2C,GACAzC,QAAAyC,GACA5e,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAwzD,IAAAxzD,KAAAyzD,IACAzzD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAA0zD,IAAA1zD,KAAA2zD,IAAA/pD,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,OAAA30C,KAAA8wD,QACA,OACA9wD,KAAAyO,SAAAy+C,OAAAltD,KAAAgQ,IAAAhQ,KAAAiQ,KACAjQ,KAAAyO,SAAA0+C,WACA,MAEA,QACAntD,KAAAyO,SAAAy+C,QAAAltD,KAAAgQ,IAAA,EAAAhQ,KAAAwzD,KAAA,GAAAxzD,KAAAiQ,IAAA,EAAAjQ,KAAA0zD,KAAA,GACA1zD,KAAAyO,SAAA2+C,QAAAptD,KAAAwzD,IAAA,EAAAxzD,KAAAgQ,KAAA,GAAAhQ,KAAA0zD,IAAA,EAAA1zD,KAAAiQ,KAAA,GACAjQ,KAAAyO,SAAA0+C,WACA,MAEA,QACAntD,KAAAoP,MAAApP,KAAAgQ,IAAAhQ,KAAAiQ,KACAjQ,KAAAoP,MAAApP,KAAAwzD,IAAAxzD,KAAA0zD,KACA1zD,KAAAoP,MAAApP,KAAAyzD,IAAAzzD,KAAA2zD,OAKAvkD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAAgQ,IAAAnT,EAAAmD,KAAAiQ,IAAA1P,CAA4B,MAC1D,QAAAP,KAAA8wD,OAAA,EAA8B9wD,KAAAwzD,IAAA32D,EAAAmD,KAAA0zD,IAAAnzD,CAA4B,MAC1D,QAAAP,KAAA8wD,OAAA,EAA8B9wD,KAAAyzD,IAAA52D,EAAAmD,KAAA2zD,IAAApzD,EAA4BP,KAAAyO,SAAAy+C,QAAAltD,KAAAwH,IAAA,EAAAxH,KAAA0H,IAAA7K,GAAA,GAAAmD,KAAAyH,IAAA,EAAAzH,KAAA2H,IAAApH,GAAA,EAA4F,MACtJ,SAAA6O,GAAApP,KAAAnD,EAAA0D,GAEAP,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA7K,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAApH,GAIA,IAAAqzD,IAAA,SAAAplD,GACA,UAAAgB,IAAAhB,GAOAiB,IAAArV,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IACA1H,KAAAyH,IAAAzH,KAAA2H,IAAAiC,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,YACA30C,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,CAA8B,IAAAnoD,IAAA3I,KAAAwH,IAAA,EAAAxH,KAAA0H,IAAA7K,GAAA,EAAA+L,GAAA5I,KAAAyH,IAAA,EAAAzH,KAAA2H,IAAApH,GAAA,CAAoFP,MAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAzkD,EAAAC,GAAA5I,KAAAyO,SAAAy+C,OAAAvkD,EAAAC,EAA0E,MAC5L,QAAA5I,KAAA8wD,OAAA,CACA,SAAA1hD,GAAApP,KAAAnD,EAAA0D,GAEAP,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA7K,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAApH,GAIA,IAAAszD,IAAA,SAAArlD,GACA,UAAAiB,IAAAjB,GAQAkB,IAAAtV,WACAs6C,UAAA,WACA10C,KAAA+I,MACA/I,KAAAgJ,MACAhJ,KAAA4P,OAAA8kC,aAEAC,QAAA,WACA,GAAA93C,GAAAmD,KAAA+I,GACAxI,EAAAP,KAAAgJ,GACAT,EAAA1L,EAAA5B,OAAA,CAEA,IAAAsN,EAAA,EAQA,IAPA,GAKAvD,GALA2D,EAAA9L,EAAA,GACA+L,EAAArI,EAAA,GACAkN,EAAA5Q,EAAA0L,GAAAI,EACA+E,EAAAnN,EAAAgI,GAAAK,EACA7N,GAAA,IAGAA,GAAAwN,GACAvD,EAAAjK,EAAAwN,EACAvI,KAAA4P,OAAAR,MACApP,KAAA6P,MAAAhT,EAAA9B,IAAA,EAAAiF,KAAA6P,QAAAlH,EAAA3D,EAAAyI,GACAzN,KAAA6P,MAAAtP,EAAAxF,IAAA,EAAAiF,KAAA6P,QAAAjH,EAAA5D,EAAA0I,GAKA1N,MAAA+I,GAAA/I,KAAAgJ,GAAA,KACAhJ,KAAA4P,OAAA+kC,WAEAvlC,MAAA,SAAAvS,EAAA0D,GACAP,KAAA+I,GAAAxG,MAAA1F,GACAmD,KAAAgJ,GAAAzG,MAAAhC,IAIA,IAAAuzD,IAAA,QAAA3I,GAAAx7C,GAEA,QAAAmkD,GAAAtlD,GACA,WAAAmB,EAAA,GAAAJ,IAAAf,GAAA,GAAAkB,IAAAlB,EAAAmB,GAOA,MAJAmkD,GAAAnkD,KAAA,SAAAA,GACA,MAAAw7C,IAAAx7C,IAGAmkD,GACC,IAkBD5jD,IAAA9V,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAAgQ,IACAhQ,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAAiQ,IAAArG,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,OAAA30C,KAAA8wD,QACA,OAAA9wD,KAAAyO,SAAA2+C,OAAAptD,KAAAgQ,IAAAhQ,KAAAiQ,IAAuD,MACvD,QAAAH,GAAA9P,UAAA0H,IAAA1H,KAAA2H,MAEA3H,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,GAAAP,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,EAAsE,MACpG,QAAAP,KAAA8wD,OAAA,EAA8B9wD,KAAA0H,IAAA7K,EAAAmD,KAAA2H,IAAApH,CAA4B,MAC1D,QAAAP,KAAA8wD,OAAA,CACA,SAAAhhD,GAAA9P,KAAAnD,EAAA0D,GAEAP,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAgQ,IAAAnT,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAAiQ,IAAA1P,GAIA,IAAAwzD,IAAA,QAAA5I,GAAAh7C,GAEA,QAAA4jD,GAAAvlD,GACA,UAAA0B,IAAA1B,EAAA2B,GAOA,MAJA4jD,GAAA5jD,QAAA,SAAAA,GACA,MAAAg7C,IAAAh7C,IAGA4jD,GACC,EAOD3jD,IAAAhW,WACAu2D,UAAA2C,GACAzC,QAAAyC,GACA5e,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAwzD,IAAAxzD,KAAAyzD,IAAAzzD,KAAAg0D,IACAh0D,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAA0zD,IAAA1zD,KAAA2zD,IAAA3zD,KAAAi0D,IAAArqD,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,OAAA30C,KAAA8wD,QACA,OACA9wD,KAAAyO,SAAAy+C,OAAAltD,KAAAwzD,IAAAxzD,KAAA0zD,KACA1zD,KAAAyO,SAAA0+C,WACA,MAEA,QACAntD,KAAAyO,SAAA2+C,OAAAptD,KAAAwzD,IAAAxzD,KAAA0zD,KACA1zD,KAAAyO,SAAA0+C,WACA,MAEA,QACAntD,KAAAoP,MAAApP,KAAAwzD,IAAAxzD,KAAA0zD,KACA1zD,KAAAoP,MAAApP,KAAAyzD,IAAAzzD,KAAA2zD,KACA3zD,KAAAoP,MAAApP,KAAAg0D,IAAAh0D,KAAAi0D,OAKA7kD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAAwzD,IAAA32D,EAAAmD,KAAA0zD,IAAAnzD,CAA4B,MAC1D,QAAAP,KAAA8wD,OAAA,EAA8B9wD,KAAAyO,SAAAy+C,OAAAltD,KAAAyzD,IAAA52D,EAAAmD,KAAA2zD,IAAApzD,EAAkD,MAChF,QAAAP,KAAA8wD,OAAA,EAA8B9wD,KAAAg0D,IAAAn3D,EAAAmD,KAAAi0D,IAAA1zD,CAA4B,MAC1D,SAAAuP,GAAA9P,KAAAnD,EAAA0D,GAEAP,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAgQ,IAAAnT,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAAiQ,IAAA1P,GAIA,IAAA2zD,IAAA,QAAA/I,GAAAh7C,GAEA,QAAA4jD,GAAAvlD,GACA,UAAA4B,IAAA5B,EAAA2B,GAOA,MAJA4jD,GAAA5jD,QAAA,SAAAA,GACA,MAAAg7C,IAAAh7C,IAGA4jD,GACC,EAOD1jD,IAAAjW,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAAgQ,IACAhQ,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAAiQ,IAAArG,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,YACA30C,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAptD,KAAAgQ,IAAAhQ,KAAAiQ,KAAAjQ,KAAAyO,SAAAy+C,OAAAltD,KAAAgQ,IAAAhQ,KAAAiQ,IAAkG,MAChI,QAAAjQ,KAAA8wD,OAAA,CACA,SAAAhhD,GAAA9P,KAAAnD,EAAA0D,GAEAP,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAgQ,IAAAnT,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAAiQ,IAAA1P,GAIA,IAAA4zD,IAAA,QAAAhJ,GAAAh7C,GAEA,QAAA4jD,GAAAvlD,GACA,UAAA6B,IAAA7B,EAAA2B,GAOA,MAJA4jD,GAAA5jD,QAAA,SAAAA,GACA,MAAAg7C,IAAAh7C,IAGA4jD,GACC,EA8BDhjD,IAAA3W,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAAgQ,IACAhQ,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAAiQ,IAAArG,IACA5J,KAAAuQ,OAAAvQ,KAAA0Q,OAAA1Q,KAAA4Q,OACA5Q,KAAAyQ,QAAAzQ,KAAA2Q,QAAA3Q,KAAA6Q,QACA7Q,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,OAAA30C,KAAA8wD,QACA,OAAA9wD,KAAAyO,SAAA2+C,OAAAptD,KAAAgQ,IAAAhQ,KAAAiQ,IAAuD,MACvD,QAAAjQ,KAAAoP,MAAApP,KAAAgQ,IAAAhQ,KAAAiQ,MAEAjQ,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GAGA,GAFA1D,KAAA0D,KAEAP,KAAA8wD,OAAA,CACA,GAAAsD,GAAAp0D,KAAAgQ,IAAAnT,EACAw3D,EAAAr0D,KAAAiQ,IAAA1P,CACAP,MAAA4Q,OAAAxN,KAAA8C,KAAAlG,KAAA6Q,QAAAzN,KAAAI,IAAA4wD,IAAAC,IAAAr0D,KAAAiR,SAGA,OAAAjR,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,GAAAP,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,EAAsE,MACpG,QAAAP,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,CACA,SAAAxgD,GAAAtQ,KAAAnD,EAAA0D,GAGAP,KAAAuQ,OAAAvQ,KAAA0Q,OAAA1Q,KAAA0Q,OAAA1Q,KAAA4Q,OACA5Q,KAAAyQ,QAAAzQ,KAAA2Q,QAAA3Q,KAAA2Q,QAAA3Q,KAAA6Q,QACA7Q,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAgQ,IAAAnT,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAAiQ,IAAA1P,GAIA,IAAA+zD,IAAA,QAAAnJ,GAAAn6C,GAEA,QAAAsjD,GAAA9lD,GACA,MAAAwC,GAAA,GAAAD,IAAAvC,EAAAwC,GAAA,GAAAd,IAAA1B,EAAA,GAOA,MAJA8lD,GAAAtjD,MAAA,SAAAA,GACA,MAAAm6C,IAAAn6C,IAGAsjD,GACC,GAODpjD,IAAA9W,WACAu2D,UAAA2C,GACAzC,QAAAyC,GACA5e,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAwzD,IAAAxzD,KAAAyzD,IAAAzzD,KAAAg0D,IACAh0D,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAA0zD,IAAA1zD,KAAA2zD,IAAA3zD,KAAAi0D,IAAArqD,IACA5J,KAAAuQ,OAAAvQ,KAAA0Q,OAAA1Q,KAAA4Q,OACA5Q,KAAAyQ,QAAAzQ,KAAA2Q,QAAA3Q,KAAA6Q,QACA7Q,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,OAAA30C,KAAA8wD,QACA,OACA9wD,KAAAyO,SAAAy+C,OAAAltD,KAAAwzD,IAAAxzD,KAAA0zD,KACA1zD,KAAAyO,SAAA0+C,WACA,MAEA,QACAntD,KAAAyO,SAAA2+C,OAAAptD,KAAAwzD,IAAAxzD,KAAA0zD,KACA1zD,KAAAyO,SAAA0+C,WACA,MAEA,QACAntD,KAAAoP,MAAApP,KAAAwzD,IAAAxzD,KAAA0zD,KACA1zD,KAAAoP,MAAApP,KAAAyzD,IAAAzzD,KAAA2zD,KACA3zD,KAAAoP,MAAApP,KAAAg0D,IAAAh0D,KAAAi0D,OAKA7kD,MAAA,SAAAvS,EAAA0D,GAGA,GAFA1D,KAAA0D,KAEAP,KAAA8wD,OAAA,CACA,GAAAsD,GAAAp0D,KAAAgQ,IAAAnT,EACAw3D,EAAAr0D,KAAAiQ,IAAA1P,CACAP,MAAA4Q,OAAAxN,KAAA8C,KAAAlG,KAAA6Q,QAAAzN,KAAAI,IAAA4wD,IAAAC,IAAAr0D,KAAAiR,SAGA,OAAAjR,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAAwzD,IAAA32D,EAAAmD,KAAA0zD,IAAAnzD,CAA4B,MAC1D,QAAAP,KAAA8wD,OAAA,EAA8B9wD,KAAAyO,SAAAy+C,OAAAltD,KAAAyzD,IAAA52D,EAAAmD,KAAA2zD,IAAApzD,EAAkD,MAChF,QAAAP,KAAA8wD,OAAA,EAA8B9wD,KAAAg0D,IAAAn3D,EAAAmD,KAAAi0D,IAAA1zD,CAA4B,MAC1D,SAAA+P,GAAAtQ,KAAAnD,EAAA0D,GAGAP,KAAAuQ,OAAAvQ,KAAA0Q,OAAA1Q,KAAA0Q,OAAA1Q,KAAA4Q,OACA5Q,KAAAyQ,QAAAzQ,KAAA2Q,QAAA3Q,KAAA2Q,QAAA3Q,KAAA6Q,QACA7Q,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAgQ,IAAAnT,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAAiQ,IAAA1P,GAIA,IAAAg0D,IAAA,QAAApJ,GAAAn6C,GAEA,QAAAsjD,GAAA9lD,GACA,MAAAwC,GAAA,GAAAE,IAAA1C,EAAAwC,GAAA,GAAAZ,IAAA5B,EAAA,GAOA,MAJA8lD,GAAAtjD,MAAA,SAAAA,GACA,MAAAm6C,IAAAn6C,IAGAsjD,GACC,GAODnjD,IAAA/W,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAAgQ,IACAhQ,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAAiQ,IAAArG,IACA5J,KAAAuQ,OAAAvQ,KAAA0Q,OAAA1Q,KAAA4Q,OACA5Q,KAAAyQ,QAAAzQ,KAAA2Q,QAAA3Q,KAAA6Q,QACA7Q,KAAA8wD,OAAA,GAEAnc,QAAA,YACA30C,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GAGA,GAFA1D,KAAA0D,KAEAP,KAAA8wD,OAAA,CACA,GAAAsD,GAAAp0D,KAAAgQ,IAAAnT,EACAw3D,EAAAr0D,KAAAiQ,IAAA1P,CACAP,MAAA4Q,OAAAxN,KAAA8C,KAAAlG,KAAA6Q,QAAAzN,KAAAI,IAAA4wD,IAAAC,IAAAr0D,KAAAiR,SAGA,OAAAjR,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAptD,KAAAgQ,IAAAhQ,KAAAiQ,KAAAjQ,KAAAyO,SAAAy+C,OAAAltD,KAAAgQ,IAAAhQ,KAAAiQ,IAAkG,MAChI,QAAAjQ,KAAA8wD,OAAA,CACA,SAAAxgD,GAAAtQ,KAAAnD,EAAA0D,GAGAP,KAAAuQ,OAAAvQ,KAAA0Q,OAAA1Q,KAAA0Q,OAAA1Q,KAAA4Q,OACA5Q,KAAAyQ,QAAAzQ,KAAA2Q,QAAA3Q,KAAA2Q,QAAA3Q,KAAA6Q,QACA7Q,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA1H,KAAAgQ,IAAAhQ,KAAAgQ,IAAAnT,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAA3H,KAAAiQ,IAAAjQ,KAAAiQ,IAAA1P,GAIA,IAAAi0D,IAAA,QAAArJ,GAAAn6C,GAEA,QAAAsjD,GAAA9lD,GACA,MAAAwC,GAAA,GAAAG,IAAA3C,EAAAwC,GAAA,GAAAX,IAAA7B,EAAA,GAOA,MAJA8lD,GAAAtjD,MAAA,SAAAA,GACA,MAAAm6C,IAAAn6C,IAGAsjD,GACC,GAMDljD,IAAAhX,WACAu2D,UAAA2C,GACAzC,QAAAyC,GACA5e,UAAA,WACA10C,KAAA8wD,OAAA,GAEAnc,QAAA,WACA30C,KAAA8wD,QAAA9wD,KAAAyO,SAAA0+C,aAEA/9C,MAAA,SAAAvS,EAAA0D,GACA1D,KAAA0D,KACAP,KAAA8wD,OAAA9wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,IACAP,KAAA8wD,OAAA,EAAA9wD,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,KAIA,IAAAk0D,IAAA,SAAAjmD,GACA,UAAA4C,IAAA5C,GA0CAwD,IAAA5X,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAAwH,IAAAxH,KAAA0H,IACA1H,KAAAyH,IAAAzH,KAAA2H,IACA3H,KAAA00D,IAAA9qD,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,OAAA30C,KAAA8wD,QACA,OAAA9wD,KAAAyO,SAAA2+C,OAAAptD,KAAA0H,IAAA1H,KAAA2H,IAAuD,MACvD,QAAAkK,GAAA7R,UAAA00D,IAAA9iD,GAAA5R,UAAA00D,OAEA10D,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,OAEAxhD,MAAA,SAAAvS,EAAA0D,GACA,GAAAwR,GAAAnI,GAGA,IADA/M,KAAA0D,KACA1D,IAAAmD,KAAA0H,KAAAnH,IAAAP,KAAA2H,IAAA,CACA,OAAA3H,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,GAAAP,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,EAAsE,MACpG,QAAAP,KAAA8wD,OAAA,CAA8B,MAC9B,QAAA9wD,KAAA8wD,OAAA,EAA8Bj/C,GAAA7R,KAAA4R,GAAA5R,KAAA+R,EAAAT,GAAAtR,KAAAnD,EAAA0D,IAAAwR,EAA0D,MACxF,SAAAF,GAAA7R,UAAA00D,IAAA3iD,EAAAT,GAAAtR,KAAAnD,EAAA0D,IAGAP,KAAAwH,IAAAxH,KAAA0H,IAAA1H,KAAA0H,IAAA7K,EACAmD,KAAAyH,IAAAzH,KAAA2H,IAAA3H,KAAA2H,IAAApH,EACAP,KAAA00D,IAAA3iD,MAQAE,GAAA7X,UAAAD,OAAA+Y,OAAAlB,GAAA5X,YAAAgV,MAAA,SAAAvS,EAAA0D,GACAyR,GAAA5X,UAAAgV,MAAA9U,KAAA0F,KAAAO,EAAA1D,IAOAqV,GAAA9X,WACA8yD,OAAA,SAAArwD,EAAA0D,GAA0BP,KAAAyO,SAAAy+C,OAAA3sD,EAAA1D,IAC1BswD,UAAA,WAAyBntD,KAAAyO,SAAA0+C,aACzBC,OAAA,SAAAvwD,EAAA0D,GAA0BP,KAAAyO,SAAA2+C,OAAA7sD,EAAA1D,IAC1ByS,cAAA,SAAAzG,EAAAC,EAAAsD,EAAAC,EAAAxP,EAAA0D,GAAiDP,KAAAyO,SAAAa,cAAAxG,EAAAD,EAAAwD,EAAAD,EAAA7L,EAAA1D,KAejDwV,GAAAjY,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAA+I,MACA/I,KAAAgJ,OAEA2rC,QAAA,WACA,GAAA93C,GAAAmD,KAAA+I,GACAxI,EAAAP,KAAAgJ,GACAvE,EAAA5H,EAAA5B,MAEA,IAAAwJ,EAEA,GADAzE,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA,GAAA0D,EAAA,IAAAP,KAAAyO,SAAAy+C,OAAArwD,EAAA,GAAA0D,EAAA,IACA,IAAAkE,EACAzE,KAAAyO,SAAA2+C,OAAAvwD,EAAA,GAAA0D,EAAA,QAIA,QAFAo0D,GAAAriD,GAAAzV,GACA+3D,EAAAtiD,GAAA/R,GACAilC,EAAA,EAAAN,EAAA,EAAgCA,EAAAzgC,IAAQ+gC,IAAAN,EACxCllC,KAAAyO,SAAAa,cAAAqlD,EAAA,GAAAnvB,GAAAovB,EAAA,GAAApvB,GAAAmvB,EAAA,GAAAnvB,GAAAovB,EAAA,GAAApvB,GAAA3oC,EAAAqoC,GAAA3kC,EAAA2kC,KAKAllC,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAAnsD,IAAAzE,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,MACA5wD,KAAA+I,GAAA/I,KAAAgJ,GAAA,MAEAoG,MAAA,SAAAvS,EAAA0D,GACAP,KAAA+I,GAAAxG,MAAA1F,GACAmD,KAAAgJ,GAAAzG,MAAAhC,IAuBA,IAAAs0D,IAAA,SAAArmD,GACA,UAAA6D,IAAA7D,GAQA+D,IAAAnY,WACAu2D,UAAA,WACA3wD,KAAA4wD,MAAA,GAEAC,QAAA,WACA7wD,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAA+I,GAAA/I,KAAAgJ,GAAAY,IACA5J,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,EAAA30C,KAAAwS,IAAAxS,KAAAwS,GAAA,OAAAxS,KAAA8wD,QAAA9wD,KAAAyO,SAAA2+C,OAAAptD,KAAA+I,GAAA/I,KAAAgJ,KACAhJ,KAAA4wD,OAAA,IAAA5wD,KAAA4wD,OAAA,IAAA5wD,KAAA8wD,SAAA9wD,KAAAyO,SAAA0+C,YACAntD,KAAA4wD,OAAA,IAAA5wD,KAAAwS,GAAA,EAAAxS,KAAAwS,GAAAxS,KAAA4wD,MAAA,EAAA5wD,KAAA4wD,QAEAxhD,MAAA,SAAAvS,EAAA0D,GAEA,OADA1D,KAAA0D,KACAP,KAAA8wD,QACA,OAAA9wD,KAAA8wD,OAAA,EAA8B9wD,KAAA4wD,MAAA5wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,GAAAP,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,EAAsE,MACpG,QAAAP,KAAA8wD,OAAA,CACA,SACA,GAAA9wD,KAAAwS,IAAA,EACAxS,KAAAyO,SAAA2+C,OAAAptD,KAAA+I,GAAAxI,GACAP,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,OACS,CACT,GAAAsI,GAAA7I,KAAA+I,IAAA,EAAA/I,KAAAwS,IAAA3V,EAAAmD,KAAAwS,EACAxS,MAAAyO,SAAA2+C,OAAAvkD,EAAA7I,KAAAgJ,IACAhJ,KAAAyO,SAAA2+C,OAAAvkD,EAAAtI,IAKAP,KAAA+I,GAAAlM,EAAAmD,KAAAgJ,GAAAzI,GAIA,IAAAmf,IAAA,SAAAlR,GACA,UAAA+D,IAAA/D,EAAA,KAWAsmD,GAAAxwD,MAAAlK,UAAAkN,MAEAytD,GAAA,SAAAliD,EAAAwrB,GACA,IAAA55B,EAAAoO,EAAA5X,QAAA,EACA,OAAAwW,GAAAhN,EAAA1J,EAAA,EAAA2W,EAAAmB,EAAAwrB,EAAA,IAAAvtB,EAAAY,EAAAzW,OAA8DF,EAAA0J,IAAO1J,EAAA,CACrE0W,EAAAC,IAAAmB,EAAAwrB,EAAAtjC,GACA,QAAAwN,GAAA,EAAmBA,EAAAuI,IAAOvI,EAC1BmJ,EAAAnJ,GAAA,IAAAmJ,EAAAnJ,GAAA,GAAAR,MAAA0J,EAAAlJ,GAAA,IAAAkJ,EAAAlJ,GAAA,GAAAkJ,EAAAlJ,GAAA,KAKAysD,GAAA,SAAAniD,GAEA,IADA,GAAApO,GAAAoO,EAAA5X,OAAAuJ,EAAA,GAAAF,OAAAG,KACAA,GAAA,GAAAD,EAAAC,IACA,OAAAD,IAOAywD,GAAA,WAMA,QAAAA,GAAAz4D,GACA,GACAzB,GAIAm6D,EALAC,EAAArL,EAAA9+C,MAAAhL,KAAAsL,WAEAwF,EAAAtU,EAAAvB,OACAwJ,EAAA0wD,EAAAl6D,OACAm6D,EAAA,GAAA9wD,OAAAG,EAGA,KAAA1J,EAAA,EAAeA,EAAA0J,IAAO1J,EAAA,CACtB,OAAAs6D,GAAAC,EAAAH,EAAAp6D,GAAAw6D,EAAAH,EAAAr6D,GAAA,GAAAuJ,OAAAwM,GAAAvI,EAAA,EAAiEA,EAAAuI,IAAOvI,EACxEgtD,EAAAhtD,GAAA8sD,GAAA,GAAA73D,EAAAhB,EAAA+L,GAAA+sD,EAAA/sD,EAAA/L,IACA64D,EAAA74D,OAAA+L,EAEAgtD,GAAAr7D,IAAAo7D,EAGA,IAAAv6D,EAAA,EAAAm6D,EAAA72B,EAAA+2B,GAA+Br6D,EAAA0J,IAAO1J,EACtCq6D,EAAAF,EAAAn6D,IAAAwC,MAAAxC,CAIA,OADA0kB,GAAA21C,EAAAF,GACAE,EA1BA,GAAAtL,GAAA2F,OACApxB,EAAA22B,GACAv1C,EAAAs1C,GACAv3D,EAAAmV,EA0CA,OAhBAsiD,GAAAnL,KAAA,SAAAliD,GACA,MAAA0D,WAAArQ,QAAA6uD,EAAA,kBAAAliD,KAAA6nD,GAAAqF,GAAAx6D,KAAAsN,IAAAqtD,GAAAnL,GAGAmL,EAAAz3D,MAAA,SAAAoK,GACA,MAAA0D,WAAArQ,QAAAuC,EAAA,kBAAAoK,KAAA6nD,IAAA7nD,GAAAqtD,GAAAz3D,GAGAy3D,EAAA52B,MAAA,SAAAz2B,GACA,MAAA0D,WAAArQ,QAAAojC,EAAA,MAAAz2B,EAAAotD,GAAA,kBAAAptD,KAAA6nD,GAAAqF,GAAAx6D,KAAAsN,IAAAqtD,GAAA52B,GAGA42B,EAAAx1C,OAAA,SAAA7X,GACA,MAAA0D,WAAArQ,QAAAwkB,EAAA,MAAA7X,EAAAmtD,GAAAntD,EAAAqtD,GAAAx1C,GAGAw1C,GAGAO,GAAA,SAAA3iD,EAAAwrB,GACA,IAAA55B,EAAAoO,EAAA5X,QAAA,GACA,OAAAF,GAAA0J,EAAAlE,EAAAgI,EAAA,EAAAuI,EAAA+B,EAAA,GAAA5X,OAAgDsN,EAAAuI,IAAOvI,EAAA,CACvD,IAAAhI,EAAAxF,EAAA,EAAmBA,EAAA0J,IAAO1J,EAAAwF,GAAAsS,EAAA9X,GAAAwN,GAAA,KAC1B,IAAAhI,EAAA,IAAAxF,EAAA,EAAsBA,EAAA0J,IAAO1J,EAAA8X,EAAA9X,GAAAwN,GAAA,IAAAhI,EAE7Bw0D,GAAAliD,EAAAwrB,KAGAo3B,GAAA,SAAA5iD,EAAAwrB,GACA,IAAA55B,EAAAoO,EAAA5X,QAAA,GACA,OAAAwJ,GAAA8D,EAAA,EAAAkJ,EAAAoB,EAAAwrB,EAAA,IAAAvtB,EAAAW,EAAAxW,OAA0DsN,EAAAuI,IAAOvI,EAAA,CACjE,OAAAxN,GAAA,EAAAwF,EAAA,EAA0BxF,EAAA0J,IAAO1J,EAAAwF,GAAAsS,EAAA9X,GAAAwN,GAAA,KACjCkJ,GAAAlJ,GAAA,IAAAkJ,EAAAlJ,GAAA,IAAAhI,EAAA,EAEAw0D,GAAAliD,EAAAwrB,KAGAq3B,GAAA,SAAA7iD,EAAAwrB,GACA,IAAA55B,EAAAoO,EAAA5X,QAAA,IAAA6V,GAAAW,EAAAoB,EAAAwrB,EAAA,KAAApjC,QAAA,GACA,OAAAwW,GAAAX,EAAArM,EAAAlE,EAAA,EAAAgI,EAAA,EAAkCA,EAAAuI,IAAOvI,EAAA,CACzC,OAAAxN,GAAA,EAAA2W,EAAA,EAAAikD,EAAA,EAAmC56D,EAAA0J,IAAO1J,EAAA,CAK1C,OAJAw6D,GAAA1iD,EAAAwrB,EAAAtjC,IACA66D,EAAAL,EAAAhtD,GAAA,MACAstD,EAAAN,EAAAhtD,EAAA,SACAutD,GAAAF,EAAAC,GAAA,EACAp/C,EAAA,EAAqBA,EAAA1b,IAAO0b,EAAA,CAC5B,GAAAusB,GAAAnwB,EAAAwrB,EAAA5nB,IACAs/C,EAAA/yB,EAAAz6B,GAAA,MACAytD,EAAAhzB,EAAAz6B,EAAA,QACAutD,IAAAC,EAAAC,EAEAtkD,GAAAkkD,EAAAD,GAAAG,EAAAF,EAEAnkD,EAAAlJ,EAAA,OAAAkJ,EAAAlJ,EAAA,MAAAhI,EACAmR,IAAAnR,GAAAo1D,EAAAjkD,GAEAD,EAAAlJ,EAAA,OAAAkJ,EAAAlJ,EAAA,MAAAhI,EACAw0D,GAAAliD,EAAAwrB,KAGA43B,GAAA,SAAApjD,GACA,GAAAqjD,GAAArjD,EAAA1O,IAAAyO,GACA,OAAAoiD,IAAAniD,GAAAgd,KAAA,SAAAjuB,EAAAC,GAA6C,MAAAq0D,GAAAt0D,GAAAs0D,EAAAr0D,MAS7Cs0D,GAAA,SAAAtjD,GACA,MAAAojD,IAAApjD,GAAAwZ,WAGA+pC,GAAA,SAAAvjD,GACA,GACA9X,GACAwN,EAFA9D,EAAAoO,EAAA5X,OAGAi7D,EAAArjD,EAAA1O,IAAAyO,IACAyrB,EAAA22B,GAAAniD,GAAAgd,KAAA,SAAAjuB,EAAAC,GAAkD,MAAAq0D,GAAAr0D,GAAAq0D,EAAAt0D,KAClDq8B,EAAA,EACA31B,EAAA,EACA+tD,KACAC,IAEA,KAAAv7D,EAAA,EAAaA,EAAA0J,IAAO1J,EACpBwN,EAAA81B,EAAAtjC,GACAkjC,EAAA31B,GACA21B,GAAAi4B,EAAA3tD,GACA8tD,EAAA9zD,KAAAgG,KAEAD,GAAA4tD,EAAA3tD,GACA+tD,EAAA/zD,KAAAgG,GAIA,OAAA+tD,GAAAjqC,UAAAtQ,OAAAs6C,IAGAhqC,GAAA,SAAAxZ,GACA,MAAAmiD,IAAAniD,GAAAwZ,WAGAkqC,GAAA,SAAA3M,EAAAlnD,EAAAtI,GACAwvD,EAAAxvD,UAAAsI,EAAAtI,YACAA,EAAAwvD,eAWA4M,GAAA,GACAC,GAAA,EAAAD,GAEAhjD,GAAA,mBACAG,GAAA,mBACAE,GAAA,8DACAC,GAAA,+FACAC,GAAA,0FACAE,GAAA,2HACAC,GAAA,8FACAE,GAAA,0HAEAC,IACAqiD,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA;AACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACA3Y,IAAA,SACA4Y,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,SAGArJ,IAAApjD,GAAAC,IACAysD,YAAA,WACA,MAAA7/D,MAAAwU,MAAAqrD,eAEAj2C,SAAA,WACA,MAAA5pB,MAAAwU,MAAA,MA+CA+hD,GAAA7iD,GAAAc,GAAAxB,GAAAG,IACAsjD,SAAA,SAAAhgD,GAEA,MADAA,GAAA,MAAAA,EAAAggD,GAAArzD,KAAAI,IAAAizD,GAAAhgD,GACA,GAAA/C,IAAA1T,KAAAkL,EAAAuL,EAAAzW,KAAAsU,EAAAmC,EAAAzW,KAAA6B,EAAA4U,EAAAzW,KAAAyU,UAEA+hD,OAAA,SAAA//C,GAEA,MADAA,GAAA,MAAAA,EAAA+/C,GAAApzD,KAAAI,IAAAgzD,GAAA//C,GACA,GAAA/C,IAAA1T,KAAAkL,EAAAuL,EAAAzW,KAAAsU,EAAAmC,EAAAzW,KAAA6B,EAAA4U,EAAAzW,KAAAyU,UAEAD,IAAA,WACA,MAAAxU,OAEA6/D,YAAA,WACA,UAAA7/D,KAAAkL,GAAAlL,KAAAkL,GAAA,KACA,GAAAlL,KAAAsU,GAAAtU,KAAAsU,GAAA,KACA,GAAAtU,KAAA6B,GAAA7B,KAAA6B,GAAA,KACA,GAAA7B,KAAAyU,SAAAzU,KAAAyU,SAAA,GAEAmV,SAAA,WACA,GAAAhoB,GAAA5B,KAAAyU,OACA,OADyB7S,GAAAmG,MAAAnG,GAAA,EAAAwB,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,EAAA/P,KACzB,IAAAA,EAAA,gBACAwB,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,IAAAvO,KAAAiU,MAAArX,KAAAkL,IAAA,SACA9H,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,IAAAvO,KAAAiU,MAAArX,KAAAsU,IAAA,SACAlR,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,IAAAvO,KAAAiU,MAAArX,KAAA6B,IAAA,KACA,IAAAD,EAAA,SAAAA,EAAA,SAgDA20D,GAAA7hD,GAAAE,GAAA5B,GAAAG,IACAsjD,SAAA,SAAAhgD,GAEA,MADAA,GAAA,MAAAA,EAAAggD,GAAArzD,KAAAI,IAAAizD,GAAAhgD,GACA,GAAA/B,IAAA1U,KAAAlF,EAAAkF,KAAA+S,EAAA/S,KAAAiP,EAAAwH,EAAAzW,KAAAyU,UAEA+hD,OAAA,SAAA//C,GAEA,MADAA,GAAA,MAAAA,EAAA+/C,GAAApzD,KAAAI,IAAAgzD,GAAA//C,GACA,GAAA/B,IAAA1U,KAAAlF,EAAAkF,KAAA+S,EAAA/S,KAAAiP,EAAAwH,EAAAzW,KAAAyU,UAEAD,IAAA,WACA,GAAA1Z,GAAAkF,KAAAlF,EAAA,SAAAkF,KAAAlF,EAAA,GACAiY,EAAAhL,MAAAjN,IAAAiN,MAAA/H,KAAA+S,GAAA,EAAA/S,KAAA+S,EACA9D,EAAAjP,KAAAiP,EACA8F,EAAA9F,KAAA,GAAAA,EAAA,EAAAA,GAAA8D,EACA+B,EAAA,EAAA7F,EAAA8F,CACA,WAAArB,IACAmB,GAAA/Z,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAga,EAAAC,GACAF,GAAA/Z,EAAAga,EAAAC,GACAF,GAAA/Z,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAga,EAAAC,GACA/U,KAAAyU,UAGAorD,YAAA,WACA,UAAA7/D,KAAA+S,GAAA/S,KAAA+S,GAAA,GAAAhL,MAAA/H,KAAA+S,KACA,GAAA/S,KAAAiP,GAAAjP,KAAAiP,GAAA,GACA,GAAAjP,KAAAyU,SAAAzU,KAAAyU,SAAA,KAYA,IAAAU,IAAA/R,KAAAkoD,GAAA,IACAr1C,GAAA,IAAA7S,KAAAkoD,GAEAwU,GAAA,GACAxqD,GAAA,OACAC,GAAA,EACAE,GAAA,QACA3D,GAAA,KACAC,GAAA,KACA6D,GAAA,EAAA7D,MACA4D,GAAA5D,QA6BAwkD,IAAAthD,GAAAS,GAAA1C,GAAAG,IACAsjD,SAAA,SAAAhgD,GACA,UAAAxB,IAAAjV,KAAAiP,EAAA6wD,IAAA,MAAArpD,EAAA,EAAAA,GAAAzW,KAAA4B,EAAA5B,KAAA6B,EAAA7B,KAAAyU,UAEA+hD,OAAA,SAAA//C,GACA,UAAAxB,IAAAjV,KAAAiP,EAAA6wD,IAAA,MAAArpD,EAAA,EAAAA,GAAAzW,KAAA4B,EAAA5B,KAAA6B,EAAA7B,KAAAyU,UAEAD,IAAA,WACA,GAAAjU,IAAAP,KAAAiP,EAAA,QACApS,EAAAkL,MAAA/H,KAAA4B,GAAArB,IAAAP,KAAA4B,EAAA,IACA4T,EAAAzN,MAAA/H,KAAA6B,GAAAtB,IAAAP,KAAA6B,EAAA,GAIA,OAHAtB,GAAAgV,GAAAM,GAAAtV,GACA1D,EAAAyY,GAAAO,GAAAhZ,GACA2Y,EAAAC,GAAAI,GAAAL,GACA,GAAA9B,IACAoC,GAAA,UAAAjZ,EAAA,UAAA0D,EAAA,SAAAiV,GACAM,IAAA,QAAAjZ,EAAA,UAAA0D,EAAA,QAAAiV,GACAM,GAAA,SAAAjZ,EAAA,SAAA0D,EAAA,UAAAiV,GACAxV,KAAAyU,aAuCA8hD,GAAArhD,GAAAgB,GAAAlD,GAAAG,IACAsjD,SAAA,SAAAhgD,GACA,UAAAvB,IAAAlV,KAAAlF,EAAAkF,KAAA8K,EAAA9K,KAAAiP,EAAA6wD,IAAA,MAAArpD,EAAA,EAAAA,GAAAzW,KAAAyU,UAEA+hD,OAAA,SAAA//C,GACA,UAAAvB,IAAAlV,KAAAlF,EAAAkF,KAAA8K,EAAA9K,KAAAiP,EAAA6wD,IAAA,MAAArpD,EAAA,EAAAA,GAAAzW,KAAAyU,UAEAD,IAAA,WACA,MAAAQ,IAAAhV,MAAAwU,SAIA,IAAAkS,KAAA,OACAC,GAAA,QACAhQ,IAAA,OACA/I,IAAA,OACA8I,GAAA,QACAJ,GAAAI,GAAA9I,GACA2I,GAAAG,GAAAiQ,GACAtQ,GAAAsQ,GAAAhQ,GAAA/I,GAAA8Y,EA2BA6vC,IAAAngD,GAAAQ,GAAA5D,GAAAG,IACAsjD,SAAA,SAAAhgD,GAEA,MADAA,GAAA,MAAAA,EAAAggD,GAAArzD,KAAAI,IAAAizD,GAAAhgD,GACA,GAAAL,IAAApW,KAAAlF,EAAAkF,KAAA+S,EAAA/S,KAAAiP,EAAAwH,EAAAzW,KAAAyU,UAEA+hD,OAAA,SAAA//C,GAEA,MADAA,GAAA,MAAAA,EAAA+/C,GAAApzD,KAAAI,IAAAgzD,GAAA//C,GACA,GAAAL,IAAApW,KAAAlF,EAAAkF,KAAA+S,EAAA/S,KAAAiP,EAAAwH,EAAAzW,KAAAyU,UAEAD,IAAA,WACA,GAAA1Z,GAAAiN,MAAA/H,KAAAlF,GAAA,GAAAkF,KAAAlF,EAAA,KAAAqa,GACAlG,GAAAjP,KAAAiP,EACArN,EAAAmG,MAAA/H,KAAA+S,GAAA,EAAA/S,KAAA+S,EAAA9D,GAAA,EAAAA,GACAwL,EAAArX,KAAAoC,IAAA1K,GACA6f,EAAAvX,KAAAuC,IAAA7K,EACA,WAAA4Y,IACA,KAAAzE,EAAArN,GAAA8kB,GAAAjM,EAAAkM,GAAAhM,IACA,KAAA1L,EAAArN,GAAA+U,GAAA8D,EAAA7M,GAAA+M,IACA,KAAA1L,EAAArN,GAAA8U,GAAA+D,IACAza,KAAAyU,YAaA,IA4QAwD,IACAE,GACAE,GACAW,GA/QA+mD,GAAA,SAAArzC,GACA,GAAAjoB,GAAAioB,EAAAzxB,OAAA,CACA,iBAAA+J,GACA,GAAAjK,GAAAiK,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAP,EAAA,GAAArB,KAAAK,MAAAuB,EAAAP,GACAsS,EAAA2V,EAAA3xB,GACAic,EAAA0V,EAAA3xB,EAAA,GACA+b,EAAA/b,EAAA,EAAA2xB,EAAA3xB,EAAA,KAAAgc,EAAAC,EACAC,EAAAlc,EAAA0J,EAAA,EAAAioB,EAAA3xB,EAAA,KAAAic,EAAAD,CACA,OAAAF,KAAA7R,EAAAjK,EAAA0J,KAAAqS,EAAAC,EAAAC,EAAAC,KAIA+oD,GAAA,SAAAtzC,GACA,GAAAjoB,GAAAioB,EAAAzxB,MACA,iBAAA+J,GACA,GAAAjK,GAAAqI,KAAAK,QAAAuB,GAAA,OAAAA,KAAAP,GACAqS,EAAA4V,GAAA3xB,EAAA0J,EAAA,GAAAA,GACAsS,EAAA2V,EAAA3xB,EAAA0J,GACAuS,EAAA0V,GAAA3xB,EAAA,GAAA0J,GACAwS,EAAAyV,GAAA3xB,EAAA,GAAA0J,EACA,OAAAoS,KAAA7R,EAAAjK,EAAA0J,KAAAqS,EAAAC,EAAAC,EAAAC,KAIAK,GAAA,SAAAza,GACA,kBACA,MAAAA,KAgCAojE,GAAA,QAAAC,GAAA3/D,GAGA,QAAA4/D,GAAAn9D,EAAA+H,GACA,GAAAG,GAAA0M,GAAA5U,EAAAwR,GAAAxR,IAAAkI,GAAAH,EAAAyJ,GAAAzJ,IAAAG,GACAoJ,EAAAsD,EAAA5U,EAAAsR,EAAAvJ,EAAAuJ,GACAzS,EAAA+V,EAAA5U,EAAAnB,EAAAkJ,EAAAlJ,GACA4S,EAAAmD,EAAA5U,EAAAyR,QAAA1J,EAAA0J,QACA,iBAAAzP,GAKA,MAJAhC,GAAAkI,IAAAlG,GACAhC,EAAAsR,IAAAtP,GACAhC,EAAAnB,IAAAmD,GACAhC,EAAAyR,UAAAzP,GACAhC,EAAA,IAZA,GAAA4U,GAAAL,GAAAhX,EAkBA,OAFA4/D,GAAA5oD,MAAA2oD,EAEAC,GACC,GA4BDC,GAAA3oD,GAAAsoD,IACAM,GAAA5oD,GAAAuoD,IAEAM,GAAA,SAAA1+D,EAAAC,GACA,GAIA9G,GAJAwlE,EAAA1+D,IAAA5G,OAAA,EACAulE,EAAA5+D,EAAAwB,KAAAuO,IAAA4uD,EAAA3+D,EAAA3G,QAAA,EACA4B,EAAA,GAAAyH,OAAAi8D,GACAz1D,EAAA,GAAAxG,OAAAi8D,EAGA,KAAAxlE,EAAA,EAAaA,EAAAylE,IAAQzlE,EAAA8B,EAAA9B,GAAA4yB,GAAA/rB,EAAA7G,GAAA8G,EAAA9G,GACrB,MAAQA,EAAAwlE,IAAQxlE,EAAA+P,EAAA/P,GAAA8G,EAAA9G,EAEhB,iBAAAiK,GACA,IAAAjK,EAAA,EAAeA,EAAAylE,IAAQzlE,EAAA+P,EAAA/P,GAAA8B,EAAA9B,GAAAiK,EACvB,OAAA8F,KAIAsU,GAAA,SAAAxd,EAAAC,GACA,GAAAgB,GAAA,GAAAwc,KACA,OAAAzd,MAAAC,GAAAD,EAAA,SAAAoD,GACA,MAAAnC,GAAAgd,QAAAje,EAAAC,EAAAmD,GAAAnC,IAIAmX,GAAA,SAAApY,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAoD,GACA,MAAApD,GAAAC,EAAAmD,IAIAd,GAAA,SAAAtC,EAAAC,GACA,GAEA4U,GAFA1b,KACA+P,IAGA,QAAAlJ,GAAA,gBAAAA,WACA,OAAAC,GAAA,gBAAAA,UAEA,KAAA4U,IAAA5U,GACA4U,IAAA7U,GACA7G,EAAA0b,GAAAkX,GAAA/rB,EAAA6U,GAAA5U,EAAA4U,IAEA3L,EAAA2L,GAAA5U,EAAA4U,EAIA,iBAAAzR,GACA,IAAAyR,IAAA1b,GAAA+P,EAAA2L,GAAA1b,EAAA0b,GAAAzR,EACA,OAAA8F,KAIA21D,GAAA,8CACAC,GAAA,GAAAv2C,QAAAs2C,GAAA/yC,OAAA,KAcAizC,GAAA,SAAA/+D,EAAAC,GACA,GACA++D,GACAC,EACAC,EAHAC,EAAAN,GAAAO,UAAAN,GAAAM,UAAA,EAIAjmE,GAAA,EACAgY,KACApI,IAMA,KAHA/I,GAAA,GAAAC,GAAA,IAGA++D,EAAAH,GAAAhtD,KAAA7R,MACAi/D,EAAAH,GAAAjtD,KAAA5R,MACAi/D,EAAAD,EAAAtjE,OAAAwjE,IACAD,EAAAj/D,EAAAyF,MAAAy5D,EAAAD,GACA/tD,EAAAhY,GAAAgY,EAAAhY,IAAA+lE,EACA/tD,IAAAhY,GAAA+lE,IAEAF,IAAA,OAAAC,IAAA,IACA9tD,EAAAhY,GAAAgY,EAAAhY,IAAA8lE,EACA9tD,IAAAhY,GAAA8lE,GAEA9tD,IAAAhY,GAAA,KACA4P,EAAApI,MAAcxH,IAAA8B,EAAAmd,GAAA4mD,EAAAC,MAEdE,EAAAL,GAAAM,SAYA,OARAD,GAAAl/D,EAAA5G,SACA6lE,EAAAj/D,EAAAyF,MAAAy5D,GACAhuD,EAAAhY,GAAAgY,EAAAhY,IAAA+lE,EACA/tD,IAAAhY,GAAA+lE,GAKA/tD,EAAA9X,OAAA,EAAA0P,EAAA,GACAmN,GAAAnN,EAAA,GAAA9N,GACAgb,GAAAhW,IACAA,EAAA8I,EAAA1P,OAAA,SAAA+J,GACA,OAAAR,GAAAzJ,EAAA,EAA4BA,EAAA8G,IAAO9G,EAAAgY,GAAAvO,EAAAmG,EAAA5P,OAAAyJ,EAAA3H,EAAAmI,EACnC,OAAA+N,GAAAyH,KAAA,OAIAmT,GAAA,SAAA/rB,EAAAC,GACA,GAAAiJ,GAAA9F,QAAAnD,EACA,cAAAA,GAAA,YAAAmD,EAAAsS,GAAAzV,IACA,WAAAmD,EAAAgV,GACA,WAAAhV,GAAA8F,EAAAsI,GAAAvR,OAAAiJ,EAAAm1D,IAAAU,GACA9+D,YAAAuR,IAAA6sD,GACAp+D,YAAAwd,MAAAD,GACA9a,MAAAC,QAAA1C,GAAAy+D,GACAv4D,MAAAlG,GAAAqC,GACA8V,IAAApY,EAAAC,IAGAysB,GAAA,SAAA1sB,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAoD,GACA,MAAA5B,MAAAiU,MAAAzV,EAAAC,EAAAmD,KAIAi8D,GAAA,IAAA79D,KAAAkoD,GAEAtzC,IACAoC,WAAA,EACAC,WAAA,EACAJ,OAAA,EACAC,MAAA,EACAI,OAAA,EACAC,OAAA,GAGAzB,GAAA,SAAAlX,EAAAC,EAAAiJ,EAAAjI,EAAA+H,EAAAhI,GACA,GAAA0X,GAAAC,EAAAL,CAKA,QAJAI,EAAAlX,KAAA8C,KAAAtE,IAAAC,QAAAD,GAAA0Y,EAAAzY,GAAAyY,IACAJ,EAAAtY,EAAAkJ,EAAAjJ,EAAAgB,KAAAiI,GAAAlJ,EAAAsY,EAAArX,GAAAhB,EAAAqY,IACAK,EAAAnX,KAAA8C,KAAA4E,IAAAjI,QAAAiI,GAAAyP,EAAA1X,GAAA0X,EAAAL,GAAAK,GACA3Y,EAAAiB,EAAAhB,EAAAiJ,IAAAlJ,KAAAC,KAAAqY,KAAAI,OAEAF,WAAAxP,EACAyP,WAAAzX,EACAqX,OAAA7W,KAAA4S,MAAAnU,EAAAD,GAAAq/D,GACA/mD,MAAA9W,KAAAk/C,KAAApoC,GAAA+mD,GACA3mD,SACAC,WAsFA2mD,GAAA5nD,GAAAvB,GAAA,qBACAopD,GAAA7nD,GAAAP,GAAA,cAEAqoD,GAAAh+D,KAAAi+D,MACAC,GAAA,EACAC,GAAA,EACAC,GAAA,MAgBAC,GAAA,SAAApqB,EAAAnW,GACA,GAKAnmC,GACAmnB,EANAw/C,EAAArqB,EAAA,GAAAsqB,EAAAtqB,EAAA,GAAAvG,EAAAuG,EAAA,GACAuqB,EAAA1gC,EAAA,GAAA2gC,EAAA3gC,EAAA,GAAA8P,EAAA9P,EAAA,GACAzzB,EAAAm0D,EAAAF,EACAh0D,EAAAm0D,EAAAF,EACAh0D,EAAAF,IAAAC,GAKA,IAAAC,EAAA6zD,GACAt/C,EAAA9e,KAAAM,IAAAstC,EAAAF,GAAAswB,GACArmE,EAAA,SAAAiK,GACA,OACA08D,EAAA18D,EAAAyI,EACAk0D,EAAA38D,EAAA0I,EACAojC,EAAA1tC,KAAAsX,IAAA0mD,GAAAp8D,EAAAkd,SAMA,CACA,GAAA1C,GAAApc,KAAA8C,KAAAyH,GACAnH,GAAAwqC,IAAAF,IAAAywB,GAAA5zD,IAAA,EAAAmjC,EAAAwwB,GAAA9hD,GACAjZ,GAAAyqC,IAAAF,IAAAywB,GAAA5zD,IAAA,EAAAqjC,EAAAswB,GAAA9hD,GACA+N,EAAAnqB,KAAAM,IAAAN,KAAA8C,KAAAM,IAAA,GAAAA,GACAqG,EAAAzJ,KAAAM,IAAAN,KAAA8C,KAAAK,IAAA,GAAAA,EACA2b,IAAArV,EAAA0gB,GAAA6zC,GACArmE,EAAA,SAAAiK,GACA,GAAA+N,GAAA/N,EAAAkd,EACA4/C,EAAArnD,GAAA8S,GACA+B,EAAAwhB,GAAAwwB,GAAA9hD,IAAAsiD,EAAAlnD,GAAAwmD,GAAAruD,EAAAwa,GAAA5S,GAAA4S,GACA,QACAm0C,EAAApyC,EAAA7hB,EACAk0D,EAAAryC,EAAA5hB,EACAojC,EAAAgxB,EAAArnD,GAAA2mD,GAAAruD,EAAAwa,KAOA,MAFAxyB,GAAAo/B,SAAA,IAAAjY,EAEAnnB,GAmBAgnE,GAAAlnD,GAAAzD,IACA4qD,GAAAnnD,GAAArD,IAgCAyqD,GAAAjnD,GAAA5D,IACA8qD,GAAAlnD,GAAAxD,IA0BA2qD,GAAAlnD,GAAA7D,IACAgrD,GAAAnnD,GAAAzD,IAEA6qD,GAAA,SAAAxwC,EAAAptB,GAEA,OADA69D,GAAA,GAAAh+D,OAAAG,GACA1J,EAAA,EAAiBA,EAAA0J,IAAO1J,EAAAunE,EAAAvnE,GAAA82B,EAAA92B,GAAA0J,EAAA,GACxB,OAAA69D,IAGAxmD,IAActe,MAAA,aAuBd6d,IAAAjhB,UAAAghB,GAAAhhB,WACAwvD,YAAAvuC,GACAkY,GAAA,SAAAD,EAAAzX,GACA,GAEA7W,GAFA4C,EAAA5H,KAAA4H,EACA26D,EAAAjnD,GAAAgY,EAAA,GAAA1rB,GAEA7M,GAAA,EACA0J,EAAA89D,EAAAtnE,MAGA,OAAAqQ,UAAArQ,OAAA,IAOA,SAAA4gB,GAAA,kBAAAA,GAAA,SAAA7R,OAAA,qBAAA6R,EACA,QAAA9gB,EAAA0J,GACA,GAAAO,GAAAsuB,EAAAivC,EAAAxnE,IAAA4gB,KAAA/T,EAAA5C,GAAA4W,GAAAhU,EAAA5C,GAAAsuB,EAAA7X,KAAAI,OACA,UAAAA,EAAA,IAAA7W,IAAA4C,KAAA5C,GAAA4W,GAAAhU,EAAA5C,GAAAsuB,EAAA7X,KAAA,KAGA,OAAAzb,MAZA,OAAAjF,EAAA0J,GAAA,IAAAO,GAAAsuB,EAAAivC,EAAAxnE,IAAA4gB,QAAA3W,EAAAvE,GAAAmH,EAAA5C,GAAAsuB,EAAA7X,OAAA,MAAAzW,KAcA8E,KAAA,WACA,GAAAA,MAAiBlC,EAAA5H,KAAA4H,CACjB,QAAA5C,KAAA4C,GAAAkC,EAAA9E,GAAA4C,EAAA5C,GAAAsC,OACA,WAAA+T,IAAAvR,IAEAxP,KAAA,SAAAqhB,EAAAtM,GACA,IAAA5K,EAAA6G,UAAArQ,OAAA,YAAAwJ,GAAAO,EAAA+uB,EAAA,GAAAzvB,OAAAG,GAAA1J,EAAA,EAAkFA,EAAA0J,IAAO1J,EAAAg5B,EAAAh5B,GAAAuQ,UAAAvQ,EAAA,EACzF,KAAAiF,KAAA4H,EAAAvN,eAAAshB,GAAA,SAAA3R,OAAA,iBAAA2R,EACA,KAAA3W,EAAAhF,KAAA4H,EAAA+T,GAAA5gB,EAAA,EAAA0J,EAAAO,EAAA/J,OAA+CF,EAAA0J,IAAO1J,EAAAiK,EAAAjK,GAAAyC,MAAAwN,MAAAqE,EAAA0kB,IAEtD/oB,MAAA,SAAA2Q,EAAAtM,EAAA0kB,GACA,IAAA/zB,KAAA4H,EAAAvN,eAAAshB,GAAA,SAAA3R,OAAA,iBAAA2R,EACA,QAAA3W,GAAAhF,KAAA4H,EAAA+T,GAAA5gB,EAAA,EAAA0J,EAAAO,EAAA/J,OAAmDF,EAAA0J,IAAO1J,EAAAiK,EAAAjK,GAAAyC,MAAAwN,MAAAqE,EAAA0kB,IAoD1D,IAkUA7V,IACAO,GAnUA+jD,GAAA,SAAAC,GAIA,QAAAlpD,GAAAnc,EAAAwF,GACA,GAAA8/D,GAAAzmD,EAAA/e,EAAAylE,EAAAvlE,EAAA,SAAAkf,EAAAvhB,GACA,MAAA2nE,KAAApmD,EAAAvhB,EAAA,IACAkhB,EAAAK,OAAAomD,EAAA9/D,EAAAyZ,GAAAC,EAAA1Z,GAAAoZ,GAAAM,MAGA,OADApf,GAAA+e,UACA/e,EAGA,QAAAylE,GAAAvlE,EAAAwF,GAUA,QAAAggE,KACA,GAAA97C,GAAA+gB,EAAA,MAAAg7B,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CAGA,IAAAj4D,GAAAvC,EAAAue,CACA,SAAA1pB,EAAA2lB,WAAAxa,GAAA,CAEA,IADA,GAAAxN,GAAAwN,EACAxN,IAAA8sC,GACA,QAAAzqC,EAAA2lB,WAAAhoB,GAAA,CACA,QAAAqC,EAAA2lB,WAAAhoB,EAAA,WACAA,EAWA,MARA+rB,GAAA/rB,EAAA,EACA+P,EAAA1N,EAAA2lB,WAAAhoB,EAAA,GACA,KAAA+P,GACAg4D,GAAA,EACA,KAAA1lE,EAAA2lB,WAAAhoB,EAAA,MAAA+rB,GACS,KAAAhc,IACTg4D,GAAA,GAEA1lE,EAAAkK,MAAAiB,EAAA,EAAAxN,GAAAivB,QAAA,WAIA,KAAAlD,EAAA+gB,GAAA,CACA,GAAApxB,GAAA,CAEA,IADA3L,EAAA1N,EAAA2lB,WAAA+D,KACA,KAAAhc,EAAAg4D,GAAA,MACA,SAAAh4D,EAA4Bg4D,GAAA,EAAY,KAAA1lE,EAAA2lB,WAAA+D,WAAArQ,OACxC,IAAA3L,IAAAk4D,EAAA,QACA,OAAA5lE,GAAAkK,MAAAiB,EAAAue,EAAArQ,GAIA,MAAArZ,GAAAkK,MAAAiB,GAGA,IAhDA,GAMAvD,GACA89D,EAPAC,KACAF,KACA3lE,KACA2qC,EAAAzqC,EAAAnC,OACA6rB,EAAA,EACAriB,EAAA,GA2CAO,EAAA49D,OAAAC,GAAA,CAEA,IADA,GAAAjhE,MACAoD,IAAA+9D,GAAA/9D,IAAA69D,GACAjhE,EAAAW,KAAAyC,GACAA,EAAA49D,GAEAhgE,IAAA,OAAAhB,EAAAgB,EAAAhB,EAAA6C,OACAvH,EAAAqF,KAAAX,GAGA,MAAA1E,GAGA,QAAAmW,GAAAnW,EAAA+e,GAEA,MADA,OAAAA,MAAAM,GAAArf,KACA+e,EAAA9X,IAAA8+D,GAAAzoD,KAAAioD,IAAA1mD,OAAA7e,EAAAiH,IAAA,SAAAmY,GACA,MAAAL,GAAA9X,IAAA,SAAAuY,GACA,MAAAumD,GAAA3mD,EAAAI,MACOlC,KAAAioD,MACFjoD,KAAA,MAGL,QAAA0oD,GAAAhmE,GACA,MAAAA,GAAAiH,IAAAg/D,GAAA3oD,KAAA,MAGA,QAAA2oD,GAAA7mD,GACA,MAAAA,GAAAnY,IAAA8+D,GAAAzoD,KAAAioD,GAGA,QAAAQ,GAAA7lE,GACA,aAAAA,EAAA,GACAgmE,EAAA/gE,KAAAjF,GAAA,QAAAA,EAAA4sB,QAAA,gBACA5sB,EA9FA,GAAAgmE,GAAA,GAAAj5C,QAAA,KAAAs4C,EAAA,OACAO,EAAAP,EAAA1/C,WAAA,EAgGA,QACAxJ,QACAopD,YACAtvD,SACA6vD,eAIAG,GAAAb,GAAA,KAEAc,GAAAD,GAAA9pD,MACAgqD,GAAAF,GAAAV,UACAa,GAAAH,GAAAhwD,OACAowD,GAAAJ,GAAAH,WAEAQ,GAAAlB,GAAA,MAEAmB,GAAAD,GAAAnqD,MACAqqD,GAAAF,GAAAf,UACAkB,GAAAH,GAAArwD,OACAywD,GAAAJ,GAAAR,WAEAa,GAAA,SAAAC,EAAAnoD,GAqBA,QAAAooD,GAAAz/D,GACA,GAAAo5C,GAAAsmB,EAAAtnD,EAAAsnD,MACA,KAAAA,GAAArnD,GAAAD,IACAsnD,GAAA,KAAAA,EAAA,KACA,MAAAA,EAAA,CACA,GAAAnnD,EACA,IACA6gC,EAAA7gC,EAAAziB,KAAAypE,EAAAnnD,GACS,MAAAhS,GAET,WADAioB,GAAAv4B,KAAA,QAAAypE,EAAAn5D,OAIAgzC,GAAAhhC,CAEAiW,GAAAv4B,KAAA,OAAAypE,EAAAnmB,OAEA/qB,GAAAv4B,KAAA,QAAAypE,EAAAv/D,GArCA,GAAAu/D,GAEAI,EAKApnD,EACAD,EAPA+V,EAAAzX,GAAA,wCAEAgpD,EAAAngE,IACA2Y,EAAA,GAAAynD,gBACAC,EAAA,KACAC,EAAA,KAGAlmD,EAAA,CAsHA,IAnHA,mBAAAmmD,iBACA,mBAAA5nD,KACA,oBAAAva,KAAA2hE,KAAApnD,EAAA,GAAA4nD,iBAEA,UAAA5nD,GACAA,EAAA6nD,OAAA7nD,EAAA8nD,QAAA9nD,EAAA+nD,UAAAV,EACArnD,EAAAgoD,mBAAA,SAAApgE,GAA8CoY,EAAAioD,WAAA,GAAAZ,EAAAz/D,IAuB9CoY,EAAAkoD,WAAA,SAAAl6D,GACAioB,EAAAv4B,KAAA,WAAAypE,EAAAn5D,IAGAm5D,GACAgB,OAAA,SAAAtpD,EAAAje,GAEA,MADAie,MAAA,IAAAlI,cACAjI,UAAArQ,OAAA,EAAAmpE,EAAA3jE,IAAAgb,IACA,MAAAje,EAAA4mE,EAAApnE,OAAAye,GACA2oD,EAAA//D,IAAAoX,EAAAje,EAAA,IACAumE,IAIAI,SAAA,SAAA3mE,GACA,MAAA8N,WAAArQ,QACAkpE,EAAA,MAAA3mE,EAAA,KAAAA,EAAA,GACAumE,GAFAI,GAOArnD,aAAA,SAAAtf,GACA,MAAA8N,WAAArQ,QACA6hB,EAAAtf,EACAumE,GAFAjnD,GAKAuB,QAAA,SAAA7gB,GACA,MAAA8N,WAAArQ,QACAojB,GAAA7gB,EACAumE,GAFA1lD,GAKAimD,KAAA,SAAA9mE,GACA,MAAA8N,WAAArQ,OAAA,EAAAqpE,KAAA,MAAA9mE,EAAA,KAAAA,EAAA,GAAAumE,IAGAQ,SAAA,SAAA/mE,GACA,MAAA8N,WAAArQ,OAAA,EAAAspE,KAAA,MAAA/mE,EAAA,KAAAA,EAAA,GAAAumE,IAKAhnD,SAAA,SAAAvf,GAEA,MADAuf,GAAAvf,EACAumE,GAIAtjE,IAAA,SAAAjE,EAAAqf,GACA,MAAAkoD,GAAAiB,KAAA,MAAAxoE,EAAAqf,IAIAopD,KAAA,SAAAzoE,EAAAqf,GACA,MAAAkoD,GAAAiB,KAAA,OAAAxoE,EAAAqf,IAIAmpD,KAAA,SAAAE,EAAA1oE,EAAAqf,GAYA,MAXAe,GAAAuoD,KAAAD,EAAAlB,GAAA,EAAAM,EAAAC,GACA,MAAAJ,GAAAC,EAAAl4C,IAAA,WAAAk4C,EAAA//D,IAAA,SAAA8/D,EAAA,QACAvnD,EAAAwoD,kBAAAhB,EAAAhgE,KAAA,SAAA5G,EAAAie,GAAoEmB,EAAAwoD,iBAAA3pD,EAAAje,KACpE,MAAA2mE,GAAAvnD,EAAAyoD,kBAAAzoD,EAAAyoD,iBAAAlB,GACA,MAAArnD,IAAAF,EAAAE,gBACAuB,EAAA,IAAAzB,EAAAyB,WACA,MAAAxC,GAAA,kBAAArf,KAAAqf,EAAArf,IAAA,MACA,MAAAqf,GAAA,IAAAA,EAAA5gB,SAAA4gB,EAAAc,GAAAd,IACA,MAAAA,GAAAkoD,EAAAxwC,GAAA,QAAA1X,GAAA0X,GAAA,gBAAA3W,GAAoFf,EAAA,KAAAe,KACpFiW,EAAAv4B,KAAA,aAAAypE,EAAAnnD,GACAA,EAAAooD,KAAA,MAAAxoE,EAAA,KAAAA,GACAunE,GAGAl5D,MAAA,WAEA,MADA+R,GAAA/R,QACAk5D,GAGAxwC,GAAA,WACA,GAAA/1B,GAAAq1B,EAAAU,GAAAvoB,MAAA6nB,EAAAvnB,UACA,OAAA9N,KAAAq1B,EAAAkxC,EAAAvmE,IAIA,MAAAqe,EAAA,CACA,qBAAAA,GAAA,SAAA7R,OAAA,qBAAA6R,EACA,OAAAkoD,GAAAtjE,IAAAob,GAGA,MAAAkoD,IAgBApoD,GAAA,SAAA2pD,EAAAvoD,GACA,gBAAAinD,EAAAnoD,GACA,GAAA3Q,GAAA64D,GAAAC,GAAAG,SAAAmB,GAAAvoD,WACA,UAAAlB,EAAA,CACA,qBAAAA,GAAA,SAAA7R,OAAA,qBAAA6R,EACA,OAAA3Q,GAAAzK,IAAAob,GAEA,MAAA3Q,KAIApO,GAAA6e,GAAA,qBAAAiB,GACA,MAAA1e,UAAAqnE,cAAAC,yBAAA5oD,EAAAI,gBAGAyoD,GAAA9pD,GAAA,4BAAAiB,GACA,MAAAT,MAAA5C,MAAAqD,EAAAI,gBAGA5f,GAAAue,GAAA,sBAAAiB,GACA,MAAAA,GAAAI,eAGA0oD,GAAA/pD,GAAA,2BAAAiB,GACA,GAAA8oD,GAAA9oD,EAAA+oD,WACA,KAAAD,EAAA,SAAA17D,OAAA,cACA,OAAA07D,KAGAE,GAAA,SAAAN,EAAA/rD,GACA,gBAAAyqD,EAAA1nD,EAAAT,GACAvQ,UAAArQ,OAAA,IAAA4gB,EAAAS,IAAA,KACA,IAAApR,GAAA64D,GAAAC,GAAAG,SAAAmB,EAGA,OAFAp6D,GAAAoR,IAAA,SAAA1U,GAAyB,MAAA0D,WAAArQ,OAAAiQ,EAAA6R,SAAAE,GAAA1D,EAAA+C,EAAA1U,IAAA0U,GACzBpR,EAAAoR,OACAT,EAAA3Q,EAAAzK,IAAAob,GAAA3Q,IAUA26D,GAAAD,GAAA,WAAAtC,IAEAwC,GAAAF,GAAA,4BAAAjC,IAEA1lD,GAAA,EACAI,GAAA,EACAQ,GAAA,EACAL,GAAA,IAGAJ,GAAA,EACAhB,GAAA,EACAI,GAAA,EACAD,GAAA,gBAAAwoD,0BAAA5oD,IAAA4oD,YAAA1mD,KACAhC,GAAA,kBAAA2oD,6CAAA,SAAApjE,GAAkGgc,WAAAhc,EAAA,IAgBlG6a,IAAArjB,UAAAwjB,GAAAxjB,WACAwvD,YAAAnsC,GACAM,QAAA,SAAAlC,EAAAgC,EAAAC,GACA,qBAAAjC,GAAA,SAAA3c,WAAA,6BACA4e,IAAA,MAAAA,EAAAX,MAAAW,IAAA,MAAAD,EAAA,GAAAA,GACA7d,KAAA2d,OAAAc,KAAAze,OACAye,MAAAd,MAAA3d,KACAke,GAAAle,KACAye,GAAAze,MAEAA,KAAAkK,MAAA2R,EACA7b,KAAA0d,MAAAI,EACAY,MAEAzb,KAAA,WACAjD,KAAAkK,QACAlK,KAAAkK,MAAA,KACAlK,KAAA0d,MAAAtU,IACAsV,OAmEA,IAAAob,IAAA,SAAAje,EAAAgC,EAAAC,GACA,GAAA9Y,GAAA,GAAAyY,GAMA,OALAI,GAAA,MAAAA,EAAA,GAAAA,EACA7Y,EAAA+Y,QAAA,SAAA2b,GACA10B,EAAA/B,OACA4Y,EAAA6d,EAAA7b,IACGA,EAAAC,GACH9Y,GAGAihE,GAAA,SAAApqD,EAAAgC,EAAAC,GACA,GAAA9Y,GAAA,GAAAyY,IAAAyoD,EAAAroD,CACA,cAAAA,GAAA7Y,EAAA+Y,QAAAlC,EAAAgC,EAAAC,GAAA9Y,IACA6Y,KAAAC,EAAA,MAAAA,EAAAX,MAAAW,EACA9Y,EAAA+Y,QAAA,QAAAkc,GAAAP,GACAA,GAAAwsC,EACAlhE,EAAA+Y,QAAAkc,EAAAisC,GAAAroD,EAAAC,GACAjC,EAAA6d,IACG7b,EAAAC,GACH9Y,IAGA8a,GAAA,GAAAT,MACAU,GAAA,GAAAV,MA6DA8mD,GAAAnnD,GAAA,aAEC,SAAAI,EAAAM,GACDN,EAAAS,SAAAT,EAAAM,IACC,SAAA1c,EAAA+H,GACD,MAAAA,GAAA/H,GAIAmjE,IAAAnmD,MAAA,SAAAvJ,GAEA,MADAA,GAAArT,KAAAK,MAAAgT,GACAwJ,SAAAxJ,MAAA,EACAA,EAAA,EACAuI,GAAA,SAAAI,GACAA,EAAAS,QAAAzc,KAAAK,MAAA2b,EAAA3I,OACG,SAAA2I,EAAAM,GACHN,EAAAS,SAAAT,EAAAM,EAAAjJ,IACG,SAAAzT,EAAA+H,GACH,OAAAA,EAAA/H,GAAAyT,IANA0vD,GADA,KAWA,IAAAC,IAAAD,GAAAxmD,MAEA0mD,GAAA,IACA7lD,GAAA,IACA8lD,GAAA,KACAC,GAAA,MACA9lD,GAAA,OAEA+lD,GAAAxnD,GAAA,SAAAI,GACAA,EAAAS,QAAAzc,KAAAK,MAAA2b,EAAAinD,SACC,SAAAjnD,EAAAM,GACDN,EAAAS,SAAAT,EAAAM,EAAA2mD,KACC,SAAArjE,EAAA+H,GACD,OAAAA,EAAA/H,GAAAqjE,IACC,SAAAjnD,GACD,MAAAA,GAAA8L,kBAGAu7C,GAAAD,GAAA7mD,MAEA+mD,GAAA1nD,GAAA,SAAAI,GACAA,EAAAS,QAAAzc,KAAAK,MAAA2b,EAAAoB,SACC,SAAApB,EAAAM,GACDN,EAAAS,SAAAT,EAAAM,EAAAc,KACC,SAAAxd,EAAA+H,GACD,OAAAA,EAAA/H,GAAAwd,IACC,SAAApB,GACD,MAAAA,GAAAqL,eAGAk8C,GAAAD,GAAA/mD,MAEAinD,GAAA5nD,GAAA,SAAAI,GACA,GAAAK,GAAAL,EAAAmB,oBAAAC,GAAA8lD,EACA7mD,GAAA,IAAAA,GAAA6mD,IACAlnD,EAAAS,QAAAzc,KAAAK,QAAA2b,EAAAK,GAAA6mD,OAAA7mD,IACC,SAAAL,EAAAM,GACDN,EAAAS,SAAAT,EAAAM,EAAA4mD,KACC,SAAAtjE,EAAA+H,GACD,OAAAA,EAAA/H,GAAAsjE,IACC,SAAAlnD,GACD,MAAAA,GAAAsG,aAGAmhD,GAAAD,GAAAjnD,MAEA2K,GAAAtL,GAAA,SAAAI,GACAA,EAAAkB,SAAA,UACC,SAAAlB,EAAAM,GACDN,EAAAe,QAAAf,EAAAgB,UAAAV,IACC,SAAA1c,EAAA+H,GACD,OAAAA,EAAA/H,GAAA+H,EAAAwV,oBAAAvd,EAAAud,qBAAAC,IAAA+lD,IACC,SAAAnnD,GACD,MAAAA,GAAAgB,UAAA,IAGAgG,GAAAkE,GAAA3K,MAaAgL,GAAAzK,GAAA,GACA0K,GAAA1K,GAAA,GACA4mD,GAAA5mD,GAAA,GACA6mD,GAAA7mD,GAAA,GACA8mD,GAAA9mD,GAAA,GACA+mD,GAAA/mD,GAAA,GACAgnD,GAAAhnD,GAAA,GAEAinD,GAAAx8C,GAAAhL,MACAynD,GAAAx8C,GAAAjL,MACA0nD,GAAAP,GAAAnnD,MACA2nD,GAAAP,GAAApnD,MACA4nD,GAAAP,GAAArnD,MACA6nD,GAAAP,GAAAtnD,MACA8nD,GAAAP,GAAAvnD,MAEA+nD,GAAA1oD,GAAA,SAAAI,GACAA,EAAAe,QAAA,GACAf,EAAAkB,SAAA,UACC,SAAAlB,EAAAM,GACDN,EAAAuoD,SAAAvoD,EAAAiG,WAAA3F,IACC,SAAA1c,EAAA+H,GACD,MAAAA,GAAAsa,WAAAriB,EAAAqiB,WAAA,IAAAta,EAAA8f,cAAA7nB,EAAA6nB,gBACC,SAAAzL,GACD,MAAAA,GAAAiG,aAGAiB,GAAAohD,GAAA/nD,MAEA4K,GAAAvL,GAAA,SAAAI,GACAA,EAAAuoD,SAAA,KACAvoD,EAAAkB,SAAA,UACC,SAAAlB,EAAAM,GACDN,EAAAgD,YAAAhD,EAAAyL,cAAAnL,IACC,SAAA1c,EAAA+H,GACD,MAAAA,GAAA8f,cAAA7nB,EAAA6nB,eACC,SAAAzL,GACD,MAAAA,GAAAyL,eAIAN,IAAAvK,MAAA,SAAAvJ,GACA,MAAAwJ,UAAAxJ,EAAArT,KAAAK,MAAAgT,OAAA,EAAAuI,GAAA,SAAAI,GACAA,EAAAgD,YAAAhf,KAAAK,MAAA2b,EAAAyL,cAAApU,MACA2I,EAAAuoD,SAAA,KACAvoD,EAAAkB,SAAA,UACG,SAAAlB,EAAAM,GACHN,EAAAgD,YAAAhD,EAAAyL,cAAAnL,EAAAjJ,KALA,KASA,IAAAmxD,IAAAr9C,GAAA5K,MAEAkoD,GAAA7oD,GAAA,SAAAI,GACAA,EAAA0oD,cAAA,MACC,SAAA1oD,EAAAM,GACDN,EAAAS,SAAAT,EAAAM,EAAAc,KACC,SAAAxd,EAAA+H,GACD,OAAAA,EAAA/H,GAAAwd,IACC,SAAApB,GACD,MAAAA,GAAA6L,kBAGA88C,GAAAF,GAAAloD,MAEAqoD,GAAAhpD,GAAA,SAAAI,GACAA,EAAA6oD,cAAA,QACC,SAAA7oD,EAAAM,GACDN,EAAAS,SAAAT,EAAAM,EAAA4mD,KACC,SAAAtjE,EAAA+H,GACD,OAAAA,EAAA/H,GAAAsjE,IACC,SAAAlnD,GACD,MAAAA,GAAA6G,gBAGAiiD,GAAAF,GAAAroD,MAEAmL,GAAA9L,GAAA,SAAAI,GACAA,EAAA0B,YAAA,UACC,SAAA1B,EAAAM,GACDN,EAAAuB,WAAAvB,EAAAwB,aAAAlB,IACC,SAAA1c,EAAA+H,GACD,OAAAA,EAAA/H,GAAAujE,IACC,SAAAnnD,GACD,MAAAA,GAAAwB,aAAA,IAGAunD,GAAAr9C,GAAAnL,MAaAwL,GAAAzK,GAAA,GACA0K,GAAA1K,GAAA,GACA0nD,GAAA1nD,GAAA,GACA2nD,GAAA3nD,GAAA,GACA4nD,GAAA5nD,GAAA,GACA6nD,GAAA7nD,GAAA,GACA8nD,GAAA9nD,GAAA,GAEA+nD,GAAAt9C,GAAAxL,MACA+oD,GAAAt9C,GAAAzL,MACAgpD,GAAAP,GAAAzoD,MACAipD,GAAAP,GAAA1oD,MACAkpD,GAAAP,GAAA3oD,MACAmpD,GAAAP,GAAA5oD,MACAopD,GAAAP,GAAA7oD,MAEAqpD,GAAAhqD,GAAA,SAAAI,GACAA,EAAAuB,WAAA,GACAvB,EAAA0B,YAAA,UACC,SAAA1B,EAAAM,GACDN,EAAA6pD,YAAA7pD,EAAA0G,cAAApG,IACC,SAAA1c,EAAA+H,GACD,MAAAA,GAAA+a,cAAA9iB,EAAA8iB,cAAA,IAAA/a,EAAAsgB,iBAAAroB,EAAAqoB,mBACC,SAAAjM,GACD,MAAAA,GAAA0G,gBAGAojD,GAAAF,GAAArpD,MAEAoL,GAAA/L,GAAA,SAAAI,GACAA,EAAA6pD,YAAA,KACA7pD,EAAA0B,YAAA,UACC,SAAA1B,EAAAM,GACDN,EAAAmD,eAAAnD,EAAAiM,iBAAA3L,IACC,SAAA1c,EAAA+H,GACD,MAAAA,GAAAsgB,iBAAAroB,EAAAqoB,kBACC,SAAAjM,GACD,MAAAA,GAAAiM,kBAIAN,IAAA/K,MAAA,SAAAvJ,GACA,MAAAwJ,UAAAxJ,EAAArT,KAAAK,MAAAgT,OAAA,EAAAuI,GAAA,SAAAI,GACAA,EAAAmD,eAAAnf,KAAAK,MAAA2b,EAAAiM,iBAAA5U,MACA2I,EAAA6pD,YAAA,KACA7pD,EAAA0B,YAAA,UACG,SAAA1B,EAAAM,GACHN,EAAAmD,eAAAnD,EAAAiM,iBAAA3L,EAAAjJ,KALA,KASA,IAuDA0yD,IAvDAC,GAAAr+C,GAAApL,MAKA0pD,GAAA,SAAAxsE,EAAA6R,GACA,IAAA3T,GAAA8B,EAAA6R,EAAA7R,EAAAysE,cAAA56D,EAAA,GAAA7R,EAAAysE,iBAAA5tD,QAAA,mBACA,IAAA3gB,GAAAwuE,EAAA1sE,EAAAyK,MAAA,EAAAvM,EAIA,QACAwuE,EAAAtuE,OAAA,EAAAsuE,EAAA,GAAAA,EAAAjiE,MAAA,GAAAiiE,GACA1sE,EAAAyK,MAAAvM,EAAA,KAIAyuE,GAAA,SAAA3sE,GACA,MAAAA,GAAAwsE,GAAAjmE,KAAAC,IAAAxG,QAAA,GAAA+M,KAGA6/D,GAAA,SAAAC,EAAAC,GACA,gBAAAnsE,EAAA8jB,GAOA,IANA,GAAAvmB,GAAAyC,EAAAvC,OACA+J,KACAuD,EAAA,EACA+L,EAAAo1D,EAAA,GACAzuE,EAAA,EAEAF,EAAA,GAAAuZ,EAAA,IACArZ,EAAAqZ,EAAA,EAAAgN,IAAAhN,EAAAlR,KAAAE,IAAA,EAAAge,EAAArmB,IACA+J,EAAAzC,KAAA/E,EAAAosE,UAAA7uE,GAAAuZ,EAAAvZ,EAAAuZ,OACArZ,GAAAqZ,EAAA,GAAAgN,KACAhN,EAAAo1D,EAAAnhE,KAAA,GAAAmhE,EAAAzuE,OAGA,OAAA+J,GAAAqnB,UAAA7R,KAAAmvD,KAIAE,GAAA,SAAAhtE,EAAA6R,GACA7R,IAAAitE,YAAAp7D,EAEAq7D,GAAA,OAAA7kC,GAAAzgC,EAAA5H,EAAA5B,OAAAF,EAAA,EAAAyqC,GAAA,EAAiDzqC,EAAA0J,IAAO1J,EACxD,OAAA8B,EAAA9B,IACA,QAAAyqC,EAAAN,EAAAnqC,CAA4B,MAC5B,aAAAyqC,MAAAzqC,GAAqCmqC,EAAAnqC,CAAQ,MAC7C,cAAAgvE,EACA,SAAAvkC,EAAA,IAAAA,EAAA,GAIA,MAAAA,GAAA,EAAA3oC,EAAAyK,MAAA,EAAAk+B,GAAA3oC,EAAAyK,MAAA49B,EAAA,GAAAroC,GAKAmtE,GAAA,SAAAntE,EAAA6R,GACA,GAAA7L,GAAAwmE,GAAAxsE,EAAA6R,EACA,KAAA7L,EAAA,MAAAhG,GAAA,EACA,IAAA0sE,GAAA1mE,EAAA,GACA2sB,EAAA3sB,EAAA,GACA9H,EAAAy0B,GAAA25C,GAAA,EAAA/lE,KAAAE,KAAA,EAAAF,KAAAuO,IAAA,EAAAvO,KAAAK,MAAA+rB,EAAA,QACA/qB,EAAA8kE,EAAAtuE,MACA,OAAAF,KAAA0J,EAAA8kE,EACAxuE,EAAA0J,EAAA8kE,EAAA,GAAAjlE,OAAAvJ,EAAA0J,EAAA,GAAA+V,KAAA,KACAzf,EAAA,EAAAwuE,EAAAjiE,MAAA,EAAAvM,GAAA,IAAAwuE,EAAAjiE,MAAAvM,GACA,QAAAuJ,OAAA,EAAAvJ,GAAAyf,KAAA,KAAA6uD,GAAAxsE,EAAAuG,KAAAE,IAAA,EAAAoL,EAAA3T,EAAA,QAGAkvE,GAAA,SAAAptE,EAAA6R,GACA,GAAA7L,GAAAwmE,GAAAxsE,EAAA6R,EACA,KAAA7L,EAAA,MAAAhG,GAAA,EACA,IAAA0sE,GAAA1mE,EAAA,GACA2sB,EAAA3sB,EAAA,EACA,OAAA2sB,GAAA,UAAAlrB,QAAAkrB,GAAAhV,KAAA,KAAA+uD,EACAA,EAAAtuE,OAAAu0B,EAAA,EAAA+5C,EAAAjiE,MAAA,EAAAkoB,EAAA,OAAA+5C,EAAAjiE,MAAAkoB,EAAA,GACA+5C,EAAA,GAAAjlE,OAAAkrB,EAAA+5C,EAAAtuE,OAAA,GAAAuf,KAAA,MAGAiH,IACAyoD,GAAAL,GACAhiD,IAAA,SAAAhrB,EAAA6R,GAAuB,WAAA7R,GAAAstE,QAAAz7D,IACvB7M,EAAA,SAAAhF,GAAoB,MAAAuG,MAAAiU,MAAAxa,GAAA+sB,SAAA,IACpB9e,EAAA,SAAAjO,GAAoB,MAAAA,GAAA,IACpBgG,EAAA,SAAAhG,GAAoB,MAAAuG,MAAAiU,MAAAxa,GAAA+sB,SAAA,KACpBhf,EAAA,SAAA/N,EAAA6R,GAAuB,MAAA7R,GAAAysE,cAAA56D,IACvB9L,EAAA,SAAA/F,EAAA6R,GAAuB,MAAA7R,GAAAstE,QAAAz7D,IACvB4F,EAAA,SAAAzX,EAAA6R,GAAuB,MAAA7R,GAAAitE,YAAAp7D,IACvBlK,EAAA,SAAA3H,GAAoB,MAAAuG,MAAAiU,MAAAxa,GAAA+sB,SAAA,IACpBlb,EAAA,SAAA7R,EAAA6R,GAAuB,MAAAu7D,IAAA,IAAAptE,EAAA6R,IACvBxD,EAAA++D,GACAl3D,EAAAi3D,GACAxiD,EAAA,SAAA3qB,GAAoB,MAAAuG,MAAAiU,MAAAxa,GAAA+sB,SAAA,IAAAwgD,eACpBvtE,EAAA,SAAAA,GAAoB,MAAAuG,MAAAiU,MAAAxa,GAAA+sB,SAAA,MAIpB1I,GAAA,wEAEAmpD,GAAA,SAAArpD,GACA,UAAAD,IAAAC,GAqCAD,IAAA3mB,UAAAwvB,SAAA,WACA,MAAA5pB,MAAAmhB,KACAnhB,KAAAohB,MACAphB,KAAAqR,KACArR,KAAAqhB,QACArhB,KAAA6X,KAAA,SACA,MAAA7X,KAAAshB,MAAA,GAAAle,KAAAE,IAAA,IAAAtD,KAAAshB,SACAthB,KAAAuhB,MAAA,SACA,MAAAvhB,KAAAwhB,UAAA,OAAApe,KAAAE,IAAA,IAAAtD,KAAAwhB,YACAxhB,KAAA2b,KAGA,IAwIAiG,IAxIA0oD,IAAA,oEAMAzoD,GAAA,SAAAa,GAKA,QAAAC,GAAA3B,GAgCA,QAAA3N,GAAA7V,GACA,GAEAzC,GAAA0J,EAAAqG,EAFAy/D,EAAA5gB,EACA6gB,EAAAC,CAGA,UAAA9uD,EACA6uD,EAAAE,EAAAltE,GAAAgtE,EACAhtE,EAAA,OACO,CACPA,IAIA,IAAAmtE,IAAAntE,EAAA,KAAAA,EAAA,KAAAA,IAAA,KAOA,IAJAA,EAAAktE,EAAAltE,EAAAgkB,GAIAmpD,EAGA,IAFA5vE,GAAA,EAAA0J,EAAAjH,EAAAvC,OACA0vE,GAAA,IACA5vE,EAAA0J,GACA,GAAAqG,EAAAtN,EAAAulB,WAAAhoB,GAAA,GAAA+P,KAAA,IACA,MAAA6Q,GAAA,GAAA7Q,KAAA,KACA,MAAA6Q,GAAA,GAAA7Q,KAAA,IACA6/D,GAAA,CACA,OAWA,GALAJ,GAAAI,EAAA,MAAAt5D,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAk5D,EACAC,KAAA,MAAA7uD,EAAA2uD,GAAA,EAAAnB,GAAA,QAAAwB,GAAA,MAAAt5D,EAAA,QAIAu5D,EAEA,IADA7vE,GAAA,EAAA0J,EAAAjH,EAAAvC,SACAF,EAAA0J,GACA,GAAAqG,EAAAtN,EAAAulB,WAAAhoB,GAAA,GAAA+P,KAAA,IACA0/D,GAAA,KAAA1/D,EAAA+/D,EAAArtE,EAAA8J,MAAAvM,EAAA,GAAAyC,EAAA8J,MAAAvM,IAAAyvE,EACAhtE,IAAA8J,MAAA,EAAAvM,EACA,QAOAwmB,IAAA1J,IAAAra,EAAAm1B,EAAAn1B,EAAA4L,KAGA,IAAAnO,GAAAsvE,EAAAtvE,OAAAuC,EAAAvC,OAAAuvE,EAAAvvE,OACA4xB,EAAA5xB,EAAAqmB,EAAA,GAAAhd,OAAAgd,EAAArmB,EAAA,GAAAuf,KAAA2G,GAAA,EAMA,QAHAI,GAAA1J,IAAAra,EAAAm1B,EAAA9F,EAAArvB,EAAAqvB,EAAA5xB,OAAAqmB,EAAAkpD,EAAAvvE,OAAAmO,KAAAyjB,EAAA,IAGAzL,GACA,cAAAmpD,GAAA/sE,EAAAgtE,EAAA39C,CACA,eAAA09C,GAAA19C,EAAArvB,EAAAgtE,CACA,eAAA39C,GAAAvlB,MAAA,EAAArM,EAAA4xB,EAAA5xB,QAAA,GAAAsvE,EAAA/sE,EAAAgtE,EAAA39C,EAAAvlB,MAAArM,GAEA,MAAA4xB,GAAA09C,EAAA/sE,EAAAgtE,EAlGAxpD,EAAAqpD,GAAArpD,EAEA,IAAAG,GAAAH,EAAAG,KACAC,EAAAJ,EAAAI,MACA/P,EAAA2P,EAAA3P,KACAgQ,EAAAL,EAAAK,OACAxJ,EAAAmJ,EAAAnJ,KACAyJ,EAAAN,EAAAM,MACAC,EAAAP,EAAAO,MACAC,EAAAR,EAAAQ,UACA7F,EAAAqF,EAAArF,KAIAguC,EAAA,MAAAtoC,EAAAypD,EAAA,SAAAzpD,GAAA,SAAAhf,KAAAsZ,GAAA,IAAAA,EAAApI,cAAA,GACAk3D,EAAA,MAAAppD,EAAAypD,EAAA,UAAAzoE,KAAAsZ,GAAA,OAKA+uD,EAAAjpD,GAAA9F,GACAivD,GAAAjvD,GAAA,aAAAtZ,KAAAsZ,EAoFA,OA9EA6F,GAAA,MAAAA,EAAA7F,EAAA,KACA,SAAAtZ,KAAAsZ,GAAAvY,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,GAAA6P,IACApe,KAAAE,IAAA,EAAAF,KAAAuO,IAAA,GAAA6P,IAwEAnO,EAAAuW,SAAA,WACA,MAAA5I,GAAA,IAGA3N,EAGA,QAAAyO,GAAAd,EAAAxjB,GACA,GAAAoF,GAAA+f,GAAA3B,EAAAqpD,GAAArpD,KAAArF,KAAA,IAAAqF,IACApW,EAAA,EAAAxH,KAAAE,KAAA,EAAAF,KAAAuO,IAAA,EAAAvO,KAAAK,MAAA+lE,GAAAhsE,GAAA,KACAiZ,EAAArT,KAAAI,IAAA,IAAAoH,GACA++C,EAAA2gB,GAAA,EAAA1/D,EAAA,EACA,iBAAApN,GACA,MAAAoF,GAAA6T,EAAAjZ,GAAAmsD,GAvHA,GAAAh3B,GAAAjQ,EAAAgnD,UAAAhnD,EAAAinD,UAAAF,GAAA/mD,EAAAgnD,SAAAhnD,EAAAinD,WAAAjoD,GACAopD,EAAApoD,EAAAooD,SACAD,EAAAnoD,EAAAmoD,OAyHA,QACAx3D,OAAAsP,EACAb,gBAQAH,KACAkpD,QAAA,IACAlB,UAAA,IACAD,UAAA,GACAoB,UAAA,SAUA,IA6hBAv/C,IA7hBAw/C,GAAA,SAAArrD,GACA,MAAAtc,MAAAE,IAAA,GAAAkmE,GAAApmE,KAAAC,IAAAqc,MAGAsrD,GAAA,SAAAtrD,EAAAliB,GACA,MAAA4F,MAAAE,IAAA,IAAAF,KAAAE,KAAA,EAAAF,KAAAuO,IAAA,EAAAvO,KAAAK,MAAA+lE,GAAAhsE,GAAA,KAAAgsE,GAAApmE,KAAAC,IAAAqc,MAGAurD,GAAA,SAAAvrD,EAAApc,GAEA,MADAoc,GAAAtc,KAAAC,IAAAqc,GAAApc,EAAAF,KAAAC,IAAAC,GAAAoc,EACAtc,KAAAE,IAAA,EAAAkmE,GAAAlmE,GAAAkmE,GAAA9pD,IAAA,GA4TAsD,IAAYkoD,IAAA,GAAAtjE,EAAA,IAAAlO,EAAA,KACZ0wB,GAAA,UACAC,GAAA,KACAJ,GAAA,iCA0NAqB,KACApF,SAAA,SACA9G,KAAA,aACAtB,KAAA,eACAqI,SAAA,WACAC,MAAA,wEACAC,WAAA,2CACAC,QAAA,+GACAC,aAAA,0EAYA,IAAA4kD,IAAA,wBAMAC,GAAA/rD,KAAAjlB,UAAAuxB,YACAD,GACA9xB,EAAAiwB,UAAAshD,IAOAE,IAAA,GAAAhsD,MAAA,4BACAuM,GACAhyB,EAAAkwB,SAAAqhD,IAEAG,GAAAhnE,MAAAlK,UAEAg0B,GAAAk9C,GAAAnnE,IACA8nB,GAAAq/C,GAAAhkE,MAEAykB,IAAgBtQ,KAAA,YA+IhBwR,GAAA,SAAApwB,GACA,kBACA,MAAAA,KAIAwxB,GAAA,SAAAxxB,GACA,OAAAA,GAGAqxB,IAAA,KA4GAO,GAAA,SAAAzC,EAAA9oB,EAAA8d,GACA,GAGAQ,GAHAxe,EAAAgpB,EAAA,GACA/oB,EAAA+oB,IAAA/wB,OAAA,GACAykB,EAAA3c,EAAAC,EAAAC,EAAA,MAAAC,EAAA,GAAAA,EAGA,QADA8d,EAAAqpD,GAAA,MAAArpD,EAAA,KAAAA,GACAA,EAAArF,MACA,QACA,GAAAne,GAAA4F,KAAAE,IAAAF,KAAAC,IAAAL,GAAAI,KAAAC,IAAAJ,GAEA,OADA,OAAA+d,EAAAQ,WAAAzZ,MAAAyZ,EAAAwpD,GAAAtrD,EAAAliB,MAAAwjB,EAAAQ,aACA5nB,EAAAkoB,aAAAd,EAAAxjB,EAEA,QACA,QACA,QACA,QACA,QACA,MAAAwjB,EAAAQ,WAAAzZ,MAAAyZ,EAAAypD,GAAAvrD,EAAAtc,KAAAE,IAAAF,KAAAC,IAAAL,GAAAI,KAAAC,IAAAJ,QAAA+d,EAAAQ,aAAA,MAAAR,EAAArF,MACA,MAEA,SACA,QACA,MAAAqF,EAAAQ,WAAAzZ,MAAAyZ,EAAAupD,GAAArrD,MAAAsB,EAAAQ,YAAA,SAAAR,EAAArF,OAIA,MAAA/hB,GAAAyZ,OAAA2N,IAkEA0N,GAAA,SAAA1C,EAAAnN,GACAmN,IAAA1kB,OAEA,IAIAtC,GAJAwgC,EAAA,EACAN,EAAAlZ,EAAA/wB,OAAA,EACA0N,EAAAqjB,EAAAwZ,GACA38B,EAAAmjB,EAAAkZ,EAUA,OAPAr8B,GAAAF,IACA3D,EAAAwgC,IAAAN,IAAAlgC,EACAA,EAAA2D,IAAAE,IAAA7D,GAGAgnB,EAAAwZ,GAAA3mB,EAAApb,MAAAkF,GACAqjB,EAAAkZ,GAAArmB,EAAAS,KAAAzW,GACAmjB,GA4RAqF,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,EAAAD,GACAE,GAAA,GAAAF,GACAJ,GAAA,IAAAI,GAsHA1T,GAAA,WACA,MAAAqS,IAAA5F,GAAAm9C,GAAA/8C,GAAAL,GAAAs8C,GAAAF,GAAAF,GAAAL,GAAAvsE,EAAA4xB,YAAAQ,QAAA,GAAA3M,MAAA,YAAAA,MAAA,YAGAksD,GAAA,WACA,MAAAp7C,IAAApF,GAAAi+C,GAAA79C,GAAAL,GAAAk9C,GAAAH,GAAArB,GAAAL,GAAAvsE,EAAAiwB,WAAAmC,QAAA3M,KAAAiD,IAAA,SAAAjD,KAAAiD,IAAA,YAGA3K,GAAA,SAAA5E,GACA,MAAAA,GAAAkO,MAAA,SAAsB9c,IAAA,SAAAtH,GACtB,UAAAA,KAIA2uE,GAAA7zD,GAAA,gEAEA8zD,GAAA9zD,GAAA,4HAEA+zD,GAAA/zD,GAAA,4HAEAg0D,GAAAh0D,GAAA,4HAEAi0D,GAAAxJ,GAAAxrD,GAAA,UAAAA,IAAA,WAEAi1D,GAAAzJ,GAAAxrD,IAAA,aAAAA,GAAA,YAEAk1D,GAAA1J,GAAAxrD,GAAA,aAAAA,GAAA,YAEAm1D,GAAAn1D,KAEAo1D,GAAA,SAAAhnE,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAA5B,KAAAK,MAAAuB,GACA,IAAAinE,GAAA7oE,KAAAC,IAAA2B,EAAA,GAIA,OAHA+mE,IAAAjxE,EAAA,IAAAkK,EAAA,IACA+mE,GAAAh5D,EAAA,QAAAk5D,EACAF,GAAA98D,EAAA,MAAAg9D,EACAF,GAAA,IAUAG,GAAAv6C,GAAAha,GAAA,qgDAEAw0D,GAAAx6C,GAAAha,GAAA,qgDAEAy0D,GAAAz6C,GAAAha,GAAA,qgDAEA00D,GAAA16C,GAAAha,GAAA,qgDA+BAua,GAAA,+BAEAo6C,IACA39B,IAAA,6BACAzc,SACAq6C,MAAA,+BACA7G,IAAA,uCACA8G,MAAA,iCAGAC,GAAA,SAAAhxD,GACA,GAAAkuC,GAAAluC,GAAA,GAAA1gB,EAAA4uD,EAAAjuC,QAAA,IAEA,OADA3gB,IAAA,cAAA4uD,EAAAluC,EAAAnU,MAAA,EAAAvM,MAAA0gB,IAAAnU,MAAAvM,EAAA,IACAuxE,GAAAjyE,eAAAsvD,IAA8Ct3B,MAAAi6C,GAAA3iB,GAAAr3B,MAAA7W,GAAuCA,GAmBrFixD,GAAA,SAAAjxD,GACA,GAAA2W,GAAAq6C,GAAAhxD,EACA,QAAA2W,EAAAE,MACAH,GACAL,IAAAM,IAGAI,GAAA,CAUAD,IAAAn4B,UAAAk4B,GAAAl4B,WACAwvD,YAAAr3B,GACA9xB,IAAA,SAAA+H,GAEA,IADA,GAAAywB,GAAAj5B,KAAA4H,IACAqxB,IAAAzwB,KAAA,KAAAA,IAAA+uB,YAAA,MACA,OAAA/uB,GAAAywB,IAEA50B,IAAA,SAAAmE,EAAAhL,GACA,MAAAgL,GAAAxI,KAAA4H,GAAApK,GAEAR,OAAA,SAAAwL,GACA,MAAAxI,MAAA4H,IAAAY,aAAAxI,KAAA4H,IAEAgiB,SAAA,WACA,MAAA5pB,MAAA4H,GAIA,IAAA+kE,IAAA,SAAAC,GACA,kBACA,MAAA5sE,MAAA6sE,QAAAD,IAIA,uBAAA1uE,UAAA,CACA,GAAA4uE,IAAA5uE,SAAAka,eACA,KAAA00D,GAAAD,QAAA,CACA,GAAAE,IAAAD,GAAAE,uBACAF,GAAAG,mBACAH,GAAAI,oBACAJ,GAAAK,gBACAR,IAAA,SAAAC,GACA,kBACA,MAAAG,IAAAzyE,KAAA0F,KAAA4sE,MAMA,GAAAQ,IAAAT,GAEA94C,KAIA,IAFAj6B,EAAAi5B,MAAA,KAEA,mBAAA30B,UAAA,CACA,GAAAmvE,IAAAnvE,SAAAka,eACA,iBAAAi1D,MACAx5C,IAAoBy5C,WAAA,YAAAC,WAAA,aAqEpB,GAAAC,IAAA,SAAAl6C,EAAA91B,EAAAk2B,GACA,GAAA34B,GAAAiK,EAAAuW,EAAA6X,GAAAE,EAAA,IAAA7uB,EAAA8W,EAAAtgB,MAEA,OAAAqQ,UAAArQ,OAAA,IAcA,IAFAs4B,EAAA/1B,EAAAm2B,GAAAN,GACA,MAAAK,OAAA,GACA34B,EAAA,EAAaA,EAAA0J,IAAO1J,EAAAiF,KAAAoE,KAAAmvB,EAAAhY,EAAAxgB,GAAAyC,EAAAk2B,GACpB,OAAA1zB,MAdA,GAAAuzB,GAAAvzB,KAAAwI,OAAAgrB,IACA,IAAAD,EAAA,OAAA/uB,GAAA+D,EAAA,EAAAuI,EAAAyiB,EAAAt4B,OAA6CsN,EAAAuI,IAAOvI,EACpD,IAAAxN,EAAA,EAAAyJ,EAAA+uB,EAAAhrB,GAA4BxN,EAAA0J,IAAO1J,EACnC,IAAAiK,EAAAuW,EAAAxgB,IAAA4gB,OAAAnX,EAAAmX,MAAA3W,EAAAyW,OAAAjX,EAAAiX,KACA,MAAAjX,GAAAhH,QAwBAw2B,GAAA,WAEA,IADA,GAAAtG,GAAA+/C,EAAA7zE,EAAAi5B,MACAnF,EAAA+/C,EAAAz5C,aAAAy5C,EAAA//C,CACA,OAAA+/C,IAGAC,GAAA,SAAAllE,EAAAqqB,GACA,GAAA8b,GAAAnmC,EAAA2lC,iBAAA3lC,CAEA,IAAAmmC,EAAAg/B,eAAA,CACA,GAAAv+D,GAAAu/B,EAAAg/B,gBAGA,OAFAv+D,GAAAvS,EAAAg2B,EAAA+6C,QAAAx+D,EAAA7O,EAAAsyB,EAAAg7C,QACAz+D,IAAA0+D,gBAAAtlE,EAAAulE,eAAAC,YACA5+D,EAAAvS,EAAAuS,EAAA7O,GAGA,GAAA0tD,GAAAzlD,EAAAylE,uBACA,QAAAp7C,EAAA+6C,QAAA3f,EAAAvvB,KAAAl2B,EAAA0lE,WAAAr7C,EAAAg7C,QAAA5f,EAAAhwB,IAAAz1B,EAAA2lE,YAGAj+B,GAAA,SAAA1nC,GACA,GAAAqqB,GAAAmB,IAEA,OADAnB,GAAAof,iBAAApf,IAAAof,eAAA,IACAy7B,GAAAllE,EAAAqqB,IAKA+5C,GAAA,SAAAA,GACA,aAAAA,EAAA34C,GAAA,WACA,MAAAj0B,MAAAouE,cAAAxB,KAIAyB,GAAA,SAAA/xE,GACA,kBAAAA,OAAAswE,GAAAtwE,GAEA,QAAAo8B,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAqzE,EAAA,GAAAhqE,OAAAwM,GAAAvI,EAAA,EAAqFA,EAAAuI,IAAOvI,EAC5F,OAAAC,GAAA+lE,EAAA57C,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAuzE,EAAAF,EAAA/lE,GAAA,GAAAjE,OAAAG,GAAA1J,EAAA,EAA+GA,EAAA0J,IAAO1J,GACtHyN,EAAAmqB,EAAA53B,MAAAwzE,EAAAjyE,EAAAhC,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,MACA,YAAAnqB,KAAA+lE,EAAAp7C,SAAA3qB,EAAA2qB,UACAq7C,EAAAzzE,GAAAwzE,EAKA,WAAA91C,IAAA61C,EAAAtuE,KAAA64B,WAOA41C,GAAA,SAAA7B,GACA,aAAAA,EAAA14C,GAAA,WACA,MAAAl0B,MAAA0uE,iBAAA9B,KAIA+B,GAAA,SAAAryE,GACA,kBAAAA,OAAAmyE,GAAAnyE,GAEA,QAAAo8B,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAqzE,KAAA31C,KAAApwB,EAAA,EAAyFA,EAAAuI,IAAOvI,EAChG,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAF,EAAA,EAA8DA,EAAA0J,IAAO1J,GACrEyN,EAAAmqB,EAAA53B,MACAuzE,EAAA/rE,KAAAjG,EAAAhC,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,IACAgG,EAAAp2B,KAAAiG,GAKA,WAAAiwB,IAAA61C,EAAA31C,IAGAi2C,GAAA,SAAA3tD,GACA,kBAAAA,OAAAmsD,GAAAnsD,GAEA,QAAAyX,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAqzE,EAAA,GAAAhqE,OAAAwM,GAAAvI,EAAA,EAAqFA,EAAAuI,IAAOvI,EAC5F,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAuzE,EAAAF,EAAA/lE,MAAAxN,EAAA,EAA4FA,EAAA0J,IAAO1J,GACnGyN,EAAAmqB,EAAA53B,KAAAkmB,EAAA3mB,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,IACA67C,EAAAjsE,KAAAiG,EAKA,WAAAiwB,IAAA61C,EAAAtuE,KAAA64B,WAGAg2C,GAAA,SAAAt6C,GACA,UAAAjwB,OAAAiwB,EAAAt5B,SAGA6zE,GAAA,WACA,UAAAr2C,IAAAz4B,KAAA+uE,QAAA/uE,KAAA44B,QAAAz0B,IAAA0qE,IAAA7uE,KAAA64B,UAWA1E,IAAA/5B,WACAwvD,YAAAz1B,GACAzb,YAAA,SAAAunB,GAAgC,MAAAjgC,MAAAq0B,QAAAqD,aAAAuI,EAAAjgC,KAAA2d,QAChC+Z,aAAA,SAAAuI,EAAAj+B,GAAuC,MAAAhC,MAAAq0B,QAAAqD,aAAAuI,EAAAj+B,IACvCosE,cAAA,SAAAxB,GAAqC,MAAA5sE,MAAAq0B,QAAA+5C,cAAAxB,IACrC8B,iBAAA,SAAA9B,GAAwC,MAAA5sE,MAAAq0B,QAAAq6C,iBAAA9B,IAGxC,IAAAoC,IAAA,SAAAnyE,GACA,kBACA,MAAAA,KAIAi4B,GAAA,IAwEAm6C,GAAA,SAAAzxE,EAAAtD,GACA,IAAAsD,EAGA,MAFAhB,GAAA,GAAA8H,OAAAtE,KAAAD,QAAAwI,GAAA,EACAvI,KAAAoE,KAAA,SAAAvB,GAA2BrG,IAAA+L,GAAA1F,IAC3BrG,CAGA,IAAA0yE,GAAAh1E,EAAAw6B,GAAAJ,GACAqE,EAAA34B,KAAA64B,SACAH,EAAA14B,KAAA44B,OAEA,mBAAAp7B,OAAAwxE,GAAAxxE,GAEA,QAAAsT,GAAA4nB,EAAAz9B,OAAAs5B,EAAA,GAAAjwB,OAAAwM,GAAArU,EAAA,GAAA6H,OAAAwM,GAAA/T,EAAA,GAAAuH,OAAAwM,GAAAvI,EAAA,EAAsGA,EAAAuI,IAAOvI,EAAA,CAC7G,GAAAP,GAAA2wB,EAAApwB,GACAoqB,EAAA+F,EAAAnwB,GACAisB,EAAA7B,EAAA13B,OACAuB,EAAAgB,EAAAlD,KAAA0N,OAAAmrB,SAAA5qB,EAAAowB,GACAlE,EAAAj4B,EAAAvB,OACAk0E,EAAA1yE,EAAA8L,GAAA,GAAAjE,OAAAmwB,GACA26C,EAAA76C,EAAAhsB,GAAA,GAAAjE,OAAAmwB,GACA46C,EAAAtyE,EAAAwL,GAAA,GAAAjE,OAAAkwB,EAEA06C,GAAAlnE,EAAA2qB,EAAAw8C,EAAAC,EAAAC,EAAA7yE,EAAAtC,EAKA,QAAA0oC,GAAA5gC,EAAAwjC,EAAA,EAAAN,EAAA,EAA4CM,EAAA/Q,IAAiB+Q,EAC7D,GAAA5C,EAAAusC,EAAA3pC,GAAA,CAEA,IADAA,GAAAN,MAAAM,EAAA,KACAxjC,EAAAotE,EAAAlqC,SAAAzQ,IACAmO,EAAAjlB,MAAA3b,GAAA,MAQA,MAHAuyB,GAAA,GAAAkE,IAAAlE,EAAAoE,GACApE,EAAAw6C,OAAAtyE,EACA83B,EAAA+6C,MAAAvyE,EACAw3B,GAGAg7C,GAAA,WACA,UAAA92C,IAAAz4B,KAAAsvE,OAAAtvE,KAAA44B,QAAAz0B,IAAA0qE,IAAA7uE,KAAA64B,WAGA22C,GAAA,SAAA12C,GAEA,OAAA22C,GAAAzvE,KAAA44B,QAAA82C,EAAA52C,EAAAF,QAAA+2C,EAAAF,EAAAx0E,OAAA6Z,EAAA46D,EAAAz0E,OAAA6V,EAAA1N,KAAAuO,IAAAg+D,EAAA76D,GAAA86D,EAAA,GAAAtrE,OAAAqrE,GAAApnE,EAAA,EAA8JA,EAAAuI,IAAOvI,EACrK,OAAAC,GAAAqnE,EAAAJ,EAAAlnE,GAAAunE,EAAAJ,EAAAnnE,GAAA9D,EAAAorE,EAAA50E,OAAA0B,EAAAizE,EAAArnE,GAAA,GAAAjE,OAAAG,GAAA1J,EAAA,EAAwHA,EAAA0J,IAAO1J,GAC/HyN,EAAAqnE,EAAA90E,IAAA+0E,EAAA/0E,MACA4B,EAAA5B,GAAAyN,EAKA,MAAQD,EAAAonE,IAAQpnE,EAChBqnE,EAAArnE,GAAAknE,EAAAlnE,EAGA,WAAAkwB,IAAAm3C,EAAA5vE,KAAA64B,WAGAk3C,GAAA,WAEA,OAAAr3C,GAAA14B,KAAA44B,QAAArwB,GAAA,EAAAuI,EAAA4nB,EAAAz9B,SAA4DsN,EAAAuI,GAC5D,OAAAtI,GAAAmqB,EAAA+F,EAAAnwB,GAAAxN,EAAA43B,EAAA13B,OAAA,EAAA+G,EAAA2wB,EAAA53B,KAA4EA,GAAA,IAC5EyN,EAAAmqB,EAAA53B,MACAiH,OAAAwG,EAAA8uB,aAAAt1B,EAAAu1B,WAAAG,aAAAlvB,EAAAxG,GACAA,EAAAwG,EAKA,OAAAxI,OAGAgwE,GAAA,SAAAjvE,GAGA,QAAAkvE,GAAAruE,EAAAC,GACA,MAAAD,IAAAC,EAAAd,EAAAa,EAAAuxB,SAAAtxB,EAAAsxB,WAAAvxB,GAAAC,EAHAd,MAAAg0B,GAMA,QAAA2D,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAi1E,EAAA,GAAA5rE,OAAAwM,GAAAvI,EAAA,EAAsFA,EAAAuI,IAAOvI,EAAA,CAC7F,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAk1E,EAAAD,EAAA3nE,GAAA,GAAAjE,OAAAG,GAAA1J,EAAA,EAAwGA,EAAA0J,IAAO1J,GAC/GyN,EAAAmqB,EAAA53B,MACAo1E,EAAAp1E,GAAAyN,EAGA2nE,GAAAtgD,KAAAogD,GAGA,UAAAx3C,IAAAy3C,EAAAlwE,KAAA64B,UAAAwF,SAOA+xC,GAAA,WACA,GAAAv0D,GAAAvQ,UAAA,EAGA,OAFAA,WAAA,GAAAtL,KACA6b,EAAA7Q,MAAA,KAAAM,WACAtL,MAGAqwE,GAAA,WACA,GAAA3mE,GAAA,GAAApF,OAAAtE,KAAAD,QAAAhF,GAAA,CAEA,OADAiF,MAAAoE,KAAA,WAAwBsF,IAAA3O,GAAAiF;AACxB0J,GAGA4mE,GAAA,WAEA,OAAA53C,GAAA14B,KAAA44B,QAAArwB,EAAA,EAAAuI,EAAA4nB,EAAAz9B,OAA2DsN,EAAAuI,IAAOvI,EAClE,OAAAoqB,GAAA+F,EAAAnwB,GAAAxN,EAAA,EAAA0J,EAAAkuB,EAAA13B,OAAwDF,EAAA0J,IAAO1J,EAAA,CAC/D,GAAAyN,GAAAmqB,EAAA53B,EACA,IAAAyN,EAAA,MAAAA,GAIA,aAGA+nE,GAAA,WACA,GAAAxwE,GAAA,CAEA,OADAC,MAAAoE,KAAA,aAAwBrE,IACxBA,GAGAywE,GAAA,WACA,OAAAxwE,KAAAwI,QAGAioE,GAAA,SAAA50D,GAEA,OAAA6c,GAAA14B,KAAA44B,QAAArwB,EAAA,EAAAuI,EAAA4nB,EAAAz9B,OAA2DsN,EAAAuI,IAAOvI,EAClE,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAAxN,EAAA,EAAA0J,EAAAkuB,EAAA13B,OAA8DF,EAAA0J,IAAO1J,GACrEyN,EAAAmqB,EAAA53B,KAAA8gB,EAAAvhB,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,EAIA,OAAA3yB,OA2CA0wE,GAAA,SAAAj1D,EAAAje,GACA,GAAA40B,GAAAq6C,GAAAhxD,EAEA,IAAAnQ,UAAArQ,OAAA,GACA,GAAAuN,GAAAxI,KAAAwI,MACA,OAAA4pB,GAAAE,MACA9pB,EAAA6yB,eAAAjJ,EAAAC,MAAAD,EAAAE,OACA9pB,EAAAnK,aAAA+zB,GAGA,MAAApyB,MAAAoE,MAAA,MAAA5G,EACA40B,EAAAE,MAAA4C,GAAAF,GAAA,kBAAAx3B,GACA40B,EAAAE,MAAAkD,GAAAD,GACAnD,EAAAE,MAAA+C,GAAAD,IAAAhD,EAAA50B,KAGAw6B,GAAA,SAAAxvB,GACA,MAAAA,GAAAupB,eAAAvpB,EAAAupB,cAAAzZ,aACA9P,EAAAtK,UAAAsK,GACAA,EAAA8P,aAuBAq4D,GAAA,SAAAl1D,EAAAje,EAAAo4B,GACA,GAAAptB,EACA,OAAA8C,WAAArQ,OAAA,EACA+E,KAAAoE,MAAA,MAAA5G,EACAi4B,GAAA,kBAAAj4B,GACAs4B,GACAH,IAAAla,EAAAje,EAAA,MAAAo4B,EAAA,GAAAA,IACAoC,GAAAxvB,EAAAxI,KAAAwI,QACAiQ,iBAAAjQ,EAAA,MACAmQ,iBAAA8C,IAuBAm1D,GAAA,SAAAn1D,EAAAje,GACA,MAAA8N,WAAArQ,OAAA,EACA+E,KAAAoE,MAAA,MAAA5G,EACAu4B,GAAA,kBAAAv4B,GACAy4B,GACAD,IAAAva,EAAAje,IACAwC,KAAAwI,OAAAiT,GAgBA2a,IAAAh8B,WACAwE,IAAA,SAAA6c,GACA,GAAA1gB,GAAAiF,KAAAs2B,OAAA5a,QAAAD,EACA1gB,GAAA,IACAiF,KAAAs2B,OAAA/zB,KAAAkZ,GACAzb,KAAAq2B,MAAAnd,aAAA,QAAAlZ,KAAAs2B,OAAA9b,KAAA,QAGAxd,OAAA,SAAAye,GACA,GAAA1gB,GAAAiF,KAAAs2B,OAAA5a,QAAAD,EACA1gB,IAAA,IACAiF,KAAAs2B,OAAA73B,OAAA1D,EAAA,GACAiF,KAAAq2B,MAAAnd,aAAA,QAAAlZ,KAAAs2B,OAAA9b,KAAA,QAGAkyC,SAAA,SAAAjxC,GACA,MAAAzb,MAAAs2B,OAAA5a,QAAAD,IAAA,GAgCA,IAAAo1D,IAAA,SAAAp1D,EAAAje,GACA,GAAA0sB,GAAAgM,GAAAza,EAAA,GAEA,IAAAnQ,UAAArQ,OAAA,GAEA,IADA,GAAAu7B,GAAAL,GAAAn2B,KAAAwI,QAAAzN,GAAA,EAAA0J,EAAAylB,EAAAjvB,SACAF,EAAA0J,GAAA,IAAA+xB,EAAAk2B,SAAAxiC,EAAAnvB,IAAA,QACA,UAGA,MAAAiF,MAAAoE,MAAA,kBAAA5G,GACAo5B,GAAAp5B,EACAk5B,GACAC,IAAAzM,EAAA1sB,KAoBAszE,GAAA,SAAAtzE,GACA,MAAA8N,WAAArQ,OACA+E,KAAAoE,KAAA,MAAA5G,EACAq5B,IAAA,kBAAAr5B,GACAw5B,GACAD,IAAAv5B,IACAwC,KAAAwI,OAAAsuB,aAoBAi6C,GAAA,SAAAvzE,GACA,MAAA8N,WAAArQ,OACA+E,KAAAoE,KAAA,MAAA5G,EACAy5B,IAAA,kBAAAz5B,GACA45B,GACAD,IAAA35B,IACAwC,KAAAwI,OAAA0uB,WAOA85C,GAAA,WACA,MAAAhxE,MAAAoE,KAAAizB,KAOA45C,GAAA,WACA,MAAAjxE,MAAAoE,KAAAozB,KAGA05C,GAAA,SAAAz1D,GACA,GAAAvI,GAAA,kBAAAuI,KAAAixD,GAAAjxD,EACA,OAAAzb,MAAA1D,OAAA,WACA,MAAA0D,MAAA0Y,YAAAxF,EAAAlI,MAAAhL,KAAAsL,eAQA6lE,GAAA,SAAA11D,EAAA+vB,GACA,GAAAt4B,GAAA,kBAAAuI,KAAAixD,GAAAjxD,GACAnf,EAAA,MAAAkvC,EAAA5T,GAAA,kBAAA4T,KAAAohC,GAAAphC,EACA,OAAAxrC,MAAA1D,OAAA,WACA,MAAA0D,MAAA03B,aAAAxkB,EAAAlI,MAAAhL,KAAAsL,WAAAhP,EAAA0O,MAAAhL,KAAAsL,YAAA,SASA8lE,GAAA,WACA,MAAApxE,MAAAoE,KAAApH,KAGAq0E,GAAA,SAAA7zE,GACA,MAAA8N,WAAArQ,OACA+E,KAAAsvC,SAAA,WAAA9xC,GACAwC,KAAAwI,OAAA2qB,UA8BAm+C,GAAA,SAAA31D,EAAAmc,GACA,MAAA93B,MAAAoE,MAAA,kBAAA0zB,GACAU,GACAD,IAAA5c,EAAAmc,KAGAiB,IAAA,KAWAN,IAAAr+B,UAAA0+B,GAAA1+B,WACAwvD,YAAAnxB,GACAn8B,OAAA+xE,GACA9xE,UAAAoyE,GACA/uD,OAAAgvD,GACApyE,KAAAyyE,GACAxyE,MAAAqyE,GACA/xE,KAAAwyE,GACA5yE,MAAA6yE,GACAnxC,MAAA0xC,GACAlgD,KAAAmgD,GACA11E,KAAA81E,GACA1mE,MAAA2mE,GACA7nE,KAAA8nE,GACAvwE,KAAAwwE,GACAr8C,MAAAs8C,GACApsE,KAAAqsE,GACAjyC,KAAAkyC,GACAn4D,MAAAo4D,GACArhC,SAAAshC,GACAh0E,QAAAi0E,GACAzzE,KAAA0zE,GACAh0E,KAAAi0E,GACAxhD,MAAAyhD,GACAx5C,MAAAy5C,GACAv0E,OAAAw0E,GACAvyC,OAAAwyC,GACAn0E,OAAAo0E,GACAh9C,MAAAi9C,GACA99C,GAAAi6C,GACApyD,SAAAk2D,GAGA,IAAAh1E,IAAA,SAAAswE,GACA,sBAAAA,GACA,GAAAn0C,MAAAv6B,SAAAkwE,cAAAxB,MAAA1uE,SAAAka,kBACA,GAAAqgB,MAAAm0C,IAAA7zC,KAGAx8B,GAAA,SAAAqwE,GACA,sBAAAA,GACA,GAAAn0C,KAAAv6B,SAAAwwE,iBAAA9B,KAAA1uE,SAAAka,kBACA,GAAAqgB,KAAA,MAAAm0C,QAAA7zC,KAGAw4C,GAAA,SAAA/oE,EAAAmpC,EAAAzK,GACA57B,UAAArQ,OAAA,IAAAisC,EAAAyK,IAAA3d,KAAAie,eAEA,QAAAs/B,GAAAx2E,EAAA,EAAA0J,EAAAktC,IAAA12C,OAAA,EAA0DF,EAAA0J,IAAO1J,EACjE,IAAAw2E,EAAA5/B,EAAA52C,IAAAmsC,eACA,MAAAwmC,IAAAllE,EAAA+oE,EAIA,cAGA5/B,GAAA,SAAAnpC,EAAAmpC,GACA,MAAAA,MAAA3d,KAAA2d,QAEA,QAAA52C,GAAA,EAAA0J,EAAAktC,IAAA12C,OAAA,EAAAD,EAAA,GAAAsJ,OAAAG,GAA0E1J,EAAA0J,IAAO1J,EACjFC,EAAAD,GAAA2yE,GAAAllE,EAAAmpC,EAAA52C,GAGA,OAAAC,IAGAw2E,GAAAp2D,GAAA,2BACAq2D,MAEAp4C,GAAA,EACAM,GAAA,EACAJ,GAAA,EACAM,GAAA,EACAE,GAAA,EACAM,GAAA,EACAL,GAAA,EAEAd,GAAA,SAAA1wB,EAAAiT,EAAAwd,EAAA17B,EAAAo1B,EAAAuK,GACA,GAAAtD,GAAApxB,EAAA2wB,YACA,IAAAS,GACA,GAAAX,IAAAW,GAAA,WADApxB,GAAA2wB,eAEAjmB,IAAA1K,EAAAywB,GACAxd,OACAle,QACAo1B,QACAY,GAAAi+C,GACAt3C,MAAAu3C,GACA3zD,KAAAof,EAAApf,KACAD,MAAAqf,EAAArf,MACAsc,SAAA+C,EAAA/C,SACAC,KAAA8C,EAAA9C,KACAxc,MAAA,KACAwb,MAAAC,MA+HAmZ,GAAA,SAAAhqC,EAAAiT,GACA,GACAyd,GACA+N,EAEAlsC,EAJA6+B,EAAApxB,EAAA2wB,aAGAjF,GAAA,CAGA,IAAA0F,EAAA,CAEAne,EAAA,MAAAA,EAAA,KAAAA,EAAA,EAEA,KAAA1gB,IAAA6+B,IACAV,EAAAU,EAAA7+B,IAAA0gB,UACAwrB,EAAA/N,EAAAE,MAAAG,IAAAL,EAAAE,MAAAiB,GACAnB,EAAAE,MAAAY,GACAd,EAAAtb,MAAA3a,OACAgkC,GAAA/N,EAAA3F,GAAAj5B,KAAA,YAAAkO,IAAA2qB,SAAA+F,EAAA37B,MAAA27B,EAAAvG,aACAiH,GAAA7+B,IALkDm5B,GAAA,CAQlDA,UAAA1rB,GAAA2wB,eAGAu4C,GAAA,SAAAj2D,GACA,MAAAzb,MAAAoE,KAAA,WACAouC,GAAAxyC,KAAAyb,MAqDAk2D,GAAA,SAAAl2D,EAAAje,GACA,GAAAy7B,GAAAj5B,KAAA46B,GAIA,IAFAnf,GAAA,GAEAnQ,UAAArQ,OAAA,GAEA,OAAA+J,GADAk1B,EAAAV,GAAAx5B,KAAAwI,OAAAywB,GAAAiB,MACAn/B,EAAA,EAAA0J,EAAAy1B,EAAAj/B,OAAwCF,EAAA0J,IAAO1J,EAC/C,IAAAiK,EAAAk1B,EAAAn/B,IAAA0gB,SACA,MAAAzW,GAAAxH,KAGA,aAGA,MAAAwC,MAAAoE,MAAA,MAAA5G,EAAA88B,GAAAG,IAAAxB,EAAAxd,EAAAje,KAgBAo0E,GAAA,SAAAhwE,EAAAC,GACA,GAAAiJ,EACA,wBAAAjJ,GAAAmY,GACAnY,YAAAuR,IAAA6sD,IACAn1D,EAAAsI,GAAAvR,OAAAiJ,EAAAm1D,IACAU,IAAA/+D,EAAAC,IAiEAgwE,GAAA,SAAAp2D,EAAAje,GACA,GAAA40B,GAAAq6C,GAAAhxD,GAAA1gB,EAAA,cAAAq3B,EAAA+uC,GAAAyQ,EACA,OAAA5xE,MAAA27B,UAAAlgB,EAAA,kBAAAje,IACA40B,EAAAE,MAAAkJ,GAAAF,IAAAlJ,EAAAr3B,EAAA2/B,GAAA16B,KAAA,QAAAyb,EAAAje,IACA,MAAAA,GAAA40B,EAAAE,MAAAwI,GAAAD,IAAAzI,IACAA,EAAAE,MAAA8I,GAAAL,IAAA3I,EAAAr3B,EAAAyC,KAyBAs0E,GAAA,SAAAr2D,EAAAje,GACA,GAAAtD,GAAA,QAAAuhB,CACA,IAAAnQ,UAAArQ,OAAA,SAAAf,EAAA8F,KAAAk6B,MAAAhgC,OAAAwhC,MACA,UAAAl+B,EAAA,MAAAwC,MAAAk6B,MAAAhgC,EAAA,KACA,sBAAAsD,GAAA,SAAAwM,MACA,IAAAooB,GAAAq6C,GAAAhxD,EACA,OAAAzb,MAAAk6B,MAAAhgC,GAAAk4B,EAAAE,MAAAmJ,GAAAE,IAAAvJ,EAAA50B,KAeAu0E,GAAA,SAAAv0E,GACA,GAAAy7B,GAAAj5B,KAAA46B,GAEA,OAAAtvB,WAAArQ,OACA+E,KAAAoE,MAAA,kBAAA5G,GACAo+B,GACAC,IAAA5C,EAAAz7B,IACAg8B,GAAAx5B,KAAAwI,OAAAywB,GAAApb,OAeAm0D,GAAA,SAAAx0E,GACA,GAAAy7B,GAAAj5B,KAAA46B,GAEA,OAAAtvB,WAAArQ,OACA+E,KAAAoE,MAAA,kBAAA5G,GACAs+B,GACAC,IAAA9C,EAAAz7B,IACAg8B,GAAAx5B,KAAAwI,OAAAywB,GAAAkB,UAUA83C,GAAA,SAAAz0E,GACA,GAAAy7B,GAAAj5B,KAAA46B,GAEA,OAAAtvB,WAAArQ,OACA+E,KAAAoE,KAAA43B,GAAA/C,EAAAz7B,IACAg8B,GAAAx5B,KAAAwI,OAAAywB,GAAAmB,MAGA83C,GAAA,SAAAjxD,GACA,kBAAAA,OAAAmsD,GAAAnsD,GAEA,QAAAyX,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAqzE,EAAA,GAAAhqE,OAAAwM,GAAAvI,EAAA,EAAqFA,EAAAuI,IAAOvI,EAC5F,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAuzE,EAAAF,EAAA/lE,MAAAxN,EAAA,EAA4FA,EAAA0J,IAAO1J,GACnGyN,EAAAmqB,EAAA53B,KAAAkmB,EAAA3mB,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,IACA67C,EAAAjsE,KAAAiG,EAKA,WAAAs0B,IAAAwxC,EAAAtuE,KAAA64B,SAAA74B,KAAA+8B,MAAA/8B,KAAA46B,MAGAu3C,GAAA,SAAAx3C,GACA,GAAAA,EAAAC,MAAA56B,KAAA46B,IAAA,SAAA5wB,MAEA,QAAAylE,GAAAzvE,KAAA44B,QAAA82C,EAAA/0C,EAAA/B,QAAA+2C,EAAAF,EAAAx0E,OAAA6Z,EAAA46D,EAAAz0E,OAAA6V,EAAA1N,KAAAuO,IAAAg+D,EAAA76D,GAAA86D,EAAA,GAAAtrE,OAAAqrE,GAAApnE,EAAA,EAA+JA,EAAAuI,IAAOvI,EACtK,OAAAC,GAAAqnE,EAAAJ,EAAAlnE,GAAAunE,EAAAJ,EAAAnnE,GAAA9D,EAAAorE,EAAA50E,OAAA0B,EAAAizE,EAAArnE,GAAA,GAAAjE,OAAAG,GAAA1J,EAAA,EAAwHA,EAAA0J,IAAO1J,GAC/HyN,EAAAqnE,EAAA90E,IAAA+0E,EAAA/0E,MACA4B,EAAA5B,GAAAyN,EAKA,MAAQD,EAAAonE,IAAQpnE,EAChBqnE,EAAArnE,GAAAknE,EAAAlnE,EAGA,WAAAu0B,IAAA8yC,EAAA5vE,KAAA64B,SAAA74B,KAAA+8B,MAAA/8B,KAAA46B,MA0BAw3C,GAAA,SAAA32D,EAAAiX,GACA,GAAAuG,GAAAj5B,KAAA46B,GAEA,OAAAtvB,WAAArQ,OAAA,EACAu+B,GAAAx5B,KAAAwI,OAAAywB,GAAA1F,MAAA9X,GACAzb,KAAAoE,KAAA83B,GAAAjD,EAAAxd,EAAAiX,KAWA2/C,GAAA,WACA,MAAAryE,MAAAuzB,GAAA,aAAA+I,GAAAt8B,KAAA46B,OAGA03C,GAAA,SAAAC,GACA,GAAA92D,GAAAzb,KAAA+8B,MACA9D,EAAAj5B,KAAA46B,GAEA,mBAAA23C,OAAA3F,GAAA2F,GAEA,QAAA75C,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAqzE,EAAA,GAAAhqE,OAAAwM,GAAAvI,EAAA,EAAqFA,EAAAuI,IAAOvI,EAC5F,OAAAC,GAAA+lE,EAAA57C,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAuzE,EAAAF,EAAA/lE,GAAA,GAAAjE,OAAAG,GAAA1J,EAAA,EAA+GA,EAAA0J,IAAO1J,GACtHyN,EAAAmqB,EAAA53B,MAAAwzE,EAAAgE,EAAAj4E,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,MACA,YAAAnqB,KAAA+lE,EAAAp7C,SAAA3qB,EAAA2qB,UACAq7C,EAAAzzE,GAAAwzE,EACAr1C,GAAAs1C,EAAAzzE,GAAA0gB,EAAAwd,EAAAl+B,EAAAyzE,EAAAh1C,GAAAhxB,EAAAywB,IAKA,WAAA6D,IAAAwxC,EAAAtuE,KAAA64B,SAAApd,EAAAwd,IAGAu5C,GAAA,SAAAD,GACA,GAAA92D,GAAAzb,KAAA+8B,MACA9D,EAAAj5B,KAAA46B,GAEA,mBAAA23C,OAAA9D,GAAA8D,GAEA,QAAA75C,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAqzE,KAAA31C,KAAApwB,EAAA,EAAyFA,EAAAuI,IAAOvI,EAChG,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAF,EAAA,EAA8DA,EAAA0J,IAAO1J,EACrE,GAAAyN,EAAAmqB,EAAA53B,GAAA,CACA,OAAAklC,GAAAX,EAAAizC,EAAAj4E,KAAAkO,IAAA2qB,SAAAp4B,EAAA43B,GAAAsK,EAAAzD,GAAAhxB,EAAAywB,GAAAxiB,EAAA,EAAAxH,EAAAqwB,EAAArkC,OAAwIwb,EAAAxH,IAAOwH,GAC/IwpB,EAAAX,EAAA7oB,KACAyiB,GAAA+G,EAAAxkB,EAAAwd,EAAAxiB,EAAA6oB,EAAArC,EAGAqxC,GAAA/rE,KAAA+8B,GACA3G,EAAAp2B,KAAAiG,GAKA,UAAAs0B,IAAAwxC,EAAA31C,EAAAld,EAAAwd,IAGAw5C,GAAA35C,GAAA1+B,UAAAwvD,YAEA8oB,GAAA,WACA,UAAAD,IAAAzyE,KAAA44B,QAAA54B,KAAA64B,WAiDA85C,GAAA,SAAAl3D,EAAAje,EAAAo4B,GACA,GAAA76B,GAAA,cAAA0gB,GAAA,IAAAylD,GAAA0Q,EACA,cAAAp0E,EAAAwC,KACA28B,WAAAlhB,EAAA8gB,GAAA9gB,EAAA1gB,IACAw4B,GAAA,aAAA9X,EAAA+gB,GAAA/gB,IACAzb,KAAA28B,WAAAlhB,EAAA,kBAAAje,GACAk/B,GAAAjhB,EAAA1gB,EAAA2/B,GAAA16B,KAAA,SAAAyb,EAAAje,IACAi/B,GAAAhhB,EAAA1gB,EAAAyC,GAAAo4B,IAcAg9C,GAAA,SAAAn3D,EAAAje,EAAAo4B,GACA,GAAA17B,GAAA,UAAAuhB,GAAA,GACA,IAAAnQ,UAAArQ,OAAA,SAAAf,EAAA8F,KAAAk6B,MAAAhgC,OAAAwhC,MACA,UAAAl+B,EAAA,MAAAwC,MAAAk6B,MAAAhgC,EAAA,KACA,sBAAAsD,GAAA,SAAAwM,MACA,OAAAhK,MAAAk6B,MAAAhgC,EAAAyiC,GAAAlhB,EAAAje,EAAA,MAAAo4B,EAAA,GAAAA,KAgBAi9C,GAAA,SAAAr1E,GACA,MAAAwC,MAAAk6B,MAAA,yBAAA18B,GACAq/B,GAAAnC,GAAA16B,KAAA,OAAAxC,IACAo/B,GAAA,MAAAp/B,EAAA,GAAAA,EAAA,MAGAs1E,GAAA,WAKA,OAJAr3D,GAAAzb,KAAA+8B,MACAg2C,EAAA/yE,KAAA46B,IACAo4C,EAAAh2C,KAEAtE,EAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAsN,EAAA,EAA2DA,EAAAuI,IAAOvI,EAClE,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAF,EAAA,EAA8DA,EAAA0J,IAAO1J,EACrE,GAAAyN,EAAAmqB,EAAA53B,GAAA,CACA,GAAAkiC,GAAAzD,GAAAhxB,EAAAuqE,EACA75C,IAAA1wB,EAAAiT,EAAAu3D,EAAAj4E,EAAA43B,GACA7U,KAAAmf,EAAAnf,KAAAmf,EAAApf,MAAAof,EAAA9C,SACAtc,MAAA,EACAsc,SAAA8C,EAAA9C,SACAC,KAAA6C,EAAA7C,OAMA,UAAA0C,IAAApE,EAAA14B,KAAA64B,SAAApd,EAAAu3D,IAGA/5C,GAAA,EAiBAg6C,GAAAn6C,GAAA1+B,SAEA0iC,IAAA1iC,UAAAugC,GAAAvgC,WACAwvD,YAAA9sB,GACAxgC,OAAAg2E,GACA/1E,UAAAi2E,GACA5yD,OAAAsyD,GACAv1E,MAAAw1E,GACAr5C,UAAA45C,GACA/3C,WAAAm4C,GACAx4E,KAAA24E,GAAA34E,KACAoP,MAAAupE,GAAAvpE,MACAlB,KAAAyqE,GAAAzqE,KACAzI,KAAAkzE,GAAAlzE,KACAm0B,MAAA++C,GAAA/+C,MACA9vB,KAAA6uE,GAAA7uE,KACAmvB,GAAA6+C,GACA5zC,KAAAqzC,GACAl2C,UAAAm2C,GACAv5D,MAAAo6D,GACAh2C,WAAAi2C,GACAx1E,KAAAy1E,GACA71E,OAAAq1E,GACAn4C,MAAAy3C,GACA9zD,MAAAk0D,GACA53C,SAAA63C,GACA53C,KAAA63C,GAGA,IAAA90C,KACArf,KAAA,KACAD,MAAA,EACAsc,SAAA,IACAC,KAAA90B,GAaA4tE,GAAA,SAAAz3D,GACA,GAAAwd,GACAiE,CAEAzhB,aAAAqhB,KACA7D,EAAAxd,EAAAmf,IAAAnf,IAAAshB,QAEA9D,EAAA+D,MAAAE,EAAAC,IAAArf,KAAAX,KAAA1B,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAGA,QAAAid,GAAA14B,KAAA44B,QAAA9nB,EAAA4nB,EAAAz9B,OAAAsN,EAAA,EAA2DA,EAAAuI,IAAOvI,EAClE,OAAAC,GAAAmqB,EAAA+F,EAAAnwB,GAAA9D,EAAAkuB,EAAA13B,OAAAF,EAAA,EAA8DA,EAAA0J,IAAO1J,GACrEyN,EAAAmqB,EAAA53B,KACAm+B,GAAA1wB,EAAAiT,EAAAwd,EAAAl+B,EAAA43B,EAAAuK,GAAAD,GAAAz0B,EAAAywB,GAKA,WAAA6D,IAAApE,EAAA14B,KAAA64B,SAAApd,EAAAwd,GAGAH,IAAA1+B,UAAAo4C,UAAAk/B,GACA54C,GAAA1+B,UAAAugC,WAAAu4C,EAEA,IAAAC,KAAA,MAEAlsC,GAAA,SAAAz+B,EAAAiT,GACA,GACAyd,GACAn+B,EAFA6+B,EAAApxB,EAAA2wB,YAIA,IAAAS,EAAA,CACAne,EAAA,MAAAA,EAAA,KAAAA,EAAA,EACA,KAAA1gB,IAAA6+B,GACA,IAAAV,EAAAU,EAAA7+B,IAAAq+B,MAAAO,IAAAT,EAAAzd,SACA,UAAAqhB,MAAAt0B,IAAA2qE,GAAA13D,GAAA1gB,GAKA,aAGA+jC,GAAAx6B,MAAAlK,UAAAkN,MAEAu2B,GAAA,SAAAhhC,GACA,MAAAA,IAGAohC,GAAA,EACA51B,GAAA,EACAC,GAAA,EACAo2B,GAAA,EACAE,GAAA,KAuMAw0C,GAAA,WAMA,QAAAA,GAAAr6C,GACA,GAAAs6C,GACAx2E,EAAA,CAGAk8B,GAAAu6C,UAAA,SAAA9qE,GACA,GAAA82B,GAAA92B,EAAA82B,QACAA,IACA92B,EAAA3L,EAAAwiC,GAAAC,GACA92B,EAAAjI,EAAA1E,GAAAyjC,KAEA92B,EAAA3L,EAAAw2E,EAAAx2E,GAAA02E,EAAA/qE,EAAA6qE,GAAA,EACA7qE,EAAAjI,EAAA,EACA8yE,EAAA7qE,IAIA,IAAAk2B,GAAAgB,GAAA3G,GACA1wB,EAAAs3B,GAAA5G,GACApwB,EAAA+1B,EAAA7hC,EAAA02E,EAAA70C,EAAAr2B,GAAA,EACAQ,EAAAR,EAAAxL,EAAA02E,EAAAlrE,EAAAq2B,GAAA,CAGA,OAAA3F,GAAAu6C,UAAAE,EAAA,SAAAhrE,GACAA,EAAA3L,GAAA2L,EAAA3L,EAAAk8B,EAAAl8B,GAAA4Q,EACAjF,EAAAjI,GAAAw4B,EAAAx4B,EAAAiI,EAAAjI,GAAAmN,GACK,SAAAlF,GACLA,EAAA3L,GAAA2L,EAAA3L,EAAA8L,IAAAE,EAAAF,GAAA8E,EACAjF,EAAAjI,GAAA,GAAAw4B,EAAAx4B,EAAAiI,EAAAjI,EAAAw4B,EAAAx4B,EAAA,IAAAmN,IAjCA,GAAA6lE,GAAAn0C,GACA3xB,EAAA,EACAC,EAAA,EACA8lE,GAAA,CA8CA,OAZAJ,GAAAG,WAAA,SAAA12E,GACA,MAAAyO,WAAArQ,QAAAs4E,EAAA12E,EAAAu2E,GAAAG,GAGAH,EAAArzE,KAAA,SAAAlD,GACA,MAAAyO,WAAArQ,QAAAu4E,GAAA,EAAA/lE,GAAA5Q,EAAA,GAAA6Q,GAAA7Q,EAAA,GAAAu2E,GAAAI,EAAA,MAAA/lE,EAAAC,IAGA0lE,EAAAI,SAAA,SAAA32E,GACA,MAAAyO,WAAArQ,QAAAu4E,GAAA,EAAA/lE,GAAA5Q,EAAA,GAAA6Q,GAAA7Q,EAAA,GAAAu2E,GAAAI,GAAA/lE,EAAAC,GAAA,MAGA0lE,GAGAK,GAAA,SAAA53D,GACA,GAAA4xD,GAAAnuC,EAAAvkC,EAAA0J,EAAA+D,EAAAxI,KAAAgC,GAAAwG,EACA,GAEA,KADAilE,EAAAzrE,EAAAqqB,UAAArqB,KACAwG,EAAAilE,EAAA5uE,OAEA,GADAgd,EAAArT,GAAA82B,EAAA92B,EAAA82B,SACA,IAAAvkC,EAAA,EAAA0J,EAAA66B,EAAArkC,OAAoDF,EAAA0J,IAAO1J,EAC3DiH,EAAAO,KAAA+8B,EAAAvkC,UAGGiH,EAAA/G,OACH,OAAA+E,OAGA0zE,GAAA,SAAA73D,GAEA,IADA,GAAAyjB,GAAAvkC,EAAAyN,EAAAxI,KAAA0J,GAAAlB,GACAA,EAAAkB,EAAA7K,OAEA,GADAgd,EAAArT,GAAA82B,EAAA92B,EAAA82B,SACA,IAAAvkC,EAAAukC,EAAArkC,OAAA,EAA+CF,GAAA,IAAQA,EACvD2O,EAAAnH,KAAA+8B,EAAAvkC,GAGA,OAAAiF,OAGA2zE,GAAA,SAAA93D,GAEA,IADA,GAAAyjB,GAAAvkC,EAAA0J,EAAA+D,EAAAxI,KAAA0J,GAAAlB,GAAAxG,KACAwG,EAAAkB,EAAA7K,OAEA,GADAmD,EAAAO,KAAAiG,GAAA82B,EAAA92B,EAAA82B,SACA,IAAAvkC,EAAA,EAAA0J,EAAA66B,EAAArkC,OAAkDF,EAAA0J,IAAO1J,EACzD2O,EAAAnH,KAAA+8B,EAAAvkC,GAGA,MAAAyN,EAAAxG,EAAAnD,OACAgd,EAAArT,EAEA,OAAAxI,OAGA4zE,GAAA,SAAAp2E,GACA,MAAAwC,MAAAszE,UAAA,SAAA9qE,GAIA,IAHA,GAAAghD,IAAAhsD,EAAAgL,EAAAhM,OAAA,EACA8iC,EAAA92B,EAAA82B,SACAvkC,EAAAukC,KAAArkC,SACAF,GAAA,GAAAyuD,GAAAlqB,EAAAvkC,GAAAyC,KACAgL,GAAAhL,MAAAgsD,KAIAqqB,GAAA,SAAA9yE,GACA,MAAAf,MAAAugC,WAAA,SAAA/3B,GACAA,EAAA82B,UACA92B,EAAA82B,SAAAzP,KAAA9uB,MAKA+yE,GAAA,SAAA/oE,GAIA,IAHA,GAAA/H,GAAAhD,KACA4kC,EAAAhF,GAAA58B,EAAA+H,GACArB,GAAA1G,GACAA,IAAA4hC,GACA5hC,IAAAgF,OACA0B,EAAAnH,KAAAS,EAGA,KADA,GAAAyT,GAAA/M,EAAAzO,OACA8P,IAAA65B,GACAl7B,EAAAjL,OAAAgY,EAAA,EAAA1L,GACAA,IAAA/C,MAEA,OAAA0B,IAkBAqqE,GAAA,WAEA,IADA,GAAAvrE,GAAAxI,KAAA0J,GAAAlB,GACAA,IAAAR,QACA0B,EAAAnH,KAAAiG,EAEA,OAAAkB,IAGAsqE,GAAA,WACA,GAAAtqE,KAIA,OAHA1J,MAAAoE,KAAA,SAAAoE,GACAkB,EAAAnH,KAAAiG,KAEAkB,GAGAuqE,GAAA,WACA,GAAAC,KAMA,OALAl0E,MAAAugC,WAAA,SAAA/3B,GACAA,EAAA82B,UACA40C,EAAA3xE,KAAAiG,KAGA0rE,GAGAC,GAAA,WACA,GAAAp7C,GAAA/4B,KAAAo0E,IAMA,OALAr7C,GAAA30B,KAAA,SAAAoE,GACAA,IAAAuwB,GACAq7C,EAAA7xE,MAAkBmrB,OAAAllB,EAAAR,OAAA3I,OAAAmJ,MAGlB4rE,EAuDAj0C,IAAA/lC,UAAA4lC,GAAA5lC,WACAwvD,YAAAzpB,GACA/7B,KAAAqvE,GACAH,UAAAK,GACApzC,WAAAmzC,GACAlqB,IAAAoqB,GACA/jD,KAAAgkD,GACAhsE,KAAAisE,GACAh0C,UAAAi0C,GACAM,YAAAL,GACAE,OAAAD,GACAG,MAAAD,GACArqE,KAAA22B,GAQA,IAAA6zC,IAAA,SAAAhyE,GAMA,IALA,GAAAvH,GACA0J,GAAAnC,IAAAgF,SAAArM,OACA0G,EAAA,KACA6G,EAAA7G,EAEA8C,GAAA,CACA,GAAAzC,GAAA,GAAA4+B,IAAAt+B,EAAAmC,EAAA,GACA+D,OAAAxG,OACAL,EAAAK,EACAM,EAAAvH,GAAAuH,IAAAmC,GAGA,OACA9C,OACA6/B,KAAAh5B,IAIA86B,GAAA,SAAAR,GACA,MAAA/B,IAAAuzC,GAAAxxC,QAqOAyxC,GAAA,SAAAzxC,GAEA,MADAD,IAAAC,GACAA,GAgBA0xC,GAAA,SAAA33E,GACA,kBACA,MAAAA,KAQAU,GAAA,WAMA,QAAA8lC,GAAAtK,GAYA,MAXAA,GAAAl8B,EAAA4Q,EAAA,EAAAsrB,EAAAx4B,EAAAmN,EAAA,EACAyB,EACA4pB,EAAAwH,WAAAoD,GAAAx0B,IACAmkE,UAAA1vC,GAAA/W,EAAA,KACA0T,WAAAsD,GAAA,IAEA9K,EAAAwH,WAAAoD,GAAAD,KACA4vC,UAAA1vC,GAAAH,GAAA,IACA6vC,UAAA1vC,GAAA/W,EAAAkM,EAAA7tB,EAAA9H,KAAAuO,IAAAlE,EAAAC,KACA6yB,WAAAsD,GAAAzgC,KAAAuO,IAAAlE,EAAAC,IAAA,EAAAqrB,EAAA7tB,KAEA6tB,EAjBA,GAAA5pB,GAAA,KACA1B,EAAA,EACAC,EAAA,EACAmf,EAAA4W,EA6BA,OAZAJ,GAAAl0B,OAAA,SAAAtS,GACA,MAAAyO,WAAArQ,QAAAkU,EAAAo0B,GAAA1mC,GAAAwmC,GAAAl0B,GAGAk0B,EAAAtjC,KAAA,SAAAlD,GACA,MAAAyO,WAAArQ,QAAAwS,GAAA5Q,EAAA,GAAA6Q,GAAA7Q,EAAA,GAAAwmC,IAAA51B,EAAAC,IAGA21B,EAAAxW,QAAA,SAAAhwB,GACA,MAAAyO,WAAArQ,QAAA4xB,EAAA,kBAAAhwB,KAAA23E,IAAA33E,GAAAwmC,GAAAxW,GAGAwW,GAuCAoxC,GAAA,SAAAjsE,GACAA,EAAAG,GAAAvF,KAAAiU,MAAA7O,EAAAG,IACAH,EAAAI,GAAAxF,KAAAiU,MAAA7O,EAAAI,IACAJ,EAAAK,GAAAzF,KAAAiU,MAAA7O,EAAAK,IACAL,EAAAM,GAAA1F,KAAAiU,MAAA7O,EAAAM,KAGA48B,GAAA,SAAA19B,EAAAW,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAN,GADAkB,EAAA1B,EAAAs3B,SAEAvkC,GAAA,EACA0J,EAAAiF,EAAAzO,OACAwb,EAAAzO,EAAAxK,QAAAqL,EAAAF,GAAAX,EAAAxK,QAEAzC,EAAA0J,GACA+D,EAAAkB,EAAA3O,GAAAyN,EAAAI,KAAAJ,EAAAM,KACAN,EAAAG,KAAAH,EAAAK,GAAAF,GAAAH,EAAAhL,MAAAiZ,GAIAi+D,GAAA,WAMA,QAAAA,GAAA37C,GACA,GAAAt0B,GAAAs0B,EAAA4H,OAAA,CAOA,OANA5H,GAAApwB,GACAowB,EAAAnwB,GAAAikB,EACAkM,EAAAlwB,GAAA4E,EACAsrB,EAAAjwB,GAAA4E,EAAAjJ,EACAs0B,EAAAwH,WAAAo0C,EAAAjnE,EAAAjJ,IACA4S,GAAA0hB,EAAAwH,WAAAk0C,IACA17C,EAGA,QAAA47C,GAAAjnE,EAAAjJ,GACA,gBAAA+D,GACAA,EAAA82B,UACAoG,GAAAl9B,IAAAG,GAAA+E,GAAAlF,EAAA83B,MAAA,GAAA77B,EAAA+D,EAAAK,GAAA6E,GAAAlF,EAAA83B,MAAA,GAAA77B,EAEA,IAAAkE,GAAAH,EAAAG,GACAC,EAAAJ,EAAAI,GACAC,EAAAL,EAAAK,GAAAgkB,EACA/jB,EAAAN,EAAAM,GAAA+jB,CACAhkB,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAN,EAAAG,KACAH,EAAAI,KACAJ,EAAAK,KACAL,EAAAM,MA9BA,GAAA2E,GAAA,EACAC,EAAA,EACAmf,EAAA,EACAxV,GAAA,CA2CA,OAZAq9D,GAAAr9D,MAAA,SAAAxa,GACA,MAAAyO,WAAArQ,QAAAoc,IAAAxa,EAAA63E,GAAAr9D,GAGAq9D,EAAA30E,KAAA,SAAAlD,GACA,MAAAyO,WAAArQ,QAAAwS,GAAA5Q,EAAA,GAAA6Q,GAAA7Q,EAAA,GAAA63E,IAAAjnE,EAAAC,IAGAgnE,EAAA7nD,QAAA,SAAAhwB,GACA,MAAAyO,WAAArQ,QAAA4xB,GAAAhwB,EAAA63E,GAAA7nD,GAGA6nD,GAGAE,GAAA,IACAC,IAAev0C,OAAA,GACfw0C,MAUAC,GAAA,WAIA,QAAAA,GAAAv4E,GACA,GAAAqG,GACA9H,EAEAg+B,EACA/wB,EACAQ,EAEA29B,EACA6uC,EANAvwE,EAAAjI,EAAAvB,OAIAyO,EAAA,GAAApF,OAAAG,GAGAwwE,IAEA,KAAAl6E,EAAA,EAAeA,EAAA0J,IAAO1J,EACtB8H,EAAArG,EAAAzB,GAAAyN,EAAAkB,EAAA3O,GAAA,GAAAolC,IAAAt9B,GACA,OAAAsjC,EAAAlN,EAAAp2B,EAAA9H,EAAAyB,MAAA2pC,GAAA,MACA6uC,EAAAJ,IAAApsE,EAAAywB,GAAAkN,GACA8uC,EAAAD,OAAAC,GAAAH,GAAAtsE,EAIA,KAAAzN,EAAA,EAAeA,EAAA0J,IAAO1J,EAEtB,GADAyN,EAAAkB,EAAA3O,GAAAorC,EAAAnC,EAAAxnC,EAAAzB,KAAAyB,GACA,MAAA2pC,OAAA,IAGO,CAEP,GADAn+B,EAAAitE,EAAAL,GAAAzuC,IACAn+B,EAAA,SAAAgC,OAAA,YAAAm8B,EACA,IAAAn+B,IAAA8sE,GAAA,SAAA9qE,OAAA,cAAAm8B,EACAn+B,GAAAs3B,SAAAt3B,EAAAs3B,SAAA/8B,KAAAiG,GACAR,EAAAs3B,UAAA92B,GACAA,EAAAR,aATA,CACA,GAAA+wB,EAAA,SAAA/uB,OAAA,iBACA+uB,GAAAvwB,EAWA,IAAAuwB,EAAA,SAAA/uB,OAAA,UAIA,IAHA+uB,EAAA/wB,OAAA6sE,GACA97C,EAAAwH,WAAA,SAAA/3B,GAAoCA,EAAA83B,MAAA93B,EAAAR,OAAAs4B,MAAA,IAAoC77B,IAAO87B,WAAAC,IAC/EzH,EAAA/wB,OAAA,KACAvD,EAAA,WAAAuF,OAAA,QAEA,OAAA+uB,GA5CA,GAAAE,GAAA6K,GACAE,EAAAD,EAsDA,OARAgxC,GAAA97C,GAAA,SAAAp8B,GACA,MAAAyO,WAAArQ,QAAAg+B,EAAAuK,GAAA3mC,GAAAk4E,GAAA97C,GAGA87C,EAAA/wC,SAAA,SAAAnnC,GACA,MAAAyO,WAAArQ,QAAA+oC,EAAAR,GAAA3mC,GAAAk4E,GAAA/wC,GAGA+wC,EA0EAlwC,IAAAzqC,UAAAD,OAAA+Y,OAAAitB,GAAA/lC,UA0BA,IAAA0N,IAAA,WAMA,QAAAA,GAAAixB,GACA,GAAA/zB,GAAA8/B,GAAA/L,EAOA,IAJA/zB,EAAAsuE,UAAA4B,GAAAlwE,EAAAgD,OAAA8I,GAAA9L,EAAAwQ,EACAxQ,EAAAu7B,WAAA40C,GAGA3B,EAAAz6C,EAAAwH,WAAA60C,OAIA,CACA,GAAA12C,GAAA3F,EACA1wB,EAAA0wB,EACAzwB,EAAAywB,CACAA,GAAAwH,WAAA,SAAA/3B,GACAA,EAAA3L,EAAA6hC,EAAA7hC,IAAA6hC,EAAAl2B,GACAA,EAAA3L,EAAAwL,EAAAxL,IAAAwL,EAAAG,GACAA,EAAA83B,MAAAh4B,EAAAg4B,QAAAh4B,EAAAE,IAEA,IAAAuK,GAAA2rB,IAAAr2B,EAAA,EAAAkrE,EAAA70C,EAAAr2B,GAAA,EACA8+C,EAAAp0C,EAAA2rB,EAAA7hC,EACAi2D,EAAArlD,GAAApF,EAAAxL,EAAAkW,EAAAo0C,GACA4L,EAAArlD,GAAApF,EAAAg4B,OAAA,EACAvH,GAAAwH,WAAA,SAAA/3B,GACAA,EAAA3L,GAAA2L,EAAA3L,EAAAsqD,GAAA2L,EACAtqD,EAAAjI,EAAAiI,EAAA83B,MAAAyyB,IAIA,MAAAh6B,GAOA,QAAAm8C,GAAApiE,GACA,GAAAwsB,GAAAxsB,EAAAwsB,SACAi1C,EAAAzhE,EAAA9K,OAAAs3B,SACAzkC,EAAAiY,EAAA/X,EAAAw5E,EAAAzhE,EAAA/X,EAAA,OACA,IAAAukC,EAAA,CACAmF,GAAA3xB,EACA,IAAAuiE,IAAA/1C,EAAA,GAAA9pB,EAAA8pB,IAAArkC,OAAA,GAAAua,GAAA,CACA3a,IACAiY,EAAA0C,EAAA3a,EAAA2a,EAAA+9D,EAAAzgE,EAAAlL,EAAA/M,EAAA+M,GACAkL,EAAAhC,EAAAgC,EAAA0C,EAAA6/D,GAEAviE,EAAA0C,EAAA6/D,MAEKx6E,KACLiY,EAAA0C,EAAA3a,EAAA2a,EAAA+9D,EAAAzgE,EAAAlL,EAAA/M,EAAA+M,GAEAkL,GAAA9K,OAAA0e,EAAA4uD,EAAAxiE,EAAAjY,EAAAiY,EAAA9K,OAAA0e,GAAA6tD,EAAA,IAIA,QAAAY,GAAAriE,GACAA,EAAAlL,EAAA/K,EAAAiW,EAAA0C,EAAA1C,EAAA9K,OAAA8I,EACAgC,EAAAhC,GAAAgC,EAAA9K,OAAA8I,EAcA,QAAAwkE,GAAAxiE,EAAAjY,EAAA+pC,GACA,GAAA/pC,EAAA,CAUA,IATA,GAQA0pC,GARAgxC,EAAAziE,EACA0iE,EAAA1iE,EACA6xB,EAAA9pC,EACA46E,EAAAF,EAAAvtE,OAAAs3B,SAAA,GACAo2C,EAAAH,EAAAzkE,EACA6kE,EAAAH,EAAA1kE,EACA8kE,EAAAjxC,EAAA7zB,EACA+kE,EAAAJ,EAAA3kE,EAEA6zB,EAAAR,GAAAQ,GAAA4wC,EAAArxC,GAAAqxC,GAAA5wC,GAAA4wC,GACAE,EAAAvxC,GAAAuxC,GACAD,EAAArxC,GAAAqxC,GACAA,EAAA5zE,EAAAkR,EACAyxB,EAAAI,EAAAnvB,EAAAogE,EAAAL,EAAA//D,EAAAkgE,EAAAnC,EAAA5uC,EAAA/8B,EAAA2tE,EAAA3tE,GACA28B,EAAA,IACAH,GAAAM,GAAAC,EAAA7xB,EAAA8xB,GAAA9xB,EAAAyxB,GACAmxC,GAAAnxC,EACAoxC,GAAApxC,GAEAqxC,GAAAjxC,EAAA7zB,EACA4kE,GAAAH,EAAAzkE,EACA+kE,GAAAJ,EAAA3kE,EACA6kE,GAAAH,EAAA1kE,CAEA6zB,KAAAR,GAAAqxC,KACAA,EAAAxwE,EAAA2/B,EACA6wC,EAAA1kE,GAAA8kE,EAAAD,GAEAJ,IAAArxC,GAAAuxC,KACAA,EAAAzwE,EAAAuwE,EACAE,EAAA3kE,GAAA4kE,EAAAG,EACAjxC,EAAA9xB,GAGA,MAAA8xB,GAGA,QAAAwwC,GAAA5sE,GACAA,EAAA3L,GAAA4Q,EACAjF,EAAAjI,EAAAiI,EAAA83B,MAAA5yB,EAxHA,GAAA6lE,GAAAtvC,GACAx2B,EAAA,EACAC,EAAA,EACA8lE,EAAA,IAoIA,OAZA1rE,GAAAyrE,WAAA,SAAA12E,GACA,MAAAyO,WAAArQ,QAAAs4E,EAAA12E,EAAAiL,GAAAyrE,GAGAzrE,EAAA/H,KAAA,SAAAlD,GACA,MAAAyO,WAAArQ,QAAAu4E,GAAA,EAAA/lE,GAAA5Q,EAAA,GAAA6Q,GAAA7Q,EAAA,GAAAiL,GAAA0rE,EAAA,MAAA/lE,EAAAC,IAGA5F,EAAA0rE,SAAA,SAAA32E,GACA,MAAAyO,WAAArQ,QAAAu4E,GAAA,EAAA/lE,GAAA5Q,EAAA,GAAA6Q,GAAA7Q,EAAA,GAAAiL,GAAA0rE,GAAA/lE,EAAAC,GAAA,MAGA5F,GAGA69B,GAAA,SAAA39B,EAAAW,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAN,GADAkB,EAAA1B,EAAAs3B,SAEAvkC,GAAA,EACA0J,EAAAiF,EAAAzO,OACAwb,EAAAzO,EAAAxK,QAAAsL,EAAAF,GAAAZ,EAAAxK,QAEAzC,EAAA0J,GACA+D,EAAAkB,EAAA3O,GAAAyN,EAAAG,KAAAH,EAAAK,KACAL,EAAAI,KAAAJ,EAAAM,GAAAF,GAAAJ,EAAAhL,MAAAiZ,GAIA8+B,IAAA,EAAAnyC,KAAA8C,KAAA,MAgDA4vE,GAAA,QAAA3qB,GAAAnmB,GAEA,QAAA8wC,GAAA9tE,EAAAW,EAAAC,EAAAC,EAAAC,GACAi8B,GAAAC,EAAAh9B,EAAAW,EAAAC,EAAAC,EAAAC,GAOA,MAJAgtE,GAAA9wC,MAAA,SAAAnoC,GACA,MAAAsuD,IAAAtuD,MAAA,EAAAA,EAAA,IAGAi5E,GACCvgC,IAEDwgC,GAAA,WAYA,QAAAC,GAAAj9C,GAQA,MAPAA,GAAApwB,GACAowB,EAAAnwB,GAAA,EACAmwB,EAAAlwB,GAAA4E,EACAsrB,EAAAjwB,GAAA4E,EACAqrB,EAAAwH,WAAAo0C,GACAsB,GAAA,GACA5+D,GAAA0hB,EAAAwH,WAAAk0C,IACA17C,EAGA,QAAA47C,GAAAnsE,GACA,GAAAkG,GAAAunE,EAAAztE,EAAA83B,OACA33B,EAAAH,EAAAG,GAAA+F,EACA9F,EAAAJ,EAAAI,GAAA8F,EACA7F,EAAAL,EAAAK,GAAA6F,EACA5F,EAAAN,EAAAM,GAAA4F,CACA7F,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAN,EAAAG,KACAH,EAAAI,KACAJ,EAAAK,KACAL,EAAAM,KACAN,EAAA82B,WACA5wB,EAAAunE,EAAAztE,EAAA83B,MAAA,GAAA/T,EAAA/jB,GAAA,EACAG,GAAAutE,EAAA1tE,GAAAkG,EACA9F,GAAAutE,EAAA3tE,GAAAkG,EACA7F,GAAAutE,EAAA5tE,GAAAkG,EACA5F,GAAAutE,EAAA7tE,GAAAkG,EACA7F,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAwtE,EAAA9tE,EAAAG,EAAAC,EAAAC,EAAAC,IA1CA,GAAAwtE,GAAAR,GACAz+D,GAAA,EACA5J,EAAA,EACAC,EAAA,EACAuoE,GAAA,GACA1pD,EAAAkX,GACA0yC,EAAA1yC,GACA2yC,EAAA3yC,GACA4yC,EAAA5yC,GACAyyC,EAAAzyC,EA6EA,OAxCAuyC,GAAA3+D,MAAA,SAAAxa,GACA,MAAAyO,WAAArQ,QAAAoc,IAAAxa,EAAAm5E,GAAA3+D,GAGA2+D,EAAAj2E,KAAA,SAAAlD,GACA,MAAAyO,WAAArQ,QAAAwS,GAAA5Q,EAAA,GAAA6Q,GAAA7Q,EAAA,GAAAm5E,IAAAvoE,EAAAC,IAGAsoE,EAAAM,KAAA,SAAAz5E,GACA,MAAAyO,WAAArQ,QAAAq7E,EAAA9yC,GAAA3mC,GAAAm5E,GAAAM,GAGAN,EAAAnpD,QAAA,SAAAhwB,GACA,MAAAyO,WAAArQ,OAAA+6E,EAAAzpD,aAAA1vB,GAAA2vB,aAAA3vB,GAAAm5E,EAAAzpD,gBAGAypD,EAAAzpD,aAAA,SAAA1vB,GACA,MAAAyO,WAAArQ,QAAAsxB,EAAA,kBAAA1vB,KAAA23E,IAAA33E,GAAAm5E,GAAAzpD,GAGAypD,EAAAxpD,aAAA,SAAA3vB,GACA,MAAAyO,WAAArQ,OAAA+6E,EAAAG,WAAAt5E,GAAAu5E,aAAAv5E,GAAAw5E,cAAAx5E,GAAAq5E,YAAAr5E,GAAAm5E,EAAAG,cAGAH,EAAAG,WAAA,SAAAt5E,GACA,MAAAyO,WAAArQ,QAAAk7E,EAAA,kBAAAt5E,KAAA23E,IAAA33E,GAAAm5E,GAAAG,GAGAH,EAAAI,aAAA,SAAAv5E,GACA,MAAAyO,WAAArQ,QAAAm7E,EAAA,kBAAAv5E,KAAA23E,IAAA33E,GAAAm5E,GAAAI,GAGAJ,EAAAK,cAAA,SAAAx5E,GACA,MAAAyO,WAAArQ,QAAAo7E,EAAA,kBAAAx5E,KAAA23E,IAAA33E,GAAAm5E,GAAAK,GAGAL,EAAAE,YAAA,SAAAr5E,GACA,MAAAyO,WAAArQ,QAAAi7E,EAAA,kBAAAr5E,KAAA23E,IAAA33E,GAAAm5E,GAAAE,GAGAF,GAGAO,GAAA,SAAAvuE,EAAAW,EAAAC,EAAAC,EAAAC,GAWA,QAAA4rE,GAAA35E,EAAAwN,EAAA/K,EAAAmL,EAAAC,EAAAC,EAAAC,GACA,GAAA/N,GAAAwN,EAAA,GACA,GAAAC,GAAAkB,EAAA3O,EAGA,OAFAyN,GAAAG,KAAAH,EAAAI,KACAJ,EAAAK,KAAAL,EAAAM,KACA,OAQA,IALA,GAAA0tE,GAAAtgB,EAAAn7D,GACA07E,EAAAj5E,EAAA,EAAAg5E,EACA//D,EAAA1b,EAAA,EACA0sD,EAAAl/C,EAAA,EAEAkO,EAAAgxC,GAAA,CACA,GAAAC,GAAAjxC,EAAAgxC,IAAA,CACAyO,GAAAxO,GAAA+uB,EAAAhgE,EAAAixC,EAAA,EACAD,EAAAC,EAGA,GAAAgvB,GAAAxgB,EAAAz/C,GAAA+/D,EACAG,EAAAn5E,EAAAk5E,CAEA,IAAA5tE,EAAAF,EAAAC,EAAAF,EAAA,CACA,GAAAiuE,IAAAhuE,EAAA+tE,EAAA7tE,EAAA4tE,GAAAl5E,CACAk3E,GAAA35E,EAAA0b,EAAAigE,EAAA/tE,EAAAC,EAAAC,EAAA+tE,GACAlC,EAAAj+D,EAAAlO,EAAAouE,EAAAhuE,EAAAiuE,EAAA/tE,EAAAC,OACK,CACL,GAAA+tE,IAAAluE,EAAAguE,EAAA9tE,EAAA6tE,GAAAl5E,CACAk3E,GAAA35E,EAAA0b,EAAAigE,EAAA/tE,EAAAC,EAAAiuE,EAAA/tE,GACA4rE,EAAAj+D,EAAAlO,EAAAouE,EAAAE,EAAAjuE,EAAAC,EAAAC,IAvCA,GACA/N,GACAyuD,EAFA9/C,EAAA1B,EAAAs3B,SACA76B,EAAAiF,EAAAzO,OACAi7D,EAAA,GAAA5xD,OAAAG,EAAA,EAEA,KAAAyxD,EAAA,GAAA1M,EAAAzuD,EAAA,EAA6BA,EAAA0J,IAAO1J,EACpCm7D,EAAAn7D,EAAA,GAAAyuD,GAAA9/C,EAAA3O,GAAAyC,KAGAk3E,GAAA,EAAAjwE,EAAAuD,EAAAxK,MAAAmL,EAAAC,EAAAC,EAAAC,IAoCAguE,GAAA,SAAA9uE,EAAAW,EAAAC,EAAAC,EAAAC,IACA,EAAAd,EAAAs4B,MAAAqF,GAAAD,IAAA19B,EAAAW,EAAAC,EAAAC,EAAAC,IAGAiuE,GAAA,QAAA5rB,GAAAnmB,GAEA,QAAA+xC,GAAA/uE,EAAAW,EAAAC,EAAAC,EAAAC,GACA,IAAA5L,EAAA8K,EAAAgvE,YAAA95E,EAAA8nC,UAUA,IATA,GAAA9nC,GACAof,EACA5S,EACA3O,EAEA0J,EADA8D,GAAA,EAEAuI,EAAA5T,EAAAjC,OACAuC,EAAAwK,EAAAxK,QAEA+K,EAAAuI,GAAA,CAEA,IADAwL,EAAApf,EAAAqL,GAAAmB,EAAA4S,EAAAgjB,SACAvkC,EAAAuhB,EAAA9e,MAAA,EAAAiH,EAAAiF,EAAAzO,OAAiDF,EAAA0J,IAAO1J,EAAAuhB,EAAA9e,OAAAkM,EAAA3O,GAAAyC,KACxD8e,GAAAmpB,KAAAC,GAAAppB,EAAA3T,EAAAC,EAAAC,EAAAD,IAAAE,EAAAF,GAAA0T,EAAA9e,SACAmoC,GAAArpB,EAAA3T,EAAAC,EAAAD,IAAAE,EAAAF,GAAA2T,EAAA9e,QAAAsL,GACAtL,GAAA8e,EAAA9e,UAGAwK,GAAAgvE,UAAA95E,EAAA6nC,GAAAC,EAAAh9B,EAAAW,EAAAC,EAAAC,EAAAC,GACA5L,EAAA8nC,QAQA,MAJA+xC,GAAA/xC,MAAA,SAAAnoC,GACA,MAAAsuD,IAAAtuD,MAAA,EAAAA,EAAA,IAGAk6E,GACCxhC,IAED0hC,GAAA,SAAAp6E,EAAA0D,GAMA,QAAA22E,KACA,GAAAn8E,GAEAyN,EADA/D,EAAAiF,EAAAzO,OAEAk8E,EAAA,EACAC,EAAA,CAEA,KAAAr8E,EAAA,EAAeA,EAAA0J,IAAO1J,EACtByN,EAAAkB,EAAA3O,GAAAo8E,GAAA3uE,EAAA3L,EAAAu6E,GAAA5uE,EAAAjI,CAGA,KAAA42E,IAAA1yE,EAAA5H,EAAAu6E,IAAA3yE,EAAAlE,EAAAxF,EAAA,EAAiDA,EAAA0J,IAAO1J,EACxDyN,EAAAkB,EAAA3O,GAAAyN,EAAA3L,GAAAs6E,EAAA3uE,EAAAjI,GAAA62E,EAjBA,GAAA1tE,EAiCA,OA/BA,OAAA7M,MAAA,GACA,MAAA0D,MAAA,GAkBA22E,EAAA3nC,WAAA,SAAA3nC,GACA8B,EAAA9B,GAGAsvE,EAAAr6E,EAAA,SAAA+K,GACA,MAAA0D,WAAArQ,QAAA4B,GAAA+K,EAAAsvE,GAAAr6E,GAGAq6E,EAAA32E,EAAA,SAAAqH,GACA,MAAA0D,WAAArQ,QAAAsF,GAAAqH,EAAAsvE,GAAA32E,GAGA22E,GAGAG,GAAA,SAAAx6E,GACA,kBACA,MAAAA,KAIAy6E,GAAA,WACA,aAAAl0E,KAAAmmD,SAAA,KAWAguB,GAAA,SAAApoE,GAQA,QAAA+nE,KAoBA,QAAAlsE,GAAAwsE,EAAA7uE,EAAAC,EAAAC,EAAAC,GACA,GAAAtM,GAAAg7E,EAAAh7E,KAAAi7E,EAAAD,EAAAtsE,IAAAwsE,EAAAD,CACA,MAAAj7E,EAiBA,MAAAmM,GAAAygD,EAAAl+C,GAAArC,EAAAugD,EAAAl+C,GAAAtC,EAAA+uE,EAAAzsE,GAAApC,EAAA6uE,EAAAzsE,CAhBA,IAAA1O,EAAAe,MAAAxC,EAAA,CACA,GAAA8B,GAAAusD,EAAA5sD,EAAAK,EAAAL,EAAAqpC,GACAtlC,EAAAo3E,EAAAn7E,EAAA+D,EAAA/D,EAAAupC,GACA92B,EAAApS,IAAA0D,GACA0O,GAAA/D,MACA,IAAArO,MAAAy6E,KAAAroE,GAAApS,KACA,IAAA0D,MAAA+2E,KAAAroE,GAAA1O,KACA0O,GAAA/D,GAAA+D,EAAA7L,KAAA8C,KAAA+I,OAAA2oE,EACApvE,EAAAq9B,KAAAhpC,GAAAoS,IAAA/D,GAAAusE,OAAAI,EAAAJ,IACAjvE,EAAAu9B,KAAAxlC,GAAA0O,GAAA/D,EACA1O,EAAAqpC,IAAAhpC,GAAAqO,EAAA,EAAAA,GACA1O,EAAAupC,IAAAxlC,EAAA2K,KAzBA,OARAnQ,GACA+M,EACAU,EACA4gD,EACAuuB,EACAD,EACAG,EANApzE,EAAAiF,EAAAzO,OAQAwb,EAAA,EAAmBA,EAAAqhE,IAAgBrhE,EAEnC,IADA3O,EAAA2B,EAAAC,EAAAk8B,GAAAE,IAAAqpB,WAAA4oB,GACAh9E,EAAA,EAAiBA,EAAA0J,IAAO1J,EACxByN,EAAAkB,EAAA3O,GACA28E,EAAAM,EAAAj9E,GAAA88E,EAAAH,IACAtuB,EAAA5gD,EAAA3L,EAAA2L,EAAAq9B,GACA8xC,EAAAnvE,EAAAjI,EAAAiI,EAAAu9B,GACAj+B,EAAAumD,MAAArjD,GA2BA,QAAA+sE,GAAAP,GACA,GAAAA,EAAAh7E,KAAA,MAAAg7E,GAAAtsE,EAAA8sE,EAAAR,EAAAh7E,KAAAe,MACA,QAAAxC,GAAAy8E,EAAAtsE,EAAA,EAA4BnQ,EAAA,IAAOA,EACnCy8E,EAAAz8E,IAAAy8E,EAAAz8E,GAAAmQ,EAAAssE,EAAAtsE,IACAssE,EAAAtsE,EAAAssE,EAAAz8E,GAAAmQ,GAKA,QAAAqkC,KACA,GAAA7lC,EAAA,CACA,GAAA3O,GAAA0J,EAAAiF,EAAAzO,MAEA,KADA+8E,EAAA,GAAA1zE,OAAAG,GACA1J,EAAA,EAAeA,EAAA0J,IAAO1J,EAAAi9E,EAAAj9E,IAAAoU,EAAAzF,EAAA3O,KAAA2O,IA/DtB,GAAAA,GACAsuE,EACAJ,EAAA,EACAE,EAAA,CAgFA,OA9EA,kBAAA3oE,OAAAkoE,GAAA,MAAAloE,EAAA,GAAAA,IA6DA+nE,EAAA3nC,WAAA,SAAA3nC,GACA8B,EAAA9B,EACA2nC,KAGA2nC,EAAAY,WAAA,SAAAlwE,GACA,MAAA0D,WAAArQ,QAAA68E,GAAAlwE,EAAAsvE,GAAAY,GAGAZ,EAAAU,SAAA,SAAAhwE,GACA,MAAA0D,WAAArQ,QAAA28E,GAAAhwE,EAAAsvE,GAAAU,GAGAV,EAAA/nE,OAAA,SAAAvH,GACA,MAAA0D,WAAArQ,QAAAkU,EAAA,kBAAAvH,KAAAyvE,IAAAzvE,GAAA2nC,IAAA2nC,GAAA/nE,GAGA+nE,GAaAe,GAAA,SAAA7D,GAaA,QAAA8D,GAAAD,GACA,SAAA70E,KAAAuO,IAAAzO,EAAA+0E,EAAAvqD,OAAAnwB,OAAA2F,EAAA+0E,EAAA54E,OAAA9B,QAGA,QAAA25E,GAAAlmE,GACA,OAAAyF,GAAA,EAAAhS,EAAA2vE,EAAAn5E,OAAqCwb,EAAAqhE,IAAgBrhE,EACrD,OAAAwhE,GAAAvqD,EAAAruB,EAAAxC,EAAA0D,EAAA0O,EAAApN,EAAA9G,EAAA,EAAuDA,EAAA0J,IAAO1J,EAC9Dk9E,EAAA7D,EAAAr5E,GAAA2yB,EAAAuqD,EAAAvqD,OAAAruB,EAAA44E,EAAA54E,OACAxC,EAAAwC,EAAAxC,EAAAwC,EAAAwmC,GAAAnY,EAAA7wB,EAAA6wB,EAAAmY,IAAAyxC,KACA/2E,EAAAlB,EAAAkB,EAAAlB,EAAA0mC,GAAArY,EAAAntB,EAAAmtB,EAAAqY,IAAAuxC,KACAroE,EAAA7L,KAAA8C,KAAArJ,IAAA0D,KACA0O,KAAAkpE,EAAAp9E,IAAAkU,EAAA+B,EAAAonE,EAAAr9E,GACA8B,GAAAoS,EAAA1O,GAAA0O,EACA5P,EAAAwmC,IAAAhpC,GAAAgF,EAAAw2E,EAAAt9E,IACAsE,EAAA0mC,IAAAxlC,EAAAsB,EACA6rB,EAAAmY,IAAAhpC,GAAAgF,EAAA,EAAAA,GACA6rB,EAAAqY,IAAAxlC,EAAAsB,EAKA,QAAA0tC,KACA,GAAA7lC,EAAA,CAEA,GAAA3O,GAIAk9E,EAHAxzE,EAAAiF,EAAAzO,OACA6V,EAAAsjE,EAAAn5E,OACAirC,EAAAjiC,EAAAyF,EAAAuvB,EAGA,KAAAl+B,EAAA,EAAAmI,EAAA,GAAAoB,OAAAG,GAAqC1J,EAAA0J,IAAO1J,EAC5CmI,EAAAnI,GAAA,CAGA,KAAAA,EAAA,EAAeA,EAAA+V,IAAO/V,EACtBk9E,EAAA7D,EAAAr5E,GAAAk9E,EAAA16E,MAAAxC,EACA,gBAAAk9E,GAAAvqD,SAAAuqD,EAAAvqD,OAAAuY,GAAAC,EAAA+xC,EAAAvqD,SACA,gBAAAuqD,GAAA54E,SAAA44E,EAAA54E,OAAA4mC,GAAAC,EAAA+xC,EAAA54E,WACA6D,EAAA+0E,EAAAvqD,OAAAnwB,SAAA2F,EAAA+0E,EAAA54E,OAAA9B,MAGA,KAAAxC,EAAA,EAAAs9E,EAAA,GAAA/zE,OAAAwM,GAAoC/V,EAAA+V,IAAO/V,EAC3Ck9E,EAAA7D,EAAAr5E,GAAAs9E,EAAAt9E,GAAAmI,EAAA+0E,EAAAvqD,OAAAnwB,QAAA2F,EAAA+0E,EAAAvqD,OAAAnwB,OAAA2F,EAAA+0E,EAAA54E,OAAA9B,OAGA66E,GAAA,GAAA9zE,OAAAwM,GAAAwnE,IACAH,EAAA,GAAA7zE,OAAAwM,GAAAynE,KAGA,QAAAD,KACA,GAAA5uE,EAEA,OAAA3O,GAAA,EAAA0J,EAAA2vE,EAAAn5E,OAAqCF,EAAA0J,IAAO1J,EAC5Cq9E,EAAAr9E,IAAA68E,EAAAxD,EAAAr5E,KAAAq5E,GAIA,QAAAmE,KACA,GAAA7uE,EAEA,OAAA3O,GAAA,EAAA0J,EAAA2vE,EAAAn5E,OAAqCF,EAAA0J,IAAO1J,EAC5Co9E,EAAAp9E,IAAAy9E,EAAApE,EAAAr5E,KAAAq5E,GAzEA,GAEAgE,GAEAD,EACAzuE,EACAxG,EACAm1E,EAPAp/C,EAAA+M,GACA4xC,EAAAM,EAEAM,EAAAnB,GAAA,IAKAS,EAAA,CA8FA,OA5FA,OAAA1D,UAmEA8C,EAAA3nC,WAAA,SAAA3nC,GACA8B,EAAA9B,EACA2nC,KAGA2nC,EAAA9C,MAAA,SAAAxsE,GACA,MAAA0D,WAAArQ,QAAAm5E,EAAAxsE,EAAA2nC,IAAA2nC,GAAA9C,GAGA8C,EAAAj+C,GAAA,SAAArxB,GACA,MAAA0D,WAAArQ,QAAAg+B,EAAArxB,EAAAsvE,GAAAj+C,GAGAi+C,EAAAY,WAAA,SAAAlwE,GACA,MAAA0D,WAAArQ,QAAA68E,GAAAlwE,EAAAsvE,GAAAY,GAGAZ,EAAAU,SAAA,SAAAhwE,GACA,MAAA0D,WAAArQ,QAAA28E,EAAA,kBAAAhwE,KAAAyvE,IAAAzvE,GAAA0wE,IAAApB,GAAAU,GAGAV,EAAAsB,SAAA,SAAA5wE,GACA,MAAA0D,WAAArQ,QAAAu9E,EAAA,kBAAA5wE,KAAAyvE,IAAAzvE,GAAA2wE,IAAArB,GAAAsB,GAGAtB,GAWAuB,GAAA,GACAC,GAAAt1E,KAAAkoD,IAAA,EAAAloD,KAAA8C,KAAA,IAEAyyE,GAAA,SAAAjvE,GAaA,QAAAgW,KACAua,IACApH,EAAAv4B,KAAA,OAAAq+E,GACA3nE,EAAA4nE,IACAC,EAAA51E,OACA4vB,EAAAv4B,KAAA,MAAAq+E,IAIA,QAAA1+C,KACA,GAAAl/B,GAAAyN,EAAA/D,EAAAiF,EAAAzO,MAQA,KANA+V,IAAA8nE,EAAA9nE,GAAA+nE,EAEAC,EAAA50E,KAAA,SAAA8yE,GACAA,EAAAlmE,KAGAjW,EAAA,EAAeA,EAAA0J,IAAO1J,EACtByN,EAAAkB,EAAA3O,GACA,MAAAyN,EAAA0gC,GAAA1gC,EAAA3L,GAAA2L,EAAAq9B,IAAAozC,GACAzwE,EAAA3L,EAAA2L,EAAA0gC,GAAA1gC,EAAAq9B,GAAA,GACA,MAAAr9B,EAAA2gC,GAAA3gC,EAAAjI,GAAAiI,EAAAu9B,IAAAkzC,GACAzwE,EAAAjI,EAAAiI,EAAA2gC,GAAA3gC,EAAAu9B,GAAA,GAIA,QAAAmzC,KACA,OAAA1wE,GAAAzN,EAAA,EAAA0J,EAAAiF,EAAAzO,OAA2CF,EAAA0J,IAAO1J,EAAA,CAElD,GADAyN,EAAAkB,EAAA3O,GAAAyN,EAAAjL,MAAAxC,EACAgN,MAAAS,EAAA3L,IAAAkL,MAAAS,EAAAjI,GAAA,CACA,GAAA4O,GAAAspE,GAAAr1E,KAAA8C,KAAAnL,GAAAmU,EAAAnU,EAAA29E,EACAlwE,GAAA3L,EAAAsS,EAAA/L,KAAAoC,IAAA0J,GACA1G,EAAAjI,EAAA4O,EAAA/L,KAAAuC,IAAAuJ,IAEAnH,MAAAS,EAAAq9B,KAAA99B,MAAAS,EAAAu9B,OACAv9B,EAAAq9B,GAAAr9B,EAAAu9B,GAAA,IAKA,QAAAozC,GAAAjC,GAEA,MADAA,GAAA3nC,YAAA2nC,EAAA3nC,WAAA7lC,GACAwtE,EAvDA,GAAAyB,GACA3nE,EAAA,EACA4nE,EAAA,KACAG,EAAA,EAAA31E,KAAAI,IAAAo1E,EAAA,OACAE,EAAA,EACAG,EAAA,GACAD,EAAA/0E,IACA40E,EAAAj7D,GAAA8B,GACAmT,EAAAzX,GAAA,aAoDA,OAlDA,OAAA1R,UAgDAwvE,IAEAP,GACA1+C,OAEAlc,QAAA,WACA,MAAA86D,GAAA96D,QAAA2B,GAAAi5D,GAGA11E,KAAA,WACA,MAAA41E,GAAA51E,OAAA01E,GAGAjvE,MAAA,SAAA9B,GACA,MAAA0D,WAAArQ,QAAAyO,EAAA9B,EAAAsxE,IAAAF,EAAA50E,KAAA+0E,GAAAR,GAAAjvE,GAGAsH,MAAA,SAAApJ,GACA,MAAA0D,WAAArQ,QAAA+V,GAAApJ,EAAA+wE,GAAA3nE,GAGA4nE,SAAA,SAAAhxE,GACA,MAAA0D,WAAArQ,QAAA29E,GAAAhxE,EAAA+wE,GAAAC,GAGAG,WAAA,SAAAnxE,GACA,MAAA0D,WAAArQ,QAAA89E,GAAAnxE,EAAA+wE,IAAAI,GAGAD,YAAA,SAAAlxE,GACA,MAAA0D,WAAArQ,QAAA69E,GAAAlxE,EAAA+wE,GAAAG,GAGAG,cAAA,SAAArxE,GACA,MAAA0D,WAAArQ,QAAAg+E,EAAA,EAAArxE,EAAA+wE,GAAA,EAAAM,GAGA/B,MAAA,SAAAz7D,EAAA7T,GACA,MAAA0D,WAAArQ,OAAA,SAAA2M,EAAAoxE,EAAAh8E,OAAAye,GAAAu9D,EAAA30E,IAAAoX,EAAA09D,EAAAvxE,IAAA+wE,GAAAK,EAAAv4E,IAAAgb,IAGAwqB,KAAA,SAAAppC,EAAA0D,EAAA4O,GACA,GAEA1B,GACAC,EACAC,EACAnF,EACA4wE,EANAr+E,EAAA,EACA0J,EAAAiF,EAAAzO,MAUA,KAHA,MAAAkU,IAAA/F,IACA+F,KAEApU,EAAA,EAAiBA,EAAA0J,IAAO1J,EACxByN,EAAAkB,EAAA3O,GACA0S,EAAA5Q,EAAA2L,EAAA3L,EACA6Q,EAAAnN,EAAAiI,EAAAjI,EACAoN,EAAAF,IAAAC,IACAC,EAAAwB,IAAAiqE,EAAA5wE,EAAA2G,EAAAxB,EAGA,OAAAyrE,IAGA7lD,GAAA,SAAA9X,EAAA7T,GACA,MAAA0D,WAAArQ,OAAA,GAAA43B,EAAAU,GAAA9X,EAAA7T,GAAA+wE,GAAA9lD,EAAAU,GAAA9X,MAKA49D,GAAA,WAUA,QAAAnC,GAAAtvE,GACA,GAAA7M,GAAA0J,EAAAiF,EAAAzO,OAAA6M,EAAA2B,EAAAC,EAAA08B,GAAAC,IAAA8oB,WAAAmqB,EACA,KAAAtoE,EAAApJ,EAAA7M,EAAA,EAA0BA,EAAA0J,IAAO1J,EAAAyN,EAAAkB,EAAA3O,GAAA+M,EAAAumD,MAAArjD,GAGjC,QAAAukC,KACA,GAAA7lC,EAAA,CACA,GAAA3O,GAAA0J,EAAAiF,EAAAzO,MAEA,KADAm9E,EAAA,GAAA9zE,OAAAG,GACA1J,EAAA,EAAeA,EAAA0J,IAAO1J,EAAAq9E,EAAAr9E,IAAA68E,EAAAluE,EAAA3O,KAAA2O,IAGtB,QAAA4vE,GAAA9B,GACA,GAAA7sE,GAAAG,EAAAomD,EAAAC,EAAAp2D,EAAA68E,EAAA,CAGA,IAAAJ,EAAAv8E,OAAA,CACA,IAAAi2D,EAAAC,EAAAp2D,EAAA,EAA+BA,EAAA,IAAOA,GACtC4P,EAAA6sE,EAAAz8E,MAAA+P,EAAAH,EAAAnN,SACAo6E,GAAA9sE,EAAAomD,GAAApmD,EAAAH,EAAA9N,EAAAs0D,GAAArmD,EAAAH,EAAApK,EAGAi3E,GAAA36E,EAAAq0D,EAAA0mB,EACAJ,EAAAj3E,EAAA4wD,EAAAymB,MAIA,CACAjtE,EAAA6sE,EACA7sE,EAAA9N,EAAA8N,EAAAnO,KAAAK,EACA8N,EAAApK,EAAAoK,EAAAnO,KAAA+D,CACA,GAAAq3E,IAAAQ,EAAAztE,EAAAnO,KAAAe,aACAoN,IAAA3I,MAGAw1E,EAAAh6E,MAAAo6E,EAGA,QAAA5sE,GAAAwsE,EAAA3uE,EAAAjB,EAAAwE,GACA,IAAAorE,EAAAh6E,MAAA,QAEA,IAAA0zD,GAAAsmB,EAAA36E,EAAA2L,EAAA3L,EACAs0D,EAAAqmB,EAAAj3E,EAAAiI,EAAAjI,EACA1F,EAAAuR,EAAAvD,EACAoG,EAAAiiD,IAAAC,GAIA,IAAAt2D,IAAA0+E,EAAAtqE,EAQA,MAPAA,GAAAuqE,IACA,IAAAtoB,MAAAomB,KAAAroE,GAAAiiD,KACA,IAAAC,MAAAmmB,KAAAroE,GAAAkiD,KACAliD,EAAAwqE,IAAAxqE,EAAA7L,KAAA8C,KAAAuzE,EAAAxqE,IACAzG,EAAAq9B,IAAAqrB,EAAAsmB,EAAAh6E,MAAAwT,EAAA/B,EACAzG,EAAAu9B,IAAAorB,EAAAqmB,EAAAh6E,MAAAwT,EAAA/B,IAEA,CAIA,MAAAuoE,EAAAv8E,QAAAgU,GAAAuqE,GAAA,EAGAhC,EAAAh7E,OAAAgM,GAAAgvE,EAAAx1E,QACA,IAAAkvD,MAAAomB,KAAAroE,GAAAiiD,KACA,IAAAC,MAAAmmB,KAAAroE,GAAAkiD,KACAliD,EAAAwqE,IAAAxqE,EAAA7L,KAAA8C,KAAAuzE,EAAAxqE,IAGA,GAAAuoE,GAAAh7E,OAAAgM,IACA3N,EAAAu9E,EAAAZ,EAAAh7E,KAAAe,OAAAyT,EAAA/B,EACAzG,EAAAq9B,IAAAqrB,EAAAr2D,EACA2N,EAAAu9B,IAAAorB,EAAAt2D,SACK28E,IAAAx1E,OAlFL,GAAA0H,GACAlB,EACAwI,EAEAonE,EADAR,EAAAP,IAAA,IAEAoC,EAAA,EACAD,EAAApwE,IACAmwE,EAAA,GAmGA,OArBArC,GAAA3nC,WAAA,SAAA3nC,GACA8B,EAAA9B,EACA2nC,KAGA2nC,EAAAU,SAAA,SAAAhwE,GACA,MAAA0D,WAAArQ,QAAA28E,EAAA,kBAAAhwE,KAAAyvE,IAAAzvE,GAAA2nC,IAAA2nC,GAAAU,GAGAV,EAAAwC,YAAA,SAAA9xE,GACA,MAAA0D,WAAArQ,QAAAw+E,EAAA7xE,IAAAsvE,GAAA9zE,KAAA8C,KAAAuzE,IAGAvC,EAAAyC,YAAA,SAAA/xE,GACA,MAAA0D,WAAArQ,QAAAu+E,EAAA5xE,IAAAsvE,GAAA9zE,KAAA8C,KAAAszE,IAGAtC,EAAAtyB,MAAA,SAAAh9C,GACA,MAAA0D,WAAArQ,QAAAs+E,EAAA3xE,IAAAsvE,GAAA9zE,KAAA8C,KAAAqzE,IAGArC,GAGA0C,GAAA,SAAA/8E,GAQA,QAAAq6E,GAAAlmE,GACA,OAAAxI,GAAAzN,EAAA,EAAA0J,EAAAiF,EAAAzO,OAA2CF,EAAA0J,IAAO1J,EAClDyN,EAAAkB,EAAA3O,GAAAyN,EAAAq9B,KAAA38B,EAAAnO,GAAAyN,EAAA3L,GAAAu7E,EAAAr9E,GAAAiW,EAIA,QAAAu+B,KACA,GAAA7lC,EAAA,CACA,GAAA3O,GAAA0J,EAAAiF,EAAAzO,MAGA,KAFAm9E,EAAA,GAAA9zE,OAAAG,GACAyE,EAAA,GAAA5E,OAAAG,GACA1J,EAAA,EAAeA,EAAA0J,IAAO1J,EACtBq9E,EAAAr9E,GAAAgN,MAAAmB,EAAAnO,IAAA8B,EAAA6M,EAAA3O,KAAA2O,IAAA,GAAAkuE,EAAAluE,EAAA3O,KAAA2O,IAnBA,GACAA,GACA0uE,EACAlvE,EAHA0uE,EAAAP,GAAA,GAoCA,OA/BA,kBAAAx6E,OAAAw6E,GAAA,MAAAx6E,EAAA,GAAAA,IAkBAq6E,EAAA3nC,WAAA,SAAA3nC,GACA8B,EAAA9B,EACA2nC,KAGA2nC,EAAAU,SAAA,SAAAhwE,GACA,MAAA0D,WAAArQ,QAAA28E,EAAA,kBAAAhwE,KAAAyvE,IAAAzvE,GAAA2nC,IAAA2nC,GAAAU,GAGAV,EAAAr6E,EAAA,SAAA+K,GACA,MAAA0D,WAAArQ,QAAA4B,EAAA,kBAAA+K,KAAAyvE,IAAAzvE,GAAA2nC,IAAA2nC,GAAAr6E,GAGAq6E,GAGA2C,GAAA,SAAAt5E,GAQA,QAAA22E,GAAAlmE,GACA,OAAAxI,GAAAzN,EAAA,EAAA0J,EAAAiF,EAAAzO,OAA2CF,EAAA0J,IAAO1J,EAClDyN,EAAAkB,EAAA3O,GAAAyN,EAAAu9B,KAAA58B,EAAApO,GAAAyN,EAAAjI,GAAA63E,EAAAr9E,GAAAiW,EAIA,QAAAu+B,KACA,GAAA7lC,EAAA,CACA,GAAA3O,GAAA0J,EAAAiF,EAAAzO,MAGA,KAFAm9E,EAAA,GAAA9zE,OAAAG,GACA0E,EAAA,GAAA7E,OAAAG,GACA1J,EAAA,EAAeA,EAAA0J,IAAO1J,EACtBq9E,EAAAr9E,GAAAgN,MAAAoB,EAAApO,IAAAwF,EAAAmJ,EAAA3O,KAAA2O,IAAA,GAAAkuE,EAAAluE,EAAA3O,KAAA2O,IAnBA,GACAA,GACA0uE,EACAjvE,EAHAyuE,EAAAP,GAAA,GAoCA,OA/BA,kBAAA92E,OAAA82E,GAAA,MAAA92E,EAAA,GAAAA,IAkBA22E,EAAA3nC,WAAA,SAAA3nC,GACA8B,EAAA9B,EACA2nC,KAGA2nC,EAAAU,SAAA,SAAAhwE,GACA,MAAA0D,WAAArQ,QAAA28E,EAAA,kBAAAhwE,KAAAyvE,IAAAzvE,GAAA2nC,IAAA2nC,GAAAU,GAGAV,EAAA32E,EAAA,SAAAqH,GACA,MAAA0D,WAAArQ,QAAAsF,EAAA,kBAAAqH,KAAAyvE,IAAAzvE,GAAA2nC,IAAA2nC,GAAA32E,GAGA22E,GAOAtwC,GAAA,WACAhtC,EAAAi5B,MAAAinD,iBACAlgF,EAAAi5B,MAAA0T,4BAGAgM,GAAA,SAAA9L,GACA,GAAA1N,GAAA0N,EAAAvoC,SAAAka,gBACAuuB,EAAArqC,GAAAmqC,GAAAlT,GAAA,iBAAAqT,IAAA,EACA,kBAAA7N,GACA4N,EAAApT,GAAA,mBAAAqT,IAAA,IAEA7N,EAAA+N,WAAA/N,EAAAxgB,MAAAsuB,cACA9N,EAAAxgB,MAAAsuB,cAAA,SAmBAkzC,GAAA,SAAAl9E,GACA,kBACA,MAAAA,IAiBAkqC,IAAA3sC,UAAAm5B,GAAA,WACA,GAAA/1B,GAAAwC,KAAA4H,EAAA2rB,GAAAvoB,MAAAhL,KAAA4H,EAAA0D,UACA,OAAA9N,KAAAwC,KAAA4H,EAAA5H,KAAAxC,EAgBA,IAAAw8E,IAAA,WAUA,QAAAA,GAAArzC,GACAA,EACApT,GAAA,iBAAA0mD,GACA1mD,GAAA,kBAAA2mD,GACA3mD,GAAA,iBAAA4mD,GACA5mD,GAAA,iCAAA6mD,GACA7hE,MAAA,+CAGA,QAAA0hE,KACA,IAAAroC,GAAAhyB,EAAA5U,MAAAhL,KAAAsL,WAAA,CACA,GAAA+uE,GAAA/nC,EAAA,QAAAgoC,EAAAtvE,MAAAhL,KAAAsL,WAAA4kC,GAAAlwC,KAAAsL,UACA+uE,KACA/9E,GAAA1C,EAAAi5B,MAAA4T,MAAAlT,GAAA,iBAAAgnD,GAAA,GAAAhnD,GAAA,eAAAinD,GAAA,GACAjoC,GAAA34C,EAAAi5B,MAAA4T,MACAH,KACAm0C,GAAA,EACAJ,EAAA,WAGA,QAAAE,KACA3zC,KACA6zC,GAAA,EACAC,EAAAxqC,MAAA,QAGA,QAAAsqC,KACAl+E,GAAA1C,EAAAi5B,MAAA4T,MAAAlT,GAAA,oCACAiT,GAAA5sC,EAAAi5B,MAAA4T,KAAAg0C,GACA7zC,KACA8zC,EAAAxqC,MAAA,OAGA,QAAAgqC,KACA,GAAAt6D,EAAA5U,MAAAhL,KAAAsL,WAAA,CACA,GAEAvQ,GAAAs/E,EAFAM,EAAA/gF,EAAAi5B,MAAAof,eACAnnC,EAAAwvE,EAAAtvE,MAAAhL,KAAAsL,WACA7G,EAAAk2E,EAAA1/E,MAEA,KAAAF,EAAA,EAAeA,EAAA0J,IAAO1J,GACtBs/E,EAAA/nC,EAAAqoC,EAAA5/E,GAAAmsC,WAAAp8B,EAAAymE,GAAAvxE,KAAAsL,cACAg7B,KACA+zC,EAAA,WAKA,QAAAF,KACA,GACAp/E,GAAAs/E,EADAM,EAAA/gF,EAAAi5B,MAAAof,eACAxtC,EAAAk2E,EAAA1/E,MAEA,KAAAF,EAAA,EAAeA,EAAA0J,IAAO1J,GACtBs/E,EAAAK,EAAAC,EAAA5/E,GAAAmsC,eACAN,KACAyzC,EAAA,SAKA,QAAAD,KACA,GACAr/E,GAAAs/E,EADAM,EAAA/gF,EAAAi5B,MAAAof,eACAxtC,EAAAk2E,EAAA1/E,MAIA,KAFA22C,GAAAjzB,aAAAizB,GACAA,EAAAhzB,WAAA,WAAyCgzB,EAAA,MAAsB,KAC/D72C,EAAA,EAAeA,EAAA0J,IAAO1J,GACtBs/E,EAAAK,EAAAC,EAAA5/E,GAAAmsC,eACAZ,KACA+zC,EAAA,QAKA,QAAA/nC,GAAArZ,EAAAqhD,EAAAlrE,EAAAC,EAAA0kB,GACA,GAAAhhB,GAAAtF,EAAAC,EAAAgB,EAAAU,EAAAkrE,EAAArhD,GACA2hD,EAAAnoC,EAAA3oC,MAEA,IAAAgqB,GAAA,GAAAiT,IAAAizC,EAAA,cAAAjnE,EAAAkmB,EAAAgO,EAAAv4B,EAAA,GAAAA,EAAA,OAAAksE,GAAA,WACA,cAAAhhF,EAAAi5B,MAAAmU,QAAAj0B,EAAAi0B,EAAAh8B,MAAAqE,EAAA0kB,MACAtmB,EAAAsF,EAAAlW,EAAA6R,EAAA,MACAhB,EAAAqF,EAAAxS,EAAAmO,EAAA,OACA,KAGA,eAAA2rE,GAAA1+D,GACA,GAAAlX,GAAA4yC,EAAA3oC,CACA,QAAAiN,GACA,YAAA++D,EAAAzhD,GAAAohD,EAAA51E,EAAAwiC,GAA2D,MAC3D,iBAAAyzC,GAAAzhD,KAAAgO,CACA,YAAAv4B,EAAAU,EAAAkrE,EAAArhD,GAAAx0B,EAAAwiC,EAEAnT,GAAA,GAAAiT,IAAAizC,EAAAr+D,EAAA5I,EAAAkmB,EAAAx0B,EAAAiK,EAAA,GAAAjB,EAAAiB,EAAA,GAAAhB,EAAAgB,EAAA,GAAA2oC,EAAA,GAAA3oC,EAAA,GAAA2oC,EAAA,GAAAujC,KAAA5vE,MAAA4vE,GAAAj/D,EAAAtM,EAAA0kB,KApGA,GAMA0mD,GACA7oC,EAPAhyB,EAAAunB,GACAmzC,EAAAjzC,GACAL,EAAAM,GACAozC,KACAjoC,EAAAr3B,GAAA,sBACA6rB,EAAA,CAoHA,OAjBA+yC,GAAAp6D,OAAA,SAAAhY,GACA,MAAA0D,WAAArQ,QAAA2kB,EAAA,kBAAAhY,KAAAmyE,KAAAnyE,GAAAoyE,GAAAp6D,GAGAo6D,EAAAM,UAAA,SAAA1yE,GACA,MAAA0D,WAAArQ,QAAAq/E,EAAA,kBAAA1yE,KAAAmyE,GAAAnyE,GAAAoyE,GAAAM,GAGAN,EAAAhzC,QAAA,SAAAp/B,GACA,MAAA0D,WAAArQ,QAAA+rC,EAAA,kBAAAp/B,KAAAmyE,GAAAnyE,GAAAoyE,GAAAhzC,GAGAgzC,EAAAzmD,GAAA,WACA,GAAA/1B,GAAAi1C,EAAAlf,GAAAvoB,MAAAynC,EAAAnnC,UACA,OAAA9N,KAAAi1C,EAAAunC,EAAAx8E,GAGAw8E,GAGAa,GAAA,SAAAh+E,GACA,kBACA,MAAAA,IAyBA4qC,IAAArtC,WACAwvD,YAAAniB,GAEA9I,OAAA,SAAAm8C,EAAAtyE,GACA,GAAAR,GAAA+yE,EAAAC,CAEA,IAAAF,EAAA,CAKA,GAJAtyE,EAAAo/B,EAAAkzC,EACAtyE,EAAAq/B,EAAAizC,EAAAjzC,EACAizC,EAAAjzC,IAAAizC,EAAAjzC,EAAAD,EAAAp/B,GACAsyE,EAAAjzC,EAAAr/B,EACAsyE,EAAAnzC,EAAA,CAEA,IADAmzC,IAAAnzC,EACAmzC,EAAA34D,GAAA24D,IAAA34D,CACA24D,GAAA34D,EAAA3Z,MAEAsyE,GAAAnzC,EAAAn/B,CAEAR,GAAA8yE,MACK96E,MAAA4H,GACLkzE,EAAA9yC,GAAAhoC,KAAA4H,GACAY,EAAAo/B,EAAA,KACAp/B,EAAAq/B,EAAAizC,EACAA,EAAAlzC,EAAAkzC,EAAA34D,EAAA3Z,EACAR,EAAA8yE,IAEAtyE,EAAAo/B,EAAAp/B,EAAAq/B,EAAA,KACA7nC,KAAA4H,EAAAY,EACAR,EAAA,KAOA,KALAQ,EAAA2Z,EAAA3Z,EAAAm/B,EAAA,KACAn/B,EAAA+a,EAAAvb,EACAQ,EAAAmO,GAAA,EAEAmkE,EAAAtyE,EACAR,KAAA2O,GACAokE,EAAA/yE,EAAAub,EACAvb,IAAA+yE,EAAA54D,GACA64D,EAAAD,EAAApzC,EACAqzC,KAAArkE,GACA3O,EAAA2O,EAAAqkE,EAAArkE,GAAA,EACAokE,EAAApkE,GAAA,EACAmkE,EAAAC,IAEAD,IAAA9yE,EAAA2/B,IACAG,GAAA9nC,KAAAgI,GACA8yE,EAAA9yE,EACAA,EAAA8yE,EAAAv3D,GAEAvb,EAAA2O,GAAA,EACAokE,EAAApkE,GAAA,EACAoxB,GAAA/nC,KAAA+6E,MAGAC,EAAAD,EAAA54D,EACA64D,KAAArkE,GACA3O,EAAA2O,EAAAqkE,EAAArkE,GAAA,EACAokE,EAAApkE,GAAA,EACAmkE,EAAAC,IAEAD,IAAA9yE,EAAAma,IACA4lB,GAAA/nC,KAAAgI,GACA8yE,EAAA9yE,EACAA,EAAA8yE,EAAAv3D,GAEAvb,EAAA2O,GAAA,EACAokE,EAAApkE,GAAA,EACAmxB,GAAA9nC,KAAA+6E,KAGA/yE,EAAA8yE,EAAAv3D,CAEAvjB,MAAA4H,EAAA+O,GAAA,GAGA3Z,OAAA,SAAAwL,GACAA,EAAAq/B,IAAAr/B,EAAAq/B,EAAAD,EAAAp/B,EAAAo/B,GACAp/B,EAAAo/B,IAAAp/B,EAAAo/B,EAAAC,EAAAr/B,EAAAq/B,GACAr/B,EAAAq/B,EAAAr/B,EAAAo/B,EAAA,IAEA,IACAqzC,GAGAj5E,EACAk8D,EALAl2D,EAAAQ,EAAA+a,EAEAmb,EAAAl2B,EAAA2Z,EACA9Z,EAAAG,EAAAm/B,CAsCA,IAhCA3lC,EAFA08B,EACAr2B,EACA2/B,GAAA3/B,GADAq2B,EADAr2B,EAIAL,EACAA,EAAAma,IAAA3Z,EAAAR,EAAAma,EAAAngB,EACAgG,EAAA2/B,EAAA3lC,EAEAhC,KAAA4H,EAAA5F,EAGA08B,GAAAr2B,GACA61D,EAAAl8D,EAAA2U,EACA3U,EAAA2U,EAAAnO,EAAAmO,EACA3U,EAAAmgB,EAAAuc,EACAA,EAAAnb,EAAAvhB,EACAA,IAAAqG,GACAL,EAAAhG,EAAAuhB,EACAvhB,EAAAuhB,EAAA/a,EAAA+a,EACA/a,EAAAxG,EAAA2lC,EACA3/B,EAAAma,EAAA3Z,EACAxG,EAAA2lC,EAAAt/B,EACAA,EAAAkb,EAAAvhB,IAEAA,EAAAuhB,EAAAvb,EACAA,EAAAhG,EACAwG,EAAAxG,EAAA2lC,KAGAu2B,EAAA11D,EAAAmO,EACAnO,EAAAxG,GAGAwG,MAAA+a,EAAAvb,IACAk2D,EAAA,CACA,GAAA11D,KAAAmO,EAAyC,YAAhBnO,EAAAmO,GAAA,EAEzB,IACA,GAAAnO,IAAAxI,KAAA4H,EAAA,KACA,IAAAY,IAAAR,EAAAma,GAQA,GAPA84D,EAAAjzE,EAAA2/B,EACAszC,EAAAtkE,IACAskE,EAAAtkE,GAAA,EACA3O,EAAA2O,GAAA,EACAmxB,GAAA9nC,KAAAgI,GACAizE,EAAAjzE,EAAA2/B,GAEAszC,EAAA94D,GAAA84D,EAAA94D,EAAAxL,GACAskE,EAAAtzC,GAAAszC,EAAAtzC,EAAAhxB,EAAA,CACAskE,EAAAtzC,GAAAszC,EAAAtzC,EAAAhxB,IACAskE,EAAA94D,EAAAxL,GAAA,EACAskE,EAAAtkE,GAAA,EACAoxB,GAAA/nC,KAAAi7E,GACAA,EAAAjzE,EAAA2/B,GAEAszC,EAAAtkE,EAAA3O,EAAA2O,EACA3O,EAAA2O,EAAAskE,EAAAtzC,EAAAhxB,GAAA,EACAmxB,GAAA9nC,KAAAgI,GACAQ,EAAAxI,KAAA4H,CACA,YAUA,IAPAqzE,EAAAjzE,EAAAma,EACA84D,EAAAtkE,IACAskE,EAAAtkE,GAAA,EACA3O,EAAA2O,GAAA,EACAoxB,GAAA/nC,KAAAgI,GACAizE,EAAAjzE,EAAAma,GAEA84D,EAAA94D,GAAA84D,EAAA94D,EAAAxL,GACAskE,EAAAtzC,GAAAszC,EAAAtzC,EAAAhxB,EAAA,CACAskE,EAAA94D,GAAA84D,EAAA94D,EAAAxL,IACAskE,EAAAtzC,EAAAhxB,GAAA,EACAskE,EAAAtkE,GAAA,EACAmxB,GAAA9nC,KAAAi7E,GACAA,EAAAjzE,EAAAma,GAEA84D,EAAAtkE,EAAA3O,EAAA2O,EACA3O,EAAA2O,EAAAskE,EAAA94D,EAAAxL,GAAA,EACAoxB,GAAA/nC,KAAAgI,GACAQ,EAAAxI,KAAA4H,CACA,OAGAqzE,EAAAtkE,GAAA,EACAnO,EAAAR,EACAA,IAAAub,SACK/a,EAAAmO,EAELnO,OAAAmO,GAAA,KAkVA,IAEA80B,IAwQAO,GACA1uC,GACAwlC,GACAqF,GA7QAoD,MA4EAO,MA4LAzC,GAAA,KACA+B,GAAA,KA6DAoC,IAAApzC,WACAwvD,YAAApc,GAEA0tC,SAAA,WACA,GAAA/yC,GAAAnoC,KAAAmoC,KAEA,OAAAnoC,MAAA1C,MAAA6G,IAAA,SAAAslC,GACA,GAAAiT,GAAAjT,EAAApB,UAAAlkC,IAAA,SAAApJ,GAAoD,MAAA6uC,IAAAH,EAAAtB,EAAAptC,KAEpD,OADA2hD,GAAAlgD,KAAAitC,EAAAF,KAAA/sC,KACAkgD,KAIAy+B,UAAA,WACA,GAAAA,MACAhzC,EAAAnoC,KAAAmoC,KAqBA,OAnBAnoC,MAAA1C,MAAAmf,QAAA,SAAAgtB,EAAA1uC,GASA,IARA,GAIA0W,GAJA83B,EAAAE,EAAAF,KACAlB,EAAAoB,EAAApB,UACA9/B,GAAA,EACAuI,EAAAu3B,EAAAptC,OAEAg2C,EAAA9I,EAAAE,EAAAv3B,EAAA,IACAY,EAAAu/B,EAAAvS,OAAA6K,EAAA0H,EAAA5oC,MAAA4oC,EAAAvS,OAEAn2B,EAAAuI,GACAW,EAAAC,EACAu/B,EAAA9I,EAAAE,EAAA9/B,IACAmJ,EAAAu/B,EAAAvS,OAAA6K,EAAA0H,EAAA5oC,MAAA4oC,EAAAvS,KACAjtB,GAAAC,GAAA3W,EAAA0W,EAAAlU,OAAAxC,EAAA2W,EAAAnU,OAAA+vC,GAAA/D,EAAA93B,EAAAC,GAAA,GACAypE,EAAA54E,MAAAgnC,EAAA/sC,KAAAiV,EAAAjV,KAAAkV,EAAAlV,SAKA2+E,GAGA/G,MAAA,WACA,MAAAp0E,MAAAmoC,MAAAvoB,OAAA,SAAAsoB,GACA,MAAAA,GAAA7/B,QACKlE,IAAA,SAAA+jC,GACL,OACAxa,OAAAwa,EAAAxJ,KAAAliC,KACA6C,OAAA6oC,EAAA7/B,MAAA7L,SAKAypC,KAAA,SAAAppC,EAAA0D,EAAA4O,GACA,GACAq2B,GADAn2B,EAAArP,KACAklC,EAAA71B,EAAA+rE,QAAA,EACA3xC,EAAAp6B,EAAA/R,MAAA4nC,IAAA71B,EAAA/R,MAAA4nC,EAAA,GACAz3B,EAAA5Q,EAAA4sC,EAAAF,KAAA,GACA77B,EAAAnN,EAAAkpC,EAAAF,KAAA,GACA57B,EAAAF,IAAAC,GAEA,GACA+7B,GAAAp6B,EAAA/R,MAAAkoC,EAAAN,KAAA,KACAuE,EAAApB,UAAA5rB,QAAA,SAAA7R,GACA,GAAAs9B,GAAA74B,EAAA84B,MAAAv9B,GAAAkI,EAAAo1B,EAAAxJ,IACA,IAAA5rB,IAAA22B,EAAAF,MAAAz2B,MAAAo1B,EAAA7/B,OAAA,CACA,GAAAw9B,GAAAhpC,EAAAiW,EAAA,GACAizB,EAAAxlC,EAAAuS,EAAA,GACAkE,EAAA6uB,IAAAE,GACA/uB,GAAArJ,MAAAqJ,EAAAkuB,EAAApyB,EAAAvV,gBAEK,OAAA2nC,EAIL,OAFA71B,GAAA+rE,OAAA51C,EAEA,MAAAr2B,GAAAxB,GAAAwB,IAAAs6B,EAAAF,KAAA,MAIA,IAAA8xC,IAAA,WAKA,QAAAA,GAAA7+E,GACA,UAAAgxC,IAAAhxC,EAAA2H,IAAA,SAAAtB,EAAA9H,GACA,GAAAgY,IAAA3P,KAAAiU,MAAA65C,EAAAruD,EAAA9H,EAAAyB,GAAA6sC,OAAAjmC,KAAAiU,MAAA85C,EAAAtuD,EAAA9H,EAAAyB,GAAA6sC,OAGA,OAFAt2B,GAAAxV,MAAAxC,EACAgY,EAAAvW,KAAAqG,EACAkQ,IACK26B,GAVL,GAAAwjB,GAAA3pB,GACA4pB,EAAA3pB,GACAkG,EAAA,IAuCA,OA5BA2tC,GAAAH,SAAA,SAAA1+E,GACA,MAAA6+E,GAAA7+E,GAAA0+E,YAGAG,EAAAjH,MAAA,SAAA53E,GACA,MAAA6+E,GAAA7+E,GAAA43E,SAGAiH,EAAAF,UAAA,SAAA3+E,GACA,MAAA6+E,GAAA7+E,GAAA2+E,aAGAE,EAAAx+E,EAAA,SAAA+K,GACA,MAAA0D,WAAArQ,QAAAi2D,EAAA,kBAAAtpD,KAAAizE,IAAAjzE,GAAAyzE,GAAAnqB,GAGAmqB,EAAA96E,EAAA,SAAAqH,GACA,MAAA0D,WAAArQ,QAAAk2D,EAAA,kBAAAvpD,KAAAizE,IAAAjzE,GAAAyzE,GAAAlqB,GAGAkqB,EAAA3tC,OAAA,SAAA9lC,GACA,MAAA0D,WAAArQ,QAAAyyC,EAAA,MAAA9lC,EAAA,QAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,QAAAyzE,GAAA3tC,OAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGA2tC,EAAAt7E,KAAA,SAAA6H,GACA,MAAA0D,WAAArQ,QAAAyyC,EAAA,MAAA9lC,EAAA,cAAAA,EAAA,IAAAA,EAAA,KAAAyzE,GAAA3tC,MAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAGA2tC,GAGAC,GAAA,SAAAz+E,GACA,kBACA,MAAAA,IAgBA+wC,IAAAxzC,WACAwvD,YAAAhc,GACAzzB,MAAA,SAAA1D,GACA,WAAAA,EAAAzW,KAAA,GAAA4tC,IAAA5tC,KAAAyW,IAAAzW,KAAAnD,EAAAmD,KAAAO,IAEAoZ,UAAA,SAAA9c,EAAA0D,GACA,WAAA1D,EAAA,IAAA0D,EAAAP,KAAA,GAAA4tC,IAAA5tC,KAAAyW,EAAAzW,KAAAnD,EAAAmD,KAAAyW,EAAA5Z,EAAAmD,KAAAO,EAAAP,KAAAyW,EAAAlW,IAEAyK,MAAA,SAAAoE,GACA,OAAAA,EAAA,GAAApP,KAAAyW,EAAAzW,KAAAnD,EAAAuS,EAAA,GAAApP,KAAAyW,EAAAzW,KAAAO,IAEAg7E,OAAA,SAAA1+E,GACA,MAAAA,GAAAmD,KAAAyW,EAAAzW,KAAAnD,GAEA2+E,OAAA,SAAAj7E,GACA,MAAAA,GAAAP,KAAAyW,EAAAzW,KAAAO,GAEA4tB,OAAA,SAAAstD,GACA,QAAAA,EAAA,GAAAz7E,KAAAnD,GAAAmD,KAAAyW,GAAAglE,EAAA,GAAAz7E,KAAAO,GAAAP,KAAAyW,IAEAilE,QAAA,SAAA7+E,GACA,OAAAA,EAAAmD,KAAAnD,GAAAmD,KAAAyW,GAEAklE,QAAA,SAAAp7E,GACA,OAAAA,EAAAP,KAAAO,GAAAP,KAAAyW,GAEAmlE,SAAA,SAAA/+E,GACA,MAAAA,GAAAiN,OAAAkiB,OAAAnvB,EAAA8iB,QAAAxb,IAAAnE,KAAA07E,QAAA17E,MAAAmE,IAAAtH,EAAAsxB,OAAAtxB,KAEAg/E,SAAA,SAAAt7E,GACA,MAAAA,GAAAuJ,OAAAkiB,OAAAzrB,EAAAof,QAAAxb,IAAAnE,KAAA27E,QAAA37E,MAAAmE,IAAA5D,EAAA4tB,OAAA5tB,KAEAqpB,SAAA,WACA,mBAAA5pB,KAAAnD,EAAA,IAAAmD,KAAAO,EAAA,WAAAP,KAAAyW,EAAA,KAIA,IAAAq3B,IAAA,GAAAF,IAAA,MAEAp1B,IAAApe,UAAAwzC,GAAAxzC,SAUA,IAAA0hF,IAAA,WACAliF,EAAAi5B,MAAAinD,iBACAlgF,EAAAi5B,MAAA0T,4BAyBAw1C,GAAA,WAiBA,QAAAA,GAAAp1C,GACAA,EACApT,GAAA,aAAAyoD,GACAzoD,GAAA,iBAAA0mD,GACA1mD,GAAA,gBAAA0oD,GACA1oD,GAAA,kBAAA2mD,GACA3mD,GAAA,iBAAA4mD,GACA5mD,GAAA,iCAAA6mD,GACA7hE,MAAA,+CACA+2B,SAAA,SAAAhB,IA8CA,QAAAn0B,GAAA3B,EAAA/B,GAEA,MADAA,GAAArT,KAAAE,IAAA44E,EAAA94E,KAAAuO,IAAAwqE,EAAA1lE,IACAA,IAAA+B,EAAA/B,EAAA+B,EAAA,GAAAo1B,IAAAn3B,EAAA+B,EAAA3b,EAAA2b,EAAAjY,GAGA,QAAAoZ,GAAAnB,EAAA6+B,EAAAnW,GACA,GAAArkC,GAAAw6C,EAAA,GAAAnW,EAAA,GAAA1oB,EAAA/B,EAAAlW,EAAA82C,EAAA,GAAAnW,EAAA,GAAA1oB,EAAA/B,CACA,OAAA5Z,KAAA2b,EAAA3b,GAAA0D,IAAAiY,EAAAjY,EAAAiY,EAAA,GAAAo1B,IAAAp1B,EAAA/B,EAAA5Z,EAAA0D,GAGA,QAAA67E,GAAA5jE,EAAAk1B,GACA,GAAAjgC,GAAArK,KAAAuO,IAAA,EAAA6G,EAAAkjE,QAAAhuC,EAAA,OAAA/kC,IAAAvF,KAAAE,IAAA,EAAAkV,EAAAkjE,QAAAhuC,EAAA,OAAA7kC,GACA6E,EAAAtK,KAAAuO,IAAA,EAAA6G,EAAAmjE,QAAAjuC,EAAA,OAAA9kC,IAAAxF,KAAAE,IAAA,EAAAkV,EAAAmjE,QAAAjuC,EAAA,OAAA5kC,EACA,OAAA2E,IAAAC,EAAA8K,EAAAmB,UAAAlM,EAAAC,GAAA8K,EAGA,QAAA0zC,GAAAxe,GACA,SAAAA,EAAA,QAAAA,EAAA,WAAAA,EAAA,QAAAA,EAAA,UAGA,QAAAxU,GAAAmjD,EAAA7jE,EAAA8kB,GACA++C,EACA9oD,GAAA,wBAAsC8mD,EAAAr6E,KAAAsL,WAAAtI,UACtCuwB,GAAA,qCAAmD8mD,EAAAr6E,KAAAsL,WAAAP,QACnDmvB,MAAA,kBACA,GAAA7qB,GAAArP,KACA+zB,EAAAzoB,UACAgJ,EAAA+lE,EAAAhrE,EAAA0kB,GACAnpB,EAAA8iC,EAAA1iC,MAAAqE,EAAA0kB,GACArlB,EAAA4uB,GAAA4uB,EAAAthD,GACA/P,EAAAuI,KAAAE,IAAAsH,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAhJ,EAAAyN,EAAAw+B,OACAhsC,EAAA,kBAAA2W,KAAAxN,MAAAqE,EAAA0kB,GAAAvb,EACAzd,EAAA0mE,GAAA7/D,EAAAusB,OAAAzf,GAAAqN,OAAAlhB,EAAA+G,EAAA6U,GAAA5U,EAAAssB,OAAAzf,GAAAqN,OAAAlhB,EAAAgH,EAAA4U,GACA,iBAAAzR,GACA,OAAAA,IAAAnD,MACA,CAAkB,GAAAoN,GAAAlU,EAAAiK,GAAAyR,EAAA5b,EAAAoU,EAAA,EAA4BjK,GAAA,GAAA4oC,IAAAn3B,EAAA/H,EAAA,GAAAO,EAAA,GAAAwH,EAAA/H,EAAA,GAAAO,EAAA,GAAAwH,GAC9CnC,EAAAynE,KAAA,KAAA/2E,MAKA,QAAAq1E,GAAAhrE,EAAA0kB,GACA,OAAAzf,GAAAvZ,EAAA,EAAA0J,EAAAi2E,EAAAz/E,OAA2CF,EAAA0J,IAAO1J,EAClD,IAAAuZ,EAAAomE,EAAA3/E,IAAAsU,SACA,MAAAiF,EAGA,WAAAgoE,GAAAjtE,EAAA0kB,GAGA,QAAAuoD,GAAAjtE,EAAA0kB,GACA/zB,KAAAqP,OACArP,KAAA+zB,OACA/zB,KAAAzC,OAAA,EACAyC,KAAAinC,OAAA,EACAjnC,KAAA0tC,SAAA1iC,MAAAqE,EAAA0kB,GAgCA,QAAAioD,KA8BA,QAAAO,KACAjoE,EAAAkoE,MAAA,KACAloE,EAAAvJ,MA/BA,GAAA6U,EAAA5U,MAAAhL,KAAAsL,WAAA,CACA,GAAAgJ,GAAA+lE,EAAAr6E,KAAAsL,WACAtG,EAAAhF,KAAA6tC,OACAp3B,EAAArT,KAAAE,IAAA44E,EAAA94E,KAAAuO,IAAAwqE,EAAAn3E,EAAAyR,EAAArT,KAAAI,IAAA,GAAA5J,EAAAi5B,MAAA4pD,QAAA7iF,EAAAi5B,MAAA6pD,UAAA,cACAhuE,EAAAwhC,GAAAlwC,KAIA,IAAAsU,EAAAkoE,MACAloE,EAAA47B,MAAA,QAAAxhC,EAAA,IAAA4F,EAAA47B,MAAA,QAAAxhC,EAAA,KACA4F,EAAA47B,MAAA,GAAAlrC,EAAAmpB,OAAA7Z,EAAA47B,MAAA,GAAAxhC,IAEAiQ,aAAArK,EAAAkoE,WAIA,IAAAx3E,EAAAyR,MAAA,MAIAnC,GAAA47B,OAAAxhC,EAAA1J,EAAAmpB,OAAAzf,IACA8jC,GAAAxyC,MACAsU,EAAAtR,QAGA84E,KACAxnE,EAAAkoE,MAAA59D,WAAA29D,EAAAI,GACAroE,EAAAynE,KAAA,QAAAK,EAAAziE,EAAAQ,EAAAnV,EAAAyR,GAAAnC,EAAA47B,MAAA,GAAA57B,EAAA47B,MAAA,IAAA57B,EAAAo5B,UAQA,QAAAusC,KAYA,QAAAM,KACAuB,KACAxnE,EAAA07B,OAAA,EACA17B,EAAAynE,KAAA,QAAAK,EAAAziE,EAAArF,EAAAjF,KAAAw+B,OAAAv5B,EAAA47B,MAAA,GAAAA,GAAA57B,EAAAjF,MAAAiF,EAAA47B,MAAA,IAAA57B,EAAAo5B,SAGA,QAAA8sC,KACA1nE,EAAAygB,GAAA,oCACAiT,GAAA5sC,EAAAi5B,MAAA4T,KAAAnyB,EAAA07B,OACA8rC,KACAxnE,EAAAvJ,MArBA,IAAA6mC,GAAAhyB,EAAA5U,MAAAhL,KAAAsL,WAAA,CACA,GAAAgJ,GAAA+lE,EAAAr6E,KAAAsL,WACAwH,EAAAxW,GAAA1C,EAAAi5B,MAAA4T,MAAAlT,GAAA,iBAAAgnD,GAAA,GAAAhnD,GAAA,eAAAinD,GAAA,GACA9rE,EAAAwhC,GAAAlwC,KAEAuyC,IAAA34C,EAAAi5B,MAAA4T,MACAsH,KACAz5B,EAAA47B,OAAAxhC,EAAA1O,KAAA6tC,OAAA1f,OAAAzf,IACA8jC,GAAAxyC,MACAsU,EAAAtR,SAgBA,QAAAi5E,KACA,GAAAr8D,EAAA5U,MAAAhL,KAAAsL,WAAA,CACA,GAAAwG,GAAA9R,KAAA6tC,OACAwJ,EAAAnH,GAAAlwC,MACAkhC,EAAApvB,EAAAqc,OAAAkpB,GACA8kC,EAAArqE,EAAA2E,GAAA7c,EAAAi5B,MAAAwf,SAAA,MACAtgC,EAAAqqE,EAAAziE,EAAAQ,EAAArI,EAAAqqE,GAAA9kC,EAAAnW,GAAAwM,EAAA1iC,MAAAhL,KAAAsL,WAEAwwE,MACA3hD,EAAA,EAAA79B,GAAA0D,MAAA26B,aAAAR,YAAA7/B,KAAA4+B,EAAAnnB,EAAAslC,GACA/6C,GAAA0D,MAAA1F,KAAAyhF,EAAAvjE,UAAAzG,IAGA,QAAAmoE,KACA,GAAAt6D,EAAA5U,MAAAhL,KAAAsL,WAAA,CACA,GAEAvQ,GAAAiK,EAAA0J,EAFA4F,EAAA+lE,EAAAr6E,KAAAsL,WACAqvE,EAAA/gF,EAAAi5B,MAAAof,eACAxtC,EAAAk2E,EAAA1/E,MAGA,KADA8yC,KACAhzC,EAAA,EAAeA,EAAA0J,IAAO1J,EACtBiK,EAAA21E,EAAA5/E,GAAA2T,EAAA6iE,GAAAvxE,KAAA26E,EAAA31E,EAAAkiC,YACAx4B,KAAA1O,KAAA6tC,OAAA1f,OAAAzf,GAAA1J,EAAAkiC,YACA5yB,EAAAsoE,OACAtoE,EAAAuoE,SAAAvoE,EAAAuoE,OAAAnuE,GADA4F,EAAAsoE,OAAAluE,CAGA,OAAAouE,KACAA,EAAAn+D,aAAAm+D,IACAxoE,EAAAuoE,SAAAvoE,EAAAvJ,MAAAkxE,EAAAjxE,MAAAhL,KAAAsL,iBAEA1R,EAAAi5B,MAAA8e,QAAA12C,SAAAwJ,IACAq4E,EAAAl+D,WAAA,WAA6Ck+D,EAAA,MAAwBC,GACrEvqC,GAAAxyC,MACAsU,EAAAtR,WAIA,QAAAm3E,KACA,GAEAp/E,GAAAiK,EAAA0J,EAAAO,EAFAqF,EAAA+lE,EAAAr6E,KAAAsL,WACAqvE,EAAA/gF,EAAAi5B,MAAAof,eACAxtC,EAAAk2E,EAAA1/E,MAIA,KAFA6gF,KACAgB,MAAAn+D,aAAAm+D,IACA/hF,EAAA,EAAeA,EAAA0J,IAAO1J,EACtBiK,EAAA21E,EAAA5/E,GAAA2T,EAAA6iE,GAAAvxE,KAAA26E,EAAA31E,EAAAkiC,YACA5yB,EAAAsoE,QAAAtoE,EAAAsoE,OAAA,KAAA53E,EAAAkiC,WAAA5yB,EAAAsoE,OAAA,GAAAluE,EACA4F,EAAAuoE,QAAAvoE,EAAAuoE,OAAA,KAAA73E,EAAAkiC,aAAA5yB,EAAAuoE,OAAA,GAAAnuE,EAGA,IADA1J,EAAAsP,EAAAjF,KAAAw+B,OACAv5B,EAAAuoE,OAAA,CACA,GAAAxlC,GAAA/iC,EAAAsoE,OAAA,GAAAz7C,EAAA7sB,EAAAsoE,OAAA,GACA17C,EAAA5sB,EAAAuoE,OAAA,GAAAz7C,EAAA9sB,EAAAuoE,OAAA,GACAG,KAAA97C,EAAA,GAAAmW,EAAA,IAAA2lC,KAAA97C,EAAA,GAAAmW,EAAA,IAAA2lC,EACAC,KAAA77C,EAAA,GAAAD,EAAA,IAAA87C,KAAA77C,EAAA,GAAAD,EAAA,IAAA87C,CACAj4E,GAAAmV,EAAAnV,EAAA5B,KAAA8C,KAAA82E,EAAAC,IACAvuE,IAAA2oC,EAAA,GAAAnW,EAAA,OAAAmW,EAAA,GAAAnW,EAAA,OACAjyB,IAAAkyB,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,WAEA,KAAA9sB,EAAAsoE,OACA,MADAluE,GAAA4F,EAAAsoE,OAAA,GAAA3tE,EAAAqF,EAAAsoE,OAAA,GAEAtoE,EAAAynE,KAAA,QAAAK,EAAAziE,EAAA3U,EAAA0J,EAAAO,GAAAqF,EAAAo5B;CAGA,QAAA0sC,KACA,GAEAr/E,GAAAiK,EAFAsP,EAAA+lE,EAAAr6E,KAAAsL,WACAqvE,EAAA/gF,EAAAi5B,MAAAof,eACAxtC,EAAAk2E,EAAA1/E,MAKA,KAHA8yC,KACA6D,GAAAjzB,aAAAizB,GACAA,EAAAhzB,WAAA,WAAyCgzB,EAAA,MAAsBmrC,GAC/DhiF,EAAA,EAAeA,EAAA0J,IAAO1J,EACtBiK,EAAA21E,EAAA5/E,GACAuZ,EAAAsoE,QAAAtoE,EAAAsoE,OAAA,KAAA53E,EAAAkiC,iBAAA5yB,GAAAsoE,OACAtoE,EAAAuoE,QAAAvoE,EAAAuoE,OAAA,KAAA73E,EAAAkiC,kBAAA5yB,GAAAuoE,MAEAvoE,GAAAuoE,SAAAvoE,EAAAsoE,SAAAtoE,EAAAsoE,OAAAtoE,EAAAuoE,aAAAvoE,GAAAuoE,QACAvoE,EAAAsoE,QAAAtoE,EAAAvJ,MA3SA,GAWA+xE,GACAlrC,EAZAhyB,EAAAouB,GACAN,EAAAO,GACAiuC,EAAA,EACAC,EAAA/yE,IACAT,GAAAwzE,EACAtzE,EAAAszE,EACAvzE,EAAAD,EACAG,EAAAD,EACAsxB,EAAA,IACAugD,KACAjoC,EAAAr3B,GAAA,sBAGA2hE,EAAA,IACAJ,EAAA,GAyTA,OA3SAZ,GAAAvjE,UAAA,SAAA0kE,EAAA1kE,GACA,GAAAmuB,GAAAu2C,EAAApkD,UAAAokD,EAAApkD,YAAAokD,CACAv2C,GAAA2I,SAAA,SAAAhB,IACA4uC,IAAAv2C,EACAzN,EAAAgkD,EAAA1kE,GAEAmuB,EAAA6L,YAAApuC,KAAA,WACAi2E,EAAAr6E,KAAAsL,WACAtI,QACA+4E,KAAA,uBAAAvjE,KAAAxN,MAAAhL,KAAAsL,WAAAkN,GACAzN,SAKAgxE,EAAAoB,QAAA,SAAAx2C,EAAAlwB,GACAslE,EAAAqB,QAAAz2C,EAAA,WACA,GAAAu1C,GAAAl8E,KAAA6tC,OAAAp3B,EACA0lE,EAAA,kBAAA1lE,KAAAzL,MAAAhL,KAAAsL,WAAAmL,CACA,OAAAylE,GAAAC,KAIAJ,EAAAqB,QAAA,SAAAz2C,EAAAlwB,GACAslE,EAAAvjE,UAAAmuB,EAAA,WACA,GAAA/7B,GAAA8iC,EAAA1iC,MAAAhL,KAAAsL,WACAwG,EAAA9R,KAAA6tC,OACAwJ,EAAA6U,EAAAthD,GACAs2B,EAAApvB,EAAAqc,OAAAkpB,GACA8kC,EAAA,kBAAA1lE,KAAAzL,MAAAhL,KAAAsL,WAAAmL,CACA,OAAA2lE,GAAAziE,EAAAQ,EAAArI,EAAAqqE,GAAA9kC,EAAAnW,GAAAt2B,MAIAmxE,EAAAsB,YAAA,SAAA12C,EAAA9pC,EAAA0D,GACAw7E,EAAAvjE,UAAAmuB,EAAA,WACA,MAAAy1C,GAAAp8E,KAAA6tC,OAAAl0B,UACA,kBAAA9c,KAAAmO,MAAAhL,KAAAsL,WAAAzO,EACA,kBAAA0D,KAAAyK,MAAAhL,KAAAsL,WAAA/K,GACAmtC,EAAA1iC,MAAAhL,KAAAsL,eA+DAgxE,EAAAliF,WACA4I,MAAA,WAKA,MAJA,OAAAhD,KAAAinC,SACAjnC,KAAAzC,MAAAm9E,EAAAn4E,KAAAvC,MAAA,EACAA,KAAAyxC,KAAA,UAEAzxC,MAEA+7E,KAAA,SAAA7hF,EAAAse,GAMA,MALAxY,MAAAkwC,OAAA,UAAAh2C,IAAA8F,KAAAkwC,MAAA,GAAA13B,EAAA2V,OAAAnuB,KAAAkwC,MAAA,KACAlwC,KAAA48E,QAAA,UAAA1iF,IAAA8F,KAAA48E,OAAA,GAAApkE,EAAA2V,OAAAnuB,KAAA48E,OAAA,KACA58E,KAAA68E,QAAA,UAAA3iF,IAAA8F,KAAA68E,OAAA,GAAArkE,EAAA2V,OAAAnuB,KAAA68E,OAAA,KACA78E,KAAAqP,KAAAw+B,OAAAr1B,EACAxY,KAAAyxC,KAAA,QACAzxC,MAEA+K,IAAA,WAMA,MALA,OAAA/K,KAAAinC,SACAyzC,EAAAj8E,OAAAuB,KAAAzC,MAAA,GACAyC,KAAAzC,OAAA,EACAyC,KAAAyxC,KAAA,QAEAzxC,MAEAyxC,KAAA,SAAA91B,GACAmY,GAAA,GAAA6Z,IAAAouC,EAAApgE,EAAA3b,KAAAqP,KAAAw+B,QAAA4E,EAAAznC,MAAAynC,GAAA92B,EAAA3b,KAAAqP,KAAArP,KAAA+zB,SAmJAgoD,EAAAn8D,OAAA,SAAAhY,GACA,MAAA0D,WAAArQ,QAAA2kB,EAAA,kBAAAhY,KAAA0zE,KAAA1zE,GAAAm0E,GAAAn8D,GAGAm8D,EAAAruC,OAAA,SAAA9lC,GACA,MAAA0D,WAAArQ,QAAAyyC,EAAA,kBAAA9lC,KAAA0zE,MAAA1zE,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAm0E,GAAAruC,GAGAquC,EAAAuB,YAAA,SAAA11E,GACA,MAAA0D,WAAArQ,QAAAihF,GAAAt0E,EAAA,GAAAu0E,GAAAv0E,EAAA,GAAAm0E,IAAAG,EAAAC,IAGAJ,EAAAwB,gBAAA,SAAA31E,GACA,MAAA0D,WAAArQ,QAAA0N,GAAAf,EAAA,MAAAiB,GAAAjB,EAAA,MAAAgB,GAAAhB,EAAA,MAAAkB,GAAAlB,EAAA,MAAAm0E,KAAApzE,EAAAC,IAAAC,EAAAC,KAGAizE,EAAA5hD,SAAA,SAAAvyB,GACA,MAAA0D,WAAArQ,QAAAk/B,GAAAvyB,EAAAm0E,GAAA5hD,GAGA4hD,EAAAxoD,GAAA,WACA,GAAA/1B,GAAAi1C,EAAAlf,GAAAvoB,MAAAynC,EAAAnnC,UACA,OAAA9N,KAAAi1C,EAAAspC,EAAAv+E,GAGAu+E,GAGAjpC,GAAA,SAAAj2C,GACA,kBACA,MAAAA,KAIAg2C,GAAA,SAAAxzC,EAAAsc,EAAAmd,GACA94B,KAAAX,SACAW,KAAA2b,OACA3b,KAAA84B,aAOAyX,GAAA,WACA32C,EAAAi5B,MAAAinD,iBACAlgF,EAAAi5B,MAAA0T,4BAGAqK,IAAiBn1B,KAAA,QACjBk1B,IAAkBl1B,KAAA,SAClB41B,IAAmB51B,KAAA,UACnB61B,IAAmB71B,KAAA,UAEnB+L,IACA/L,KAAA,IACAi0B,SAAA,SAAAvrC,IAAAqqC,IACAxgB,MAAA,SAAAnxB,EAAA+N,GAAyB,MAAA/N,QAAA,GAAA+N,EAAA,QAAA/N,EAAA,GAAA+N,EAAA,SACzBmjB,OAAA,SAAAyvD,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxB91D,IACAjM,KAAA,IACAi0B,SAAA,SAAAvrC,IAAAqqC,IACAxgB,MAAA,SAAAztB,EAAAqK,GAAyB,MAAArK,MAAAqK,EAAA,MAAArK,EAAA,KAAAqK,EAAA,MAAArK,EAAA,MACzBwtB,OAAA,SAAAyvD,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBC,IACAhiE,KAAA,KACAi0B,SAAA,qCAAAvrC,IAAAqqC,IACAxgB,MAAA,SAAAwvD,GAAuB,MAAAA,IACvBzvD,OAAA,SAAAyvD,GAAwB,MAAAA,KAGxBhuC,IACAH,QAAA,YACAvW,UAAA,OACAr0B,EAAA,YACAmG,EAAA,YACAmI,EAAA,YACAlY,EAAA,YACA6iF,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGAtsC,IACA3mC,EAAA,IACA/P,EAAA,IACA6iF,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGArsC,IACA/sC,EAAA,IACAsO,EAAA,IACA2qE,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGA1rC,IACA9C,QAAA,EACAvW,UAAA,EACAr0B,EAAA,KACAmG,EAAA,EACAmI,EAAA,KACAlY,GAAA,EACA6iF,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGAzrC,IACA/C,QAAA,EACAvW,UAAA,EACAr0B,GAAA,EACAmG,EAAA,KACAmI,EAAA,EACAlY,EAAA,KACA6iF,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GAyCAzuC,GAAA,WACA,MAAAF,IAAAuuC,KAyZAj4E,GAAApC,KAAAoC,IACAG,GAAAvC,KAAAuC,IACAm4E,GAAA16E,KAAAkoD,GACAyyB,GAAAD,GAAA,EACAE,GAAA,EAAAF,GACAG,GAAA76E,KAAAE,IAWA46E,GAAA,WAMA,QAAAA,GAAA7kE,GACA,GAOA5C,GACA5Z,EACA8L,EACA8E,EACA1S,EACAwN,EAZA9D,EAAA4U,EAAApe,OACAkjF,KACAC,EAAAz+D,GAAAlb,GACA45E,KACAC,KACA5lD,EAAA4lD,EAAA5lD,OAAA,GAAAp0B,OAAAG,GACA6pE,EAAA,GAAAhqE,OAAAG,IASkB,KAAlBgS,EAAA,EAAA1b,GAAA,IAAkBA,EAAA0J,GAAA,CACE,IAApB5H,EAAA,EAAA0L,GAAA,IAAoBA,EAAA9D,GACpB5H,GAAAwc,EAAAte,GAAAwN,EAEA41E,GAAA57E,KAAA1F,GACAwhF,EAAA97E,KAAAod,GAAAlb,IACAgS,GAAA5Z,EAuBkB,IAnBlB0hF,GAAAH,EAAAvuD,KAAA,SAAAjuB,EAAAC,GACA,MAAA08E,GAAAJ,EAAAv8E,GAAAu8E,EAAAt8E,MAIA28E,GAAAH,EAAA5hE,QAAA,SAAA5Z,EAAA9H,GACA8H,EAAAgtB,KAAA,SAAAjuB,EAAAC,GACA,MAAA28E,GAAAnlE,EAAAte,GAAA6G,GAAAyX,EAAAte,GAAA8G,QAOA4U,EAAAwnE,GAAA,EAAAD,GAAAhyE,EAAAvH,GAAAgS,EACAhJ,EAAAgJ,EAAAzK,EAAAgyE,GAAAv5E,EAIA5H,EAAA,EAAA9B,GAAA,IAAkBA,EAAA0J,GAAA,CACG,IAArBkE,EAAA9L,EAAA0L,GAAA,IAAqBA,EAAA9D,GAAA,CACrB,GAAAg6E,GAAAL,EAAArjF,GACA2jF,EAAAL,EAAAI,GAAAl2E,GACAuK,EAAAuG,EAAAolE,GAAAC,GACA/hC,EAAA9/C,EACAq/C,EAAAr/C,GAAAiW,EAAA2D,CACA63D,GAAAoQ,EAAAj6E,EAAAg6E,IACAlhF,MAAAkhF,EACAE,SAAAD,EACA9yE,WAAA+wC,EACA7wC,SAAAowC,EACA1+C,MAAAsV,GAGA4lB,EAAA+lD,IACAlhF,MAAAkhF,EACA7yE,WAAAjD,EACAmD,SAAAjP,EACAW,MAAA2gF,EAAAM,IAEA5hF,GAAA4Q,EAIW,IAAX1S,GAAA,IAAWA,EAAA0J,GACK,IAAhB8D,EAAAxN,EAAA,IAAgBwN,EAAA9D,GAAA,CAChB,GAAAipB,GAAA4gD,EAAA/lE,EAAA9D,EAAA1J,GACAsE,EAAAivE,EAAAvzE,EAAA0J,EAAA8D,IACAmlB,EAAAlwB,OAAA6B,EAAA7B,QACA8gF,EAAA/7E,KAAAmrB,EAAAlwB,MAAA6B,EAAA7B,OACiBkwB,OAAAruB,SAAAquB,IACAA,SAAAruB,WAKjB,MAAAu/E,GAAAN,EAAAzuD,KAAA+uD,GAAAN,EAvFA,GAAAtyE,GAAA,EACAuyE,EAAA,KACAC,EAAA,KACAI,EAAA,IAuGA,OAhBAV,GAAAlyE,SAAA,SAAApE,GACA,MAAA0D,WAAArQ,QAAA+Q,EAAAiyE,GAAA,EAAAr2E,GAAAs2E,GAAAlyE,GAGAkyE,EAAAK,WAAA,SAAA32E,GACA,MAAA0D,WAAArQ,QAAAsjF,EAAA32E,EAAAs2E,GAAAK,GAGAL,EAAAM,cAAA,SAAA52E,GACA,MAAA0D,WAAArQ,QAAAujF,EAAA52E,EAAAs2E,GAAAM,GAGAN,EAAAU,WAAA,SAAAh3E,GACA,MAAA0D,WAAArQ,QAAA,MAAA2M,EAAAg3E,EAAA,MAAAA,EAAA7rC,GAAAnrC,QAAAs2E,GAAAU,KAAAh3E,GAGAs2E,GAGAW,GAAAv6E,MAAAlK,UAAAkN,MAEAw3E,GAAA,SAAAjiF,GACA,kBACA,MAAAA,KAwBAkiF,GAAA,WAQA,QAAAA,KACA,GAAAnvB,GACAovB,EAAAH,GAAAvkF,KAAAgR,WACAyH,EAAA2a,EAAA1iB,MAAAhL,KAAAg/E,GACAh6E,EAAA3F,EAAA2L,MAAAhL,KAAAg/E,GACAC,GAAA9vE,EAAAnE,MAAAhL,MAAAg/E,EAAA,GAAAjsE,EAAAisE,IACAE,EAAAtzE,EAAAZ,MAAAhL,KAAAg/E,GAAAjB,GACAoB,EAAArzE,EAAAd,MAAAhL,KAAAg/E,GAAAjB,GACAqB,EAAAH,EAAAz5E,GAAA05E,GACAv5B,EAAAs5B,EAAAt5E,GAAAu5E,GACAG,GAAAlwE,EAAAnE,MAAAhL,MAAAg/E,EAAA,GAAAh6E,EAAAg6E,IACAM,EAAA1zE,EAAAZ,MAAAhL,KAAAg/E,GAAAjB,GACAwB,EAAAzzE,EAAAd,MAAAhL,KAAAg/E,GAAAjB,EAaA,IAXAvvE,MAAAohD,EAAA/nD,KAEA2G,EAAA0+C,OAAAkyB,EAAAz5B,GACAn3C,EAAAq8B,IAAA,IAAAo0C,EAAAC,EAAAC,GACAD,IAAAI,GAAAH,IAAAI,IACA/wE,EAAA6+C,iBAAA,IAAAgyB,EAAA75E,GAAA85E,GAAAD,EAAA15E,GAAA25E,IACA9wE,EAAAq8B,IAAA,IAAAw0C,EAAAC,EAAAC,IAEA/wE,EAAA6+C,iBAAA,IAAA+xB,EAAAz5B,GACAn3C,EAAA2+C,YAEAyC,EAAA,MAAAphD,GAAA,KAAAohD,EAAA,SAhCA,GAAAliC,GAAAslB,GACA3zC,EAAA4zC,GACA9jC,EAAA+jC,GACAtnC,EAAAunC,GACArnC,EAAAsnC,GACA5kC,EAAA,IAsDA,OAxBAuwE,GAAA5vE,OAAA,SAAAvH,GACA,MAAA0D,WAAArQ,QAAAkU,EAAA,kBAAAvH,KAAAk3E,IAAAl3E,GAAAm3E,GAAA5vE,GAGA4vE,EAAAnzE,WAAA,SAAAhE,GACA,MAAA0D,WAAArQ,QAAA2Q,EAAA,kBAAAhE,KAAAk3E,IAAAl3E,GAAAm3E,GAAAnzE,GAGAmzE,EAAAjzE,SAAA,SAAAlE,GACA,MAAA0D,WAAArQ,QAAA6Q,EAAA,kBAAAlE,KAAAk3E,IAAAl3E,GAAAm3E,GAAAjzE,GAGAizE,EAAArxD,OAAA,SAAA9lB,GACA,MAAA0D,WAAArQ,QAAAyyB,EAAA9lB,EAAAm3E,GAAArxD,GAGAqxD,EAAA1/E,OAAA,SAAAuI,GACA,MAAA0D,WAAArQ,QAAAoE,EAAAuI,EAAAm3E,GAAA1/E,GAGA0/E,EAAAvwE,QAAA,SAAA5G,GACA,MAAA0D,WAAArQ,QAAAuT,EAAA,MAAA5G,EAAA,KAAAA,EAAAm3E,GAAAvwE,GAGAuwE,GAUAvrC,GAAA,WACA,UAAAH,IAOAA,IAAAj5C,WACAwvD,YAAAvW,GACAC,MAAA,WACAtzC,KAAA+S,EACA/S,KAAAgF,EAAA,GAEApG,IAAA,SAAA2B,GACAgzC,GAAAisC,GAAAj/E,EAAAP,KAAAgF,GACAuuC,GAAAvzC,KAAAw/E,GAAAzsE,EAAA/S,KAAA+S,GACA/S,KAAA+S,EAAA/S,KAAAgF,GAAAw6E,GAAAx6E,EACAhF,KAAA+S,EAAAysE,GAAAx6E,GAEAy6E,QAAA,WACA,MAAAz/E,MAAA+S,GAIA,IAwHAqiC,IACAC,GACAI,GACAC,GACAG,GA+FAmB,GACAE,GACAD,GACAE,GACAQ,GACAU,GACAC,GACAjB,GAEAP,GACAC,GAmKA+B,GACAS,GACAR,GACAC,GACAC,GACAO,GACAC,GACAC,GACAS,GACAC,GACAC,GACAL,GACAC,GACAtxC,GACAC,GACAywC,GAvZAmmC,GAAA,GAAAnsC,IASAoF,GAAA,KACAinC,GAAA,MACA9rC,GAAAxwC,KAAAkoD,GACAxX,GAAAF,GAAA,EACAgC,GAAAhC,GAAA,EACA2G,GAAA,EAAA3G,GAEAkE,GAAA,IAAAlE,GACA4B,GAAA5B,GAAA,IAEAvwC,GAAAD,KAAAC,IACAi/C,GAAAl/C,KAAAk/C,KACAtsC,GAAA5S,KAAA4S,MACA2/B,GAAAvyC,KAAAoC,IACA8Z,GAAAlc,KAAAkc,KACA5E,GAAAtX,KAAAsX,IAEA4rC,GAAAljD,KAAAM,IACAkjD,GAAAxjD,KAAAI,IACAwwC,GAAA5wC,KAAAuC,IACAkgD,GAAAziD,KAAAiO,MAAA,SAAAxU,GAAuC,MAAAA,GAAA,IAAAA,EAAA,QACvC+5C,GAAAxzC,KAAA8C,KACAqgD,GAAAnjD,KAAAmjD,IAsBAo5B,IACAC,QAAA,SAAAC,EAAAzrC,GACAF,GAAA2rC,EAAA1rC,SAAAC,IAEA0rC,kBAAA,SAAA57E,EAAAkwC,GAEA,IADA,GAAA2rC,GAAA77E,EAAA67E,SAAAhlF,GAAA,EAAA0J,EAAAs7E,EAAA9kF,SACAF,EAAA0J,GAAAyvC,GAAA6rC,EAAAhlF,GAAAo5C,SAAAC,KAIAC,IACA2rC,OAAA,SAAA97E,EAAAkwC,GACAA,EAAA4R,UAEAi6B,MAAA,SAAA/7E,EAAAkwC,GACAlwC,IAAAqwC,YACAH,EAAAhlC,MAAAlL,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAg8E,WAAA,SAAAh8E,EAAAkwC,GAEA,IADA,GAAAG,GAAArwC,EAAAqwC,YAAAx5C,GAAA,EAAA0J,EAAA8vC,EAAAt5C,SACAF,EAAA0J,GAAAP,EAAAqwC,EAAAx5C,GAAAq5C,EAAAhlC,MAAAlL,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAi8E,WAAA,SAAAj8E,EAAAkwC,GACAE,GAAApwC,EAAAqwC,YAAAH,EAAA,IAEAgsC,gBAAA,SAAAl8E,EAAAkwC,GAEA,IADA,GAAAG,GAAArwC,EAAAqwC,YAAAx5C,GAAA,EAAA0J,EAAA8vC,EAAAt5C,SACAF,EAAA0J,GAAA6vC,GAAAC,EAAAx5C,GAAAq5C,EAAA,IAEAisC,QAAA,SAAAn8E,EAAAkwC,GACAQ,GAAA1wC,EAAAqwC,YAAAH,IAEAksC,aAAA,SAAAp8E,EAAAkwC,GAEA,IADA,GAAAG,GAAArwC,EAAAqwC,YAAAx5C,GAAA,EAAA0J,EAAA8vC,EAAAt5C,SACAF,EAAA0J,GAAAmwC,GAAAL,EAAAx5C,GAAAq5C,IAEAmsC,mBAAA,SAAAr8E,EAAAkwC,GAEA,IADA,GAAAosC,GAAAt8E,EAAAs8E,WAAAzlF,GAAA,EAAA0J,EAAA+7E,EAAAvlF,SACAF,EAAA0J,GAAAyvC,GAAAssC,EAAAzlF,GAAAq5C,KAkBA0O,GAAA,SAAA5+C,EAAAkwC,GACAlwC,GAAAy7E,GAAAtlF,eAAA6J,EAAAyX,MACAgkE,GAAAz7E,EAAAyX,MAAAzX,EAAAkwC,GAEAF,GAAAhwC,EAAAkwC,IAIA+B,GAAA3C,KAEAitC,GAAAjtC,KAOAwB,IACA5lC,MAAA6kC,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAsB,GAAA7C,QACA0B,GAAAN,UAAAK,GACAC,GAAAL,QAAAO,IAEAJ,WAAA,WACA,GAAA4rC,IAAAvqC,EACAsqC,IAAA7hF,IAAA8hF,EAAA,EAAAnmC,GAAAmmC,KACA1gF,KAAA00C,UAAA10C,KAAA20C,QAAA30C,KAAAoP,MAAA6kC,IAEA+R,OAAA,WACAy6B,GAAA7hF,IAAA27C,MAwCAomC,GAAA,SAAAz8E,GAGA,MAFAu8E,IAAAntC,QACAwP,GAAA5+C,EAAA8wC,IACA,EAAAyrC,IA2CAroC,GAAA5E,KAIAyE,IACA7oC,MAAAynC,GACAnC,UAAAsD,GACArD,QAAAuD,GACArD,aAAA,WACAoD,GAAA7oC,MAAA+oC,GACAF,GAAAvD,UAAA6D,GACAN,GAAAtD,QAAA6D,GACAJ,GAAA9E,QACA0B,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAmD,GAAA7oC,MAAAynC,GACAoB,GAAAvD,UAAAsD,GACAC,GAAAtD,QAAAuD,GACA/B,GAAA,GAAAa,KAAAC,GAAA,KAAAC,KAAAC,GAAA,KACAiB,GAAAK,GAAAtB,GAAA,GACAiB,IAAAK,KAAAvB,IAAA,IACAH,GAAA,GAAAC,GAAAD,GAAA,GAAAE,KAyGA2pC,GAAA,SAAAf,GACA,GAAA9kF,GAAA0J,EAAA7C,EAAAC,EAAAknD,EAAA83B,EAAAnpC,CAOA,IALAP,GAAAF,KAAAD,GAAAE,GAAA9tC,KACA0tC,MACAgM,GAAA+8B,EAAA5nC,IAGAxzC,EAAAqyC,GAAA77C,OAAA,CAIA,IAHA67C,GAAAjnB,KAAA6oB,IAGA39C,EAAA,EAAA6G,EAAAk1C,GAAA,GAAAiS,GAAAnnD,GAA4C7G,EAAA0J,IAAO1J,EACnD8G,EAAAi1C,GAAA/7C,GACA49C,GAAA/2C,EAAAC,EAAA,KAAA82C,GAAA/2C,EAAAC,EAAA,KACAqN,GAAAtN,EAAA,GAAAC,EAAA,IAAAqN,GAAAtN,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACAqN,GAAArN,EAAA,GAAAD,EAAA,IAAAsN,GAAAtN,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAknD,EAAAxmD,KAAAX,EAAAC,EAMA,KAAAg/E,IAAAz3E,KAAA3E,EAAAskD,EAAA9tD,OAAA,EAAAF,EAAA,EAAA6G,EAAAmnD,EAAAtkD,GAA2E1J,GAAA0J,EAAQ7C,EAAAC,IAAA9G,EACnF8G,EAAAknD,EAAAhuD,IACA28C,EAAAxoC,GAAAtN,EAAA,GAAAC,EAAA,KAAAg/E,MAAAnpC,EAAAV,GAAAn1C,EAAA,GAAAo1C,GAAAr1C,EAAA,IAMA,MAFAk1C,IAAAC,GAAA,KAEAC,KAAA5tC,KAAA8tC,KAAA9tC,MACAQ,sBACAotC,GAAAE,KAAAD,GAAAE,MAoBAgC,IACA6M,OAAA/R,GACA7kC,MAAAwpC,GACAlE,UAAAwE,GACAvE,QAAAgF,GACA9E,aAAA,WACAsE,GAAAzE,UAAAkF,GACAT,GAAAxE,QAAAmF,IAEAhF,WAAA,WACAqE,GAAAzE,UAAAwE,GACAC,GAAAxE,QAAAgF,KA+FAmnC,GAAA,SAAA58E,GACA40C,GAAAS,GACAR,GAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAS,GAAAC,GAAAC,GAAA,EACAyI,GAAA5+C,EAAAi1C,GAEA,IAAAt8C,GAAAs9C,GACA55C,EAAA65C,GACA5kC,EAAA6kC,GACAvpC,EAAAjU,IAAA0D,IAAAiV,GAGA,OAAA1E,GAAA4uE,KACA7iF,EAAA28C,GAAAj5C,EAAAk5C,GAAAjkC,EAAAkkC,GAEAH,GAAAd,KAAA57C,EAAAk8C,GAAAx4C,EAAAy4C,GAAAxjC,EAAAyjC,IACAnoC,EAAAjU,IAAA0D,IAAAiV,IAEA1E,EAAA4uE,KAAA91E,UAGAoM,GAAAzV,EAAA1D,GAAAi7C,GAAAjE,GAAAr+B,EAAAohC,GAAA9lC,IAAAgnC,KAGAipC,GAAA,SAAAlkF,GACA,kBACA,MAAAA,KAIA+9C,GAAA,SAAAh5C,EAAAC,GAEA,QAAA+4C,GAAA/9C,EAAA0D,GACA,MAAA1D,GAAA+E,EAAA/E,EAAA0D,GAAAsB,EAAAhF,EAAA,GAAAA,EAAA,IAOA,MAJA+E,GAAAusB,QAAAtsB,EAAAssB,SAAAysB,EAAAzsB,OAAA,SAAAtxB,EAAA0D,GACA,MAAA1D,GAAAgF,EAAAssB,OAAAtxB,EAAA0D,GAAA1D,GAAA+E,EAAAusB,OAAAtxB,EAAA,GAAAA,EAAA,MAGA+9C,EAOAN,IAAAnsB,OAAAmsB,EAsDA,IAucA+D,IACAC,GACAC,GAuMAhxC,GACAC,GACAoyC,GACAC,GA4EAwB,GACAC,GACAX,GACAC,GAluBA5F,GAAA,SAAA/gC,GAGA,QAAAwrC,GAAAlR,GAEA,MADAA,GAAAt6B,EAAAs6B,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAuD,GAAAvD,EAAA,IAAAuD,GAAAvD,EAQA,MAZAt6B,GAAAugC,GAAAvgC,EAAA,GAAAu7B,GAAAv7B,EAAA,GAAAu7B,GAAAv7B,EAAAhf,OAAA,EAAAgf,EAAA,GAAAu7B,GAAA,GAOAiQ,EAAAt3B,OAAA,SAAAomB,GAEA,MADAA,GAAAt6B,EAAAkU,OAAAomB,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAuD,GAAAvD,EAAA,IAAAuD,GAAAvD,GAGAkR,GA+BAu7B,GAAA,WAQA,QAAA5xE,GAAAvS,EAAA0D,GACAq8C,EAAAr6C,KAAA1F,EAAAod,EAAApd,EAAA0D,IACA1D,EAAA,IAAAi7C,GAAAj7C,EAAA,IAAAi7C,GAGA,QAAA9W,KACA,GAAAl2B,GAAAwyB,EAAAtyB,MAAAhL,KAAAsL,WACAJ,EAAAiE,EAAAnE,MAAAhL,KAAAsL,WAAAkqC,GACA9mC,EAAA8S,EAAAxW,MAAAhL,KAAAsL,WAAAkqC,EAMA,OALAoH,MACA3iC,EAAAugC,IAAA1vC,EAAA,GAAA0qC,IAAA1qC,EAAA,GAAA0qC,GAAA,GAAArnB,OACAktB,GAAAjH,EAAAlpC,EAAAwD,EAAA,GACA5D,GAAS6Q,KAAA,UAAA44B,aAAAqI,IACTA,EAAA3iC,EAAA,KACAnP,EArBA,GAGA8xC,GACA3iC,EAJAqjB,EAAAyjD,IAAA,MACA5xE,EAAA4xE,GAAA,IACAv/D,EAAAu/D,GAAA,GAGA3sC,GAAgBhlC,QA+BhB,OAZA4xB,GAAA1D,OAAA,SAAA11B,GACA,MAAA0D,WAAArQ,QAAAqiC,EAAA,kBAAA11B,KAAAm5E,KAAAn5E,EAAA,IAAAA,EAAA,KAAAo5B,GAAA1D,GAGA0D,EAAA7xB,OAAA,SAAAvH,GACA,MAAA0D,WAAArQ,QAAAkU,EAAA,kBAAAvH,KAAAm5E,IAAAn5E,GAAAo5B,GAAA7xB,GAGA6xB,EAAAxf,UAAA,SAAA5Z,GACA,MAAA0D,WAAArQ,QAAAumB,EAAA,kBAAA5Z,KAAAm5E,IAAAn5E,GAAAo5B,GAAAxf,GAGAwf,GAGAgd,GAAA,WACA,GACAvf,GADAsgB,IAEA,QACA3vC,MAAA,SAAAvS,EAAA0D,GACAk+B,EAAAl8B,MAAA1F,EAAA0D,KAEAm0C,UAAA,WACAqK,EAAAx8C,KAAAk8B,OAEAkW,QAAAV,GACA0J,OAAA,WACAoB,EAAA9jD,OAAA,GAAA8jD,EAAAx8C,KAAAw8C,EAAAlgD,MAAAkd,OAAAgjC,EAAAxa,WAEAqZ,OAAA,WACA,GAAAA,GAAAmB,CAGA,OAFAA,MACAtgB,EAAA,KACAmf,KAKAG,GAAA,SAAAn8C,EAAAC,EAAA8G,EAAAC,EAAAC,EAAAC,GACA,GAQAoC,GARAk3B,EAAAxgC,EAAA,GACAygC,EAAAzgC,EAAA,GACA6mC,EAAA5mC,EAAA,GACA6mC,EAAA7mC,EAAA,GACAiQ,EAAA,EACAC,EAAA,EACAtE,EAAAg7B,EAAArG,EACA10B,EAAAg7B,EAAArG,CAIA,IADAn3B,EAAAvC,EAAAy5B,EACA30B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,GAIA,GADAA,EAAArC,EAAAu5B,EACA30B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,GAIA,GADAA,EAAAtC,EAAAy5B,EACA30B,KAAAxC,EAAA,IAEA,GADAA,GAAAwC,EACAA,EAAA,GACA,GAAAxC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,OACG,IAAAwC,EAAA,GACH,GAAAxC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,GAIA,GADAA,EAAApC,EAAAu5B,EACA30B,KAAAxC,EAAA,IAEA,GADAA,GAAAwC,EACAA,EAAA,GACA,GAAAxC,EAAA6G,EAAA,MACA7G,GAAA4G,MAAA5G,OACG,IAAAwC,EAAA,GACH,GAAAxC,EAAA4G,EAAA,MACA5G,GAAA6G,MAAA7G,GAKA,MAFA4G,GAAA,IAAAlQ,EAAA,GAAAwgC,EAAAtwB,EAAArE,EAAA7L,EAAA,GAAAygC,EAAAvwB,EAAApE,GACAqE,EAAA,IAAAlQ,EAAA,GAAAugC,EAAArwB,EAAAtE,EAAA5L,EAAA,GAAAwgC,EAAAtwB,EAAArE,IACA,OAGAuzE,GAAA,SAAAr/E,EAAAC,GACA,MAAAwB,IAAAzB,EAAA,GAAAC,EAAA,IAAA42C,IAAAp1C,GAAAzB,EAAA,GAAAC,EAAA,IAAA42C,IAeAyE,GAAA,SAAAJ,EAAAT,EAAAW,EAAArvB,EAAAymB,GACA,GAEAr5C,GACA0J,EAHAuiC,KACA6b,IAwBA,IApBA/F,EAAArgC,QAAA,SAAAslC,GACA,MAAAt9C,EAAAs9C,EAAA9mD,OAAA,QACA,GAAAwJ,GAAA5H,EAAAw6C,EAAA0K,EAAA,GAAA7gB,EAAA6gB,EAAAt9C,EAKA,IAAAw8E,GAAA5pC,EAAAnW,GAAA,CAEA,IADAkT,EAAAM,YACA35C,EAAA,EAAiBA,EAAA0J,IAAO1J,EAAAq5C,EAAAhlC,OAAAioC,EAAA0K,EAAAhnD,IAAA,GAAAs8C,EAAA,GAExB,YADAjD,GAAAO,UAIA3N,EAAAzkC,KAAA1F,EAAA,GAAA6+C,IAAArE,EAAA0K,EAAA,UACAc,EAAAtgD,KAAA1F,EAAA2H,EAAA,GAAAk3C,IAAArE,EAAA,KAAAx6C,GAAA,IACAmqC,EAAAzkC,KAAA1F,EAAA,GAAA6+C,IAAAxa,EAAA6gB,EAAA,UACAc,EAAAtgD,KAAA1F,EAAA2H,EAAA,GAAAk3C,IAAAxa,EAAA,KAAArkC,GAAA,OAGAmqC,EAAA/rC,OAAA,CAMA,IAJA4nD,EAAAhzB,KAAAwsB,GACAR,GAAA7U,GACA6U,GAAAgH,GAEA9nD,EAAA,EAAA0J,EAAAo+C,EAAA5nD,OAA8BF,EAAA0J,IAAO1J,EACrC8nD,EAAA9nD,GAAA6P,EAAAoyC,IAOA,KAJA,GACAhiD,GACAoU,EAFApM,EAAAgkC,EAAA,KAIA,CAIA,IAFA,GAAAymC,GAAAzqE,EACAk+E,GAAA,EACAzT,EAAA36D,GAAA,IAAA26D,IAAAhpE,KAAAzB,EAAA,MACAhI,GAAAyyE,EAAAj4D,EACA4+B,EAAAM,WACA,IAEA,GADA+4B,EAAA36D,EAAA26D,EAAAjpE,EAAAsO,GAAA,EACA26D,EAAA7iE,EAAA,CACA,GAAAs2E,EACA,IAAAnmF,EAAA,EAAA0J,EAAAzJ,EAAAC,OAAwCF,EAAA0J,IAAO1J,EAAAq5C,EAAAhlC,SAAApU,EAAAD,IAAA,GAAAqU,EAAA,QAE/Cue,GAAA8/C,EAAA5wE,EAAA4wE,EAAAhpE,EAAA5H,EAAA,EAAAu3C,EAEAq5B,KAAAhpE,MACO,CACP,GAAAy8E,EAEA,IADAlmF,EAAAyyE,EAAA/+D,EAAA8G,EACAza,EAAAC,EAAAC,OAAA,EAAqCF,GAAA,IAAQA,EAAAq5C,EAAAhlC,SAAApU,EAAAD,IAAA,GAAAqU,EAAA,QAE7Cue,GAAA8/C,EAAA5wE,EAAA4wE,EAAA/+D,EAAA7R,GAAA,EAAAu3C,EAEAq5B,KAAA/+D,EAEA++D,IAAAjpE,EACAxJ,EAAAyyE,EAAAj4D,EACA0rE,YACKzT,EAAA36D,EACLshC,GAAAO,aAmBAmJ,GAAA,IACAD,IAAAC,GAmKAqjC,GAAA,WACA,GAIAz8B,GACAC,EACA9B,EANAl6C,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAKA,OAAA+5C,IACAzO,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAA5I,GAAAnzC,EAAAC,EAAAC,EAAAC,GAAA67C,EAAAvQ,IAEA1G,OAAA,SAAA9lC,GACA,MAAA0D,WAAArQ,QAAA0N,GAAAf,EAAA,MAAAgB,GAAAhB,EAAA,MAAAiB,GAAAjB,EAAA,MAAAkB,GAAAlB,EAAA,MAAA88C,EAAAC,EAAA,KAAA9B,KAAAl6C,EAAAC,IAAAC,EAAAC,OAKA61C,GAAAnL,KAKA0K,IACA8H,OAAA/R,GACA7kC,MAAA6kC,GACAS,UAAAuJ,GACAtJ,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,IAgCAmtC,GAAA,SAAAl9E,GAGA,MAFAy6C,IAAArL,QACAwP,GAAA5+C,EAAAg6C,KACAS,IAGApK,IAAA,WACA8sC,IAAgB1lE,KAAA,aAAA44B,gBAEhBikC,GAAA,SAAA52E,EAAAC,GAGA,MAFA0yC,IAAA,GAAA3yC,EACA2yC,GAAA,GAAA1yC,EACAu/E,GAAAC,KA0GAC,GAAA,SAAA1/E,EAAAC,GACA,GAAA8G,GAAA/G,EAAA,GAAA4zC,GACA5sC,EAAAhH,EAAA,GAAA4zC,GACA3sC,EAAAhH,EAAA,GAAA2zC,GACA1sC,EAAAjH,EAAA,GAAA2zC,GACA1nC,EAAA6nC,GAAA/sC,GACA+8C,EAAA3R,GAAAprC,GACAoF,EAAA2nC,GAAA7sC,GACAy4E,EAAAvtC,GAAAlrC,GACA04E,EAAA1zE,EAAA6nC,GAAAhtC,GACA84E,EAAA3zE,EAAAkmC,GAAArrC,GACA+4E,EAAA1zE,EAAA2nC,GAAA9sC,GACA84E,EAAA3zE,EAAAgmC,GAAAnrC,GACAhG,EAAA,EAAAgxC,GAAA+C,GAAA7C,GAAAjrC,EAAAF,GAAAkF,EAAAE,EAAA+lC,GAAAlrC,EAAAF,KACA8N,EAAAu9B,GAAAnxC,GAEA8qB,EAAA9qB,EAAA,SAAAmC,GACA,GAAA2hB,GAAAqtB,GAAAhvC,GAAAnC,GAAA4T,EACAiQ,EAAAstB,GAAAnxC,EAAAmC,GAAAyR,EACA5Z,EAAA6pB,EAAA86D,EAAA76D,EAAA+6D,EACAnhF,EAAAmmB,EAAA+6D,EAAA96D,EAAAg7D,EACAnsE,EAAAkR,EAAAi/B,EAAAh/B,EAAA46D,CACA,QACAvrE,GAAAzV,EAAA1D,GAAAi7C,GACA9hC,GAAAR,EAAAohC,GAAA/5C,IAAA0D,MAAAu3C,KAEG,WACH,OAAAnvC,EAAAmvC,GAAAlvC,EAAAkvC,IAKA,OAFAnqB,GAAA6qD,SAAA31E,EAEA8qB,GAGAq3B,GAAA,SAAAnoD,GACA,MAAAA,IAGA+kF,GAAApuC,KACAsM,GAAAtM,KAMAiM,IACArwC,MAAA6kC,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACA4K,GAAA/K,UAAA8K,GACAC,GAAA9K,QAAAoL,IAEAjL,WAAA,WACA2K,GAAA/K,UAAA+K,GAAA9K,QAAA8K,GAAArwC,MAAA6kC,GACA2tC,GAAAhjF,IAAAyE,GAAAy8C,KACAA,GAAAxM,SAEAsK,OAAA,WACA,GAAAqO,GAAA21B,GAAA,CAEA,OADAA,IAAAtuC,QACA2Y,IAsBAhM,GAAA72C,IACA82C,GAAAD,GACAp3C,IAAAo3C,GACAn3C,GAAAD,GAEAk6C,IACA3zC,MAAA4wC,GACAtL,UAAAT,GACAU,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,GACA2J,OAAA,WACA,GAAAgjC,KAAA3gC,GAAAC,KAAAr3C,GAAAC,IAEA,OADAD,IAAAC,KAAAo3C,GAAAD,GAAA72C,KACAw3E,IAaAxgC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAjB,IACApxC,MAAA+wC,GACAzL,UAAA6L,GACA5L,QAAAqM,GACAnM,aAAA,WACA2L,GAAA9L,UAAAuM,GACAT,GAAA7L,QAAAwM,IAEArM,WAAA,WACA0L,GAAApxC,MAAA+wC,GACAK,GAAA9L,UAAA6L,GACAC,GAAA7L,QAAAqM,IAEApD,OAAA,WACA,GAAAsO,GAAAzK,IAAAF,GAAAE,GAAAD,GAAAC,IACAV,IAAAF,GAAAE,GAAAD,GAAAC,IACAT,IAAAF,GAAAE,GAAAD,GAAAC,KACA12C,QAIA,OAHAw2C,IAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GAAA,EACAyK,GAgEAxK,IAAAtnD,WACAynF,QAAA,IACAC,YAAA,SAAAl6E,GACA,MAAA5H,MAAA6hF,QAAAj6E,EAAA5H,MAEA60C,aAAA,WACA70C,KAAA4wD,MAAA,GAEA9b,WAAA,WACA90C,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,IAAA30C,KAAA4wD,OAAA5wD,KAAAyO,SAAA0+C,YACAntD,KAAA8wD,OAAAlnD,KAEAwF,MAAA,SAAAvS,EAAA0D,GACA,OAAAP,KAAA8wD,QACA,OACA9wD,KAAAyO,SAAAy+C,OAAArwD,EAAA0D,GACAP,KAAA8wD,OAAA,CACA,MAEA,QACA9wD,KAAAyO,SAAA2+C,OAAAvwD,EAAA0D,EACA,MAEA,SACAP,KAAAyO,SAAAy+C,OAAArwD,EAAAmD,KAAA6hF,QAAAthF,GACAP,KAAAyO,SAAAo8B,IAAAhuC,EAAA0D,EAAAP,KAAA6hF,QAAA,EAAAtnC,MAKAqD,OAAA3J,IAOA0N,GAAAvnD,WACA2nF,QAAAlgC,GAAA,KACAigC,YAAA,SAAAl6E,GACA,MAAA5H,MAAA+hF,QAAAlgC,GAAAj6C,GAAA5H,MAEA60C,aAAA,WACA70C,KAAA4wD,MAAA,GAEA9b,WAAA,WACA90C,KAAA4wD,MAAAhnD,KAEA8qC,UAAA,WACA10C,KAAA8wD,OAAA,GAEAnc,QAAA,WACA,IAAA30C,KAAA4wD,OAAA5wD,KAAA4hD,QAAAr/C,KAAA,KACAvC,KAAA8wD,OAAAlnD,KAEAwF,MAAA,SAAAvS,EAAA0D,GACA,OAAAP,KAAA8wD,QACA,OACA9wD,KAAA4hD,QAAAr/C,KAAA,IAAA1F,EAAA,IAAA0D,GACAP,KAAA8wD,OAAA,CACA,MAEA,QACA9wD,KAAA4hD,QAAAr/C,KAAA,IAAA1F,EAAA,IAAA0D,EACA,MAEA,SACAP,KAAA4hD,QAAAr/C,KAAA,IAAA1F,EAAA,IAAA0D,EAAAP,KAAA+hF,WAKAnkC,OAAA,WACA,GAAA59C,KAAA4hD,QAAA3mD,OAAA,CACA,GAAA2iD,GAAA59C,KAAA4hD,QAAApnC,KAAA,GAEA,OADAxa,MAAA4hD,WACAhE,IAYA,IAAAokC,IAAA,SAAAp/B,EAAAp0C,GAKA,QAAA3G,GAAA3D,GAKA,MAJAA,KACA,kBAAA49E,IAAAG,EAAAH,eAAA92E,MAAAhL,KAAAsL,YACAw3C,GAAA5+C,EAAAg+E,EAAAD,KAEAA,EAAArkC,SATA,GACAskC,GACAD,EAFAH,EAAA,GA4CA,OAhCAj6E,GAAAokD,KAAA,SAAA/nD,GAEA,MADA4+C,IAAA5+C,EAAAg+E,EAAAziC,KACAA,GAAA7B,UAGA/1C,EAAA+4E,OAAA,SAAA18E,GAEA,MADA4+C,IAAA5+C,EAAAg+E,EAAAn/B,KACAA,GAAAnF,UAGA/1C,EAAAqkD,SAAA,SAAAhoD,GAEA,MADA4+C,IAAA5+C,EAAAg+E,EAAA1hC,KACAA,GAAA5C,UAGA/1C,EAAA+6C,WAAA,SAAAh7C,GACA,MAAA0D,WAAArQ,QAAAinF,EAAA,OAAAt/B,EAAAh7C,GAAAo9C,GAAAp9C,EAAAwsC,OAAAvsC,GAAA+6C,GAGA/6C,EAAA2G,QAAA,SAAA5G,GACA,MAAA0D,WAAArQ,QACAgnF,EAAA,OAAAzzE,EAAA5G,GAAA,GAAA+5C,IAAA,GAAAD,IAAA95C,GACA,kBAAAk6E,IAAAG,EAAAH,eACAj6E,GAHA2G,GAMA3G,EAAAi6E,YAAA,SAAAl6E,GACA,MAAA0D,WAAArQ,QACA6mF,EAAA,kBAAAl6E,MAAAq6E,EAAAH,aAAAl6E,OACAC,GAFAi6E,GAKAj6E,EAAA+6C,cAAAp0C,YAGA2zE,GAAA3uC,KAEA4uC,GAAA,SAAA1lC,EAAAttC,GACA,GAAAkmC,GAAAlmC,EAAA,GACAmmC,EAAAnmC,EAAA,GACAkoC,GAAAtD,GAAAsB,IAAAK,GAAAL,GAAA,GACApmC,EAAA,EACAutC,EAAA,CAEA0lC,IAAA7uC,OAEA,QAAAv4C,GAAA,EAAA0J,EAAAi4C,EAAAzhD,OAAqCF,EAAA0J,IAAO1J,EAC5C,GAAA+V,GAAA8rC,EAAAF,EAAA3hD,IAAAE,OASA,OARA2hD,GACA9rC,EACA2/B,EAAAmM,EAAA9rC,EAAA,GACA2kC,EAAAhF,EAAA,GACAyG,EAAAzG,EAAA,KAAAmF,GACAC,EAAA7B,GAAAkD,GACAxB,EAAAC,GAAAuB,GAEA3uC,EAAA,EAAmBA,EAAAuI,IAAOvI,EAAAktC,EAAAwB,EAAApB,EAAAwsC,EAAA3sC,EAAA0M,EAAA3R,EAAAR,EAAA,CAC1B,GAAAA,GAAA2M,EAAAr0C,GACA0uC,EAAAhH,EAAA,GACAkH,EAAAlH,EAAA,KAAA2F,GACAysC,EAAAruC,GAAAmD,GACAiL,EAAAzM,GAAAwB,GACAO,EAAAT,EAAAxB,EACAmC,EAAAF,GAAA,OACA4qC,EAAA1qC,EAAAF,EACAK,EAAAuqC,EAAA1uC,GACAn9B,EAAAo/B,EAAAwsC,CAOA,IALAF,GAAAvjF,IAAAoX,GAAAS,EAAAmhC,EAAA5D,GAAAsuC,GAAA5sC,EAAA0M,EAAA3rC,EAAAk/B,GAAA2sC,KACApzE,GAAA6oC,EAAAL,EAAAE,EAAA2C,GAAA7C,EAIAK,EAAAtC,GAAAH,EAAA2B,GAAA3B,EAAA,CACA,GAAAzK,GAAA0L,GAAAF,GAAA5F,GAAA4F,GAAApG,GACA0G,IAAA9L,EACA,IAAA03C,GAAAhsC,GAAAe,EAAAzM,EACA8L,IAAA4rC,EACA,IAAAC,IAAAzqC,EAAAL,GAAA,QAAA7D,GAAA0uC,EAAA,KACAhtC,EAAAitC,GAAAjtC,IAAAitC,IAAA33C,EAAA,IAAAA,EAAA,OACA4R,GAAA1E,EAAAL,GAAA,SAiBA,OAAAxoC,GAAAupC,IAAAvpC,EAAAupC,IAAA0pC,IAAA1pC,IAAA,EAAAgE,GAGAoG,GAAA,SAAA4/B,EAAA1kC,EAAApwB,EAAA3qB,GACA,gBAAAiX,EAAAyoE,GAgDA,QAAAtzE,GAAAkmC,EAAAC,GACA,GAAAnmC,GAAA6K,EAAAq7B,EAAAC,EACAktC,GAAAntC,EAAAlmC,EAAA,GAAAmmC,EAAAnmC,EAAA,KAAAszE,EAAAtzE,MAAAkmC,EAAAC,GAGA,QAAAotC,GAAArtC,EAAAC,GACA,GAAAnmC,GAAA6K,EAAAq7B,EAAAC,EACA9W,GAAArvB,QAAA,GAAAA,EAAA,IAGA,QAAAslC,KACAmO,EAAAzzC,MAAAuzE,EACAlkD,EAAAiW,YAGA,QAAAC,KACAkO,EAAAzzC,QACAqvB,EAAAkW,UAGA,QAAAiuC,GAAAttC,EAAAC,GACAqH,EAAAr6C,MAAA+yC,EAAAC,GACA,IAAAnmC,GAAA6K,EAAAq7B,EAAAC,EACAstC,GAAAzzE,QAAA,GAAAA,EAAA,IAGA,QAAA20C,KACA8+B,EAAAnuC,YACAkI,KAGA,QAAAqH,KACA2+B,EAAAhmC,EAAA,MAAAA,EAAA,OACAimC,EAAAluC,SAEA,IAEA55C,GAAA+V,EACAixC,EACA3yC,EAJA2tC,EAAA8lC,EAAA9lC,QACA+lC,EAAAC,EAAAnlC,SACAn5C,EAAAq+E,EAAA7nF,MAQA,IAJA2hD,EAAA/9C,MACA69C,EAAAn6C,KAAAq6C,GACAA,EAAA,KAEAn4C,EAGA,KAAAs4C,GAEA,GADAgF,EAAA+gC,EAAA,IACAhyE,EAAAixC,EAAA9mD,OAAA,MAGA,IAFA+nF,IAAAN,EAAA7tC,eAAAmuC,GAAA,GACAN,EAAAhuC,YACA35C,EAAA,EAAqBA,EAAA+V,IAAO/V,EAAA2nF,EAAAtzE,SAAA2yC,EAAAhnD,IAAA,GAAAqU,EAAA,GAC5BszE,GAAA/tC,eAOAlwC,GAAA,KAAAs4C,GAAA+lC,EAAAvgF,KAAAugF,EAAAjkF,MAAAkd,OAAA+mE,EAAAv+C,UAEAuY,EAAAv6C,KAAAugF,EAAAljE,OAAAkiC,KA9GA,GAKApF,GACAI,EACAF,EAPAne,EAAAsf,EAAA2kC,GACAO,EAAAhpE,EAAAkU,OAAAnrB,EAAA,GAAAA,EAAA,IACA+/E,EAAA/kC,KACA6kC,EAAA9kC,EAAAglC,GACAC,GAAA,EAKAngC,GACAzzC,QACAslC,YACAC,UACAE,aAAA,WACAgO,EAAAzzC,MAAAwzE,EACA//B,EAAAnO,UAAAqP,EACAlB,EAAAlO,QAAAsP,EACAnH,KACAJ,MAEA5H,WAAA,WACA+N,EAAAzzC,QACAyzC,EAAAnO,YACAmO,EAAAlO,UACAmI,EAAAngD,GAAAmgD,EACA,IAAAE,GAAAolC,GAAA1lC,EAAAumC,EACAnmC,GAAA7hD,QACA+nF,IAAAN,EAAA7tC,eAAAmuC,GAAA,GACA9lC,GAAAJ,EAAAT,GAAAW,EAAArvB,EAAA+0D,IACS1lC,IACTgmC,IAAAN,EAAA7tC,eAAAmuC,GAAA,GACAN,EAAAhuC,YACA/mB,EAAA,YAAA+0D,GACAA,EAAA/tC,WAEAquC,IAAAN,EAAA5tC,aAAAkuC,GAAA,GACAlmC,EAAAJ,EAAA,MAEAsJ,OAAA,WACA08B,EAAA7tC,eACA6tC,EAAAhuC,YACA/mB,EAAA,YAAA+0D,GACAA,EAAA/tC,UACA+tC,EAAA5tC,cAsEA,OAAA+N,KAeAiC,GAAAjC,GACA,WAAc,UACdb,GACAO,KACA3O,IAAAE,KAsFAuR,GAAA,SAAAl2C,EAAAuoC,GAKA,QAAA/pB,GAAAquB,EAAAC,EAAAX,EAAAlH,GACAiH,GAAAjH,EAAAjlC,EAAAuoC,EAAA4D,EAAAU,EAAAC,GAGA,QAAAF,GAAAzG,EAAAC,GACA,MAAAI,IAAAL,GAAAK,GAAAJ,GAAA2tC,EAOA,QAAAnlC,GAAA3J,GACA,GAAA3D,GACA6S,EACAxsC,EACA0zB,EACAuS,CACA,QACArI,UAAA,WACAlK,EAAA1zB,GAAA,EACAimC,EAAA,GAEA3tC,MAAA,SAAAkmC,EAAAC,GACA,GACA4tC,GADAlzC,GAAAqF,EAAAC,GAEAziC,EAAAipC,EAAAzG,EAAAC,GACAzqC,EAAAs4E,EACAtwE,EAAA,EAAAuwE,EAAA/tC,EAAAC,GACAziC,EAAAuwE,EAAA/tC,KAAA,EAAA1B,QAAA2B,GAAA,CAYA,KAXA9E,IAAAjG,EAAA1zB,EAAAhE,IAAAshC,EAAAM,YAGA5hC,IAAAgE,IACAqsE,EAAAh3E,EAAAskC,EAAAR,IACAgxC,GAAAxwC,EAAA0yC,IAAAlC,GAAAhxC,EAAAkzC,MACAlzC,EAAA,IAAAwI,GACAxI,EAAA,IAAAwI,GACA3lC,EAAAipC,EAAA9L,EAAA,GAAAA,EAAA,MAGAn9B,IAAAgE,EACAimC,EAAA,EACAjqC,GAEAshC,EAAAM,YACAyuC,EAAAh3E,EAAA8jC,EAAAQ,GACA2D,EAAAhlC,MAAA+zE,EAAA,GAAAA,EAAA,MAGAA,EAAAh3E,EAAAskC,EAAAR,GACAmE,EAAAhlC,MAAA+zE,EAAA,GAAAA,EAAA,IACA/uC,EAAAO,WAEAlE,EAAA0yC,MACS,IAAAG,GAAA7yC,GAAA2yC,EAAAtwE,EAAA,CACT,GAAA9N,EAGA8F,GAAAw4C,KAAAt+C,EAAAmH,EAAA8jC,EAAAQ,GAAA,MACAsM,EAAA,EACAqmC,GACAhvC,EAAAM,YACAN,EAAAhlC,MAAApK,EAAA,MAAAA,EAAA,OACAovC,EAAAhlC,MAAApK,EAAA,MAAAA,EAAA,OACAovC,EAAAO,YAEAP,EAAAhlC,MAAApK,EAAA,MAAAA,EAAA,OACAovC,EAAAO,UACAP,EAAAM,YACAN,EAAAhlC,MAAApK,EAAA,MAAAA,EAAA,UAIA8N,GAAA29B,GAAAwwC,GAAAxwC,EAAAR,IACAmE,EAAAhlC,MAAA6gC,EAAA,GAAAA,EAAA,IAEAQ,EAAAR,EAAAn5B,EAAAhE,EAAAwwC,EAAAx4C,GAEA6pC,QAAA,WACA79B,GAAAs9B,EAAAO,UACAlE,EAAA,MAIAsM,MAAA,WACA,MAAAA,IAAAvS,GAAA1zB,IAAA,IAMA,QAAA3K,GAAAvK,EAAAC,EAAA0hF,GACA,GAAAvxB,GAAA3b,GAAAz0C,GACA4hF,EAAAntC,GAAAx0C,GAIAuvC,GAAA,OACAqyC,EAAAltC,GAAAyb,EAAAwxB,GACAE,EAAAptC,GAAAmtC,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,GAGA,KAAAC,EAAA,OAAAL,GAAA3hF,CAEA,IAAA2hD,GAAA2/B,EAAAQ,EAAAE,EACA7hD,GAAAmhD,EAAAS,EAAAC,EACAC,EAAAttC,GAAAnF,EAAAqyC,GACA/8D,EAAA+vB,GAAArF,EAAAmS,GACA58B,EAAA8vB,GAAAgtC,EAAA1hD,EACAyU,IAAA9vB,EAAAC,EAGA,IAAA2I,GAAAu0D,EACAhpF,EAAAy7C,GAAA5vB,EAAA4I,GACAw0D,EAAAxtC,GAAAhnB,KACA1Z,EAAA/a,IAAAipF,GAAAxtC,GAAA5vB,KAAA,EAEA,MAAA9Q,EAAA,IAEA,GAAA5Q,GAAA4xC,GAAAhhC,GACAjL,EAAA8rC,GAAAnnB,IAAAz0B,EAAAmK,GAAA8+E,EAIA,IAHAttC,GAAA7rC,EAAA+b,GACA/b,EAAAyrC,GAAAzrC,IAEA44E,EAAA,MAAA54E,EAGA,IAIA6K,GAJAigC,EAAA7zC,EAAA,GACAq1C,EAAAp1C,EAAA,GACAq1C,EAAAt1C,EAAA,GACAu1C,EAAAt1C,EAAA,EAGAo1C,GAAAxB,IAAAjgC,EAAAigC,IAAAwB,IAAAzhC,EAEA,IAAAkiC,GAAAT,EAAAxB,EACAsuC,EAAA1gF,GAAAq0C,EAAA9D,IAAA6E,GACAurC,EAAAD,GAAArsC,EAAAe,EAKA,KAHAsrC,GAAA5sC,EAAAD,IAAA1hC,EAAA0hC,IAAAC,IAAA3hC,GAGAwuE,EACAD,EACA7sC,EAAAC,EAAA,EAAAxsC,EAAA,IAAAtH,GAAAsH,EAAA,GAAA8qC,GAAAgD,GAAAvB,EAAAC,GACAD,GAAAvsC,EAAA,IAAAA,EAAA,IAAAwsC,EACAO,EAAA9D,IAAA6B,GAAA9qC,EAAA,IAAAA,EAAA,IAAAssC,GAAA,CACA,GAAAgtC,GAAAxtC,GAAAnnB,IAAAz0B,EAAAmK,GAAA8+E,EAEA,OADAttC,IAAAytC,EAAAv9D,IACA/b,EAAAyrC,GAAA6tC,MAMA,QAAAZ,GAAA/tC,EAAAC,GACA,GAAArqC,GAAAk4E,EAAAj0E,EAAAykC,GAAAzkC,EACAk0E,EAAA,CAKA,OAJA/tC,IAAApqC,EAAAm4E,GAAA,EACA/tC,EAAApqC,IAAAm4E,GAAA,GACA9tC,GAAArqC,EAAAm4E,GAAA,EACA9tC,EAAArqC,IAAAm4E,GAAA,GACAA,EAzKA,GAAAH,GAAAvtC,GAAAxmC,GACAi0E,EAAAF,EAAA,EACAI,EAAAjgF,GAAA6/E,GAAAzqC,EA0KA,OAAAoK,IAAA9G,EAAAgC,EAAApwB,EAAAy1D,GAAA,GAAAj0E,KAAAykC,GAAAzkC,EAAAykC,MAGAswC,GAAA,SAAAzhC,GACA,OACArO,OAAAoO,GAAAC,IAeAC,IAAAtoD,WACAwvD,YAAAlH,GACAtzC,MAAA,SAAAvS,EAAA0D,GAAyBP,KAAAo0C,OAAAhlC,MAAAvS,EAAA0D,IACzBylD,OAAA,WAAsBhmD,KAAAo0C,OAAA4R,UACtBtR,UAAA,WAAyB10C,KAAAo0C,OAAAM,aACzBC,QAAA,WAAuB30C,KAAAo0C,OAAAO,WACvBE,aAAA,WAA4B70C,KAAAo0C,OAAAS,gBAC5BC,WAAA,WAA0B90C,KAAAo0C,OAAAU,cAgC1B,IAAAgP,IAAA,GACAF,GAAAjO,GAAA,GAAAH,IAEA0P,GAAA,SAAAhC,EAAAE,GACA,OAAAA,EAAAD,GAAAD,EAAAE,GAAAH,GAAAC,IA+FAiC,GAAA3C,IACApzC,MAAA,SAAAvS,EAAA0D,GACAP,KAAAo0C,OAAAhlC,MAAAvS,EAAA24C,GAAAj1C,EAAAi1C,OA8IA2uC,GAAA,WACA,MAAA7+B,IAAAI,IACAvrC,MAAA,SACAmjB,QAAA,aAGA8mD,GAAA,WACA,MAAAD,MACA5+B,WAAA,YACAprC,MAAA,MACAR,WAAA,UACAM,QAAA,OACAqjB,SAAA,WAsBA+mD,GAAA,WAQA,QAAAA,GAAA9vC,GACA,GAAA13C,GAAA03C,EAAA,GAAAh0C,EAAAg0C,EAAA,EACA,OAAAnlC,GAAA,KACAk1E,EAAAl1E,MAAAvS,EAAA0D,GAAA6O,IACAm1E,EAAAn1E,MAAAvS,EAAA0D,GAAA6O,KACAo1E,EAAAp1E,MAAAvS,EAAA0D,GAAA6O,GA2DA,QAAAkkC,KAEA,MADAoR,GAAAC,EAAA,KACA0/B,EAzEA,GAAA3/B,GACAC,EACA2/B,EACAC,EACAC,EACAp1E,EAHAq1E,EAAAL,KACAM,EAAAP,KAAAlqE,QAAA,QAAAqjB,SAAA,SAAAioB,WAAA,QACAo/B,EAAAR,KAAAlqE,QAAA,QAAAqjB,SAAA,SAAAioB,WAAA,OACAq/B,GAA4Bx1E,MAAA,SAAAvS,EAAA0D,GAAuB6O,GAAAvS,EAAA0D,IAuEnD,OA7DA8jF,GAAAl2D,OAAA,SAAAomB,GACA,GAAA99B,GAAAguE,EAAAtqE,QACAnV,EAAAy/E,EAAA9qE,YACA9c,GAAA03C,EAAA,GAAAvvC,EAAA,IAAAyR,EACAlW,GAAAg0C,EAAA,GAAAvvC,EAAA,IAAAyR,CACA,QAAAlW,GAAA,KAAAA,EAAA,MAAA1D,IAAA,MAAAA,GAAA,KAAA6nF,EACAnkF,GAAA,MAAAA,EAAA,MAAA1D,IAAA,MAAAA,GAAA,KAAA8nF,EACAF,GAAAt2D,OAAAomB,IAGA8vC,EAAAjwC,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAAoB,IAAA2+B,EAAArwC,OAAAuQ,EAAAvQ,GAAAswC,EAAAtwC,UAAAuwC,EAAAvwC,aAGAiwC,EAAA7iE,UAAA,SAAA5Z,GACA,MAAA0D,WAAArQ,QACAwpF,EAAAjjE,UAAA5Z,GAAA88E,EAAAljE,UAAA5Z,GAAA+8E,EAAAnjE,UAAA5Z,GACA0rC,KAFAmxC,EAAAjjE,aAKA6iE,EAAAlqE,MAAA,SAAAvS,GACA,MAAA0D,WAAArQ,QACAwpF,EAAAtqE,MAAAvS,GAAA88E,EAAAvqE,MAAA,IAAAvS,GAAA+8E,EAAAxqE,MAAAvS,GACAy8E,EAAA1qE,UAAA8qE,EAAA9qE,cAFA8qE,EAAAtqE,SAKAkqE,EAAA1qE,UAAA,SAAA/R,GACA,IAAA0D,UAAArQ,OAAA,MAAAwpF,GAAA9qE,WACA,IAAAlD,GAAAguE,EAAAtqE,QAAAtd,GAAA+K,EAAA,GAAArH,GAAAqH,EAAA,EAiBA,OAfA08E,GAAAG,EACA9qE,UAAA/R,GACAk0C,aAAAj/C,EAAA,KAAA4Z,EAAAlW,EAAA,KAAAkW,IAAA5Z,EAAA,KAAA4Z,EAAAlW,EAAA,KAAAkW,KACA29B,OAAAwwC,GAEAL,EAAAG,EACA/qE,WAAA9c,EAAA,KAAA4Z,EAAAlW,EAAA,KAAAkW,IACAqlC,aAAAj/C,EAAA,KAAA4Z,EAAAgiC,GAAAl4C,EAAA,IAAAkW,EAAAgiC,KAAA57C,EAAA,KAAA4Z,EAAAgiC,GAAAl4C,EAAA,KAAAkW,EAAAgiC,MACArE,OAAAwwC,GAEAJ,EAAAG,EACAhrE,WAAA9c,EAAA,KAAA4Z,EAAAlW,EAAA,KAAAkW,IACAqlC,aAAAj/C,EAAA,KAAA4Z,EAAAgiC,GAAAl4C,EAAA,KAAAkW,EAAAgiC,KAAA57C,EAAA,KAAA4Z,EAAAgiC,GAAAl4C,EAAA,KAAAkW,EAAAgiC,MACArE,OAAAwwC,GAEAtxC,KAGA+wC,EAAA1hC,UAAA,SAAAjV,EAAAxpC,GACA,MAAAy+C,IAAA0hC,EAAA32C,EAAAxpC,IAGAmgF,EAAArhC,QAAA,SAAAjjD,EAAAmE,GACA,MAAA8+C,IAAAqhC,EAAAtkF,EAAAmE,IAQAmgF,EAAAlqE,MAAA,OA4BA0qE,GAAA5+B,GAAA,SAAA6+B,GACA,MAAAluC,IAAA,KAAAkuC,KAGAD,IAAA12D,OAAA+3B,GAAA,SAAA1wC,GACA,SAAAq+B,GAAAr+B,EAAA,IAGA,IAAAuvE,IAAA,WACA,MAAAniC,IAAAiiC,IACA1qE,MAAA,QACAirC,UAAA,UAGA4/B,GAAA/+B,GAAA,SAAAn7C,GACA,OAAAA,EAAA6oC,GAAA7oC,OAAAkpC,GAAAlpC,IAGAk6E,IAAA72D,OAAA+3B,GAAA,SAAA1wC,GACA,MAAAA,IAGA,IAAAyvE,IAAA,WACA,MAAAriC,IAAAoiC,IACA7qE,MAAA,SACAirC,UAAA,SAOAiB,IAAAl4B,OAAA,SAAAtxB,EAAA0D,GACA,OAAA1D,EAAA,EAAAylD,GAAA5nC,GAAAna,IAAAuzC,IAGA,IAAAoxC,IAAA,WACA,MAAA1+B,IAAAH,IACAlsC,MAAA,IAAAogC,KA0DA4qC,GAAA,WACA,MAAA7/B,IAAAqB,IACAxsC,MAAA,OACAorC,WAAA,QAOAsB,IAAA14B,OAAA04B,EAEA,IAAAu+B,IAAA,WACA,MAAAxiC,IAAAiE,IACA1sC,MAAA,SAuBAkrE,GAAA,WACA,MAAA//B,IAAAwB,IACA3sC,MAAA,SACAmjB,QAAA,YAQA2pB,IAAA94B,OAAA+3B,GAAA5D,GAEA,IAAAgjC,IAAA,WACA,MAAA1iC,IAAAqE,IACA9sC,MAAA,SACAirC,UAAA,KAWAmgC,GAAA,WAOA,QAAAjyC,KAEA,MADAoR,GAAAC,EAAA,KACA/B,EARA,GACAh6C,GAAAC,EAAAC,EACA47C,EACAC,EACA/B,EAJAnsC,EAAA,EAAA0wC,EAAA,EAAAC,EAAA,EAAA5uC,EAAAwsC,GACAr8C,EAAA,KAAAk6C,EAAAmC,EAUA,OAAApC,IACAxO,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAAlsC,EAAAqqC,EAAA8B,EAAAvQ,KAEA0H,WAAA,SAAAl0C,GACA,MAAA0D,WAAArQ,QAAA4nD,EAAA,MAAAj7C,GAAAe,EAAAC,EAAAC,EAAAC,EAAA,KAAAk8C,IAAAlJ,GAAAnzC,GAAAf,EAAA,MAAAgB,GAAAhB,EAAA,MAAAiB,GAAAjB,EAAA,MAAAkB,GAAAlB,EAAA,OAAA0rC,KAAA,MAAA3qC,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAEAqR,MAAA,SAAAvS,GACA,MAAA0D,WAAArQ,QAAAud,EAAA0uC,GAAAzwC,GAAA7O,EAAAu/C,EAAAC,GAAA9T,KAAA78B,GAEAkD,UAAA,SAAA/R,GACA,MAAA0D,WAAArQ,QAAAud,EAAA0uC,GAAAzwC,EAAA0wC,GAAAv/C,EAAA,GAAAw/C,GAAAx/C,EAAA,IAAA0rC,MAAA6T,EAAAC,IAEAzE,UAAA,SAAAjV,EAAAxpC,GACA,MAAAy+C,IAAAC,EAAAlV,EAAAxpC,IAEA8+C,QAAA,SAAAjjD,EAAAmE,GACA,MAAA8+C,IAAAJ,EAAA7iD,EAAAmE,KASAmjD,IAAAl5B,OAAA+3B,GAAArS,GAEA,IAAA2xC,IAAA,WACA,MAAA5iC,IAAAyE,IACAltC,MAAA,OACAirC,UAAA,GAAA3M,IAQA6O,IAAAn5B,OAAA+3B,GAAA,SAAA1wC,GACA,SAAA8sC,GAAA9sC,IAGA,IAAAiwE,IAAA,WACA,MAAA7iC,IAAA0E,IACAntC,MAAA,KACAirC,UAAA,KAOAmC,IAAAp5B,OAAA,SAAAtxB,EAAA0D,GACA,QAAAA,EAAA,EAAA+hD,GAAA5nC,GAAA7d,IAAAi3C,IAGA,IAAA4xC,IAAA,WACA,GAAA50E,GAAA01C,GAAAe,IACAjqB,EAAAxsB,EAAAwsB,OACArjB,EAAAnJ,EAAAmJ,MAUA,OARAnJ,GAAAwsB,OAAA,SAAA11B,GACA,MAAA0D,WAAArQ,OAAAqiC,IAAA11B,EAAA,GAAAA,EAAA,MAAAA,EAAA01B,KAAA11B,EAAA,IAAAA,EAAA,MAGAkJ,EAAAmJ,OAAA,SAAArS,GACA,MAAA0D,WAAArQ,OAAAgf,GAAArS,EAAA,GAAAA,EAAA,GAAAA,EAAA3M,OAAA,EAAA2M,EAAA,YAAAA,EAAAqS,KAAArS,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAGAqS,GAAA,SACAE,MAAA,SAGAvgB,GAAA4tD,WACA5tD,EAAA+rF,OAAAl4D,GACA7zB,EAAA6zB,eACA7zB,EAAAguD,cACAhuD,EAAAkJ,aACAlJ,EAAAs3B,YACAt3B,EAAAiuD,cACAjuD,EAAAouD,aACApuD,EAAA8zC,UACA9zC,EAAAyuD,aACAzuD,EAAAgsF,0BAAAn9B,GACA7uD,EAAAisF,eAAAn9B,GACA9uD,EAAAksF,iBAAA39B,GACAvuD,EAAA0J,OACA1J,EAAA+uD,QACA/uD,EAAAgvD,UACAhvD,EAAA+C,SACA/C,EAAA+X,OACA/X,EAAAovD,SACApvD,EAAAqvD,WACArvD,EAAAmsF,SAAAp2D,GACA/1B,EAAA+lB,SACA/lB,EAAAuvD,QACAvvD,EAAA0vD,WACA1vD,EAAA4vD,OACA5vD,EAAA40B,SACA50B,EAAAmJ,WACAnJ,EAAA6vD,aACA7vD,EAAAmuD,YACAnuD,EAAA8vD,OACA9vD,EAAAmwD,WACAnwD,EAAAkwD,QACAlwD,EAAA8yB,UACA9yB,EAAAuK,IAAAF,EACArK,EAAAyK,MACAzK,EAAAowD,QACApwD,EAAAosF,cAAAv7B,GACA7wD,EAAAixD,aAAAvT,GACA19C,EAAAqsF,gBAAAr7B,GACAhxD,EAAAssF,YAAAn7B,GACAnxD,EAAAoxD,gBAAAF,GACAlxD,EAAAusF,kBAAAl7B,GACArxD,EAAAwsF,WAAArhF,EACAnL,EAAAysF,SAAAlhF,EACAvL,EAAA0sF,WAAArhF,EACArL,EAAA2sF,YAAArhF,EACAtL,EAAA4sF,cAAArhF,EACAvL,EAAA6sF,UAAAnhF,EACA1L,EAAA8sF,YAAAthF,EACAxL,EAAA+sF,aAAAthF,EACAzL,EAAAgtF,eAAAthF,EACA1L,EAAAitF,SAAAx7B,GACAzxD,EAAAktF,WAAA57B,GACAtxD,EAAAmtF,YAAA37B,GACAxxD,EAAAotF,cAAA37B,GACAzxD,EAAAqtF,QAAArhF,EACAhM,EAAAstF,UAAA3hF,EACA3L,EAAAutF,WAAAzhF,EACA9L,EAAAwtF,aAAAxhF,EACAhM,EAAAytF,QAAArhF,EACApM,EAAA0tF,UAAAxhF,EACAlM,EAAA2tF,WAAAxhF,EACAnM,EAAA4tF,aAAAxhF,EACApM,EAAA6tF,WAAArhF,EACAxM,EAAA8tF,aAAAzhF,EACArM,EAAA+tF,cAAAxhF,EACAvM,EAAAguF,gBAAAxhF,EACAxM,EAAAiuF,WAAAvhF,EACA1M,EAAAkuF,aAAAzhF,EACAzM,EAAAmuF,cAAAzhF,EACA1M,EAAAouF,gBAAA/gF,EACArN,EAAAquF,SAAAv8B,GACA9xD,EAAAsuF,WAAA18B,GACA5xD,EAAAuuF,YAAA18B,GACA7xD,EAAAwuF,cAAA18B,GACA9xD,EAAAyuF,YAAAt8B,GACAnyD,EAAA0uF,cAAAx8B,GACAlyD,EAAA2uF,eAAAx8B,GACAnyD,EAAA4uF,iBAAAx8B,GACApyD,EAAA6uF,YAAAx8B,GACAryD,EAAA8uF,gBAAAx8B,GACAtyD,EAAA+uF,YAAAx8B,GACAvyD,EAAAwoF,gBAAA11B,GACA9yD,EAAAgvF,cAAAh8B,GACAhzD,EAAAiO,OACAjO,EAAA6P,WACA7P,EAAAwR,QACAxR,EAAAixC,OACAjxC,EAAAqyD,KAAAmF,GACAx3D,EAAA6kC,QACA7kC,EAAAk4D,OACAl4D,EAAAu4D,cACAv4D,EAAAoV,WAAAkjD,GACAt4D,EAAAynB,UACAznB,EAAAy5D,WACAz5D,EAAAivF,aAAA7nD,GACApnC,EAAAkvF,YAAAt2B,GACA54D,EAAAmvF,cAAAp2B,GACA/4D,EAAAovF,aAAA/1B,GACAr5D,EAAAqvF,WAAAj2B,GACAp5D,EAAAsvF,eAAA/1B,GACAv5D,EAAAuvF,UAAA/1B,GACAx5D,EAAAwvF,iBAAAx1B,GACAh6D,EAAAyvF,eAAAx1B,GACAj6D,EAAA0vF,WAAA/1B,GACA35D,EAAA2vF,YAAAz1B,GACAl6D,EAAA4vF,oBAAAt1B,GACAt6D,EAAA6vF,kBAAAt1B,GACAv6D,EAAA8vF,cAAA31B,GACAn6D,EAAA+vF,sBAAAp1B,GACA36D,EAAAgwF,oBAAAp1B,GACA56D,EAAAiwF,gBAAAv1B,GACA16D,EAAAkwF,kBAAAr1B,GACA76D,EAAAm3D,eACAn3D,EAAAmwF,eAAA53E,GACAvY,EAAAowF,eAAA53E,GACAxY,EAAAqwF,aAAAp1B,GACAj7D,EAAAswF,UAAAxqE,GACA9lB,EAAAuwF,eAAAz3E,GACA9Y,EAAAwwF,gBAAA33E,GACA7Y,EAAAq7D,SACAr7D,EAAAywF,kBAAA70B,GACA57D,EAAA0wF,gBAAAv1B,GACAn7D,EAAA2wF,sBAAA90B,GACA77D,EAAA4wF,kBAAA90B,GACA97D,EAAA6wF,oBAAAx0B,GACAr8D,EAAA8wF,qBAAAv0B,GACAv8D,EAAA+wF,oBAAAv0B,GACAx8D,EAAAgxF,eAAA51B,GACAp7D,EAAAixF,kBAAAx+D,GACAzyB,EAAAwZ,SACAxZ,EAAA4a,OACA5a,EAAAgb,OACAhb,EAAA8b,OACA9b,EAAAsc,OACAtc,EAAAgd,aACAhd,EAAA+zB,eACA/zB,EAAAkxF,iBAAAxqB,GACA1mE,EAAAmxF,gBAAA3rE,GACAxlB,EAAAogB,qBACApgB,EAAAoxF,kBAAA9mF,GACAtK,EAAA00B,oBACA10B,EAAA+mE,qBACA/mE,EAAAsnE,2BACAtnE,EAAAunE,2BACAvnE,EAAA6nE,mBACA7nE,EAAAqmE,kBACArmE,EAAAqxF,oBAAA7qB,GACAxmE,EAAAsxF,0BAAA7qB,GACAzmE,EAAAuxF,eAAAppB,GACAnoE,EAAAwxF,mBAAAppB,GACApoE,EAAAyxF,eAAAtwE,GACAnhB,EAAA0xF,eAAArpB,GACAroE,EAAA2xF,mBAAArpB,GACAtoE,EAAA4xF,qBAAArpB,GACAvoE,EAAA6xF,yBAAArpB,GACAxoE,EAAA8xF,iBAAA3rB,GACAnmE,EAAA+xF,uBAAA3rB,GACApmE,EAAAyoE,YACAzoE,EAAAwhB,YACAxhB,EAAAgyF,UAAAppB,GACA5oE,EAAA0pE,YACA1pE,EAAA2pE,gBACA3pE,EAAA4pE,aACA5pE,EAAA6pE,iBACA7pE,EAAA+pE,YACA/pE,EAAAgqE,gBACAhqE,EAAAiqE,aACAjqE,EAAAkqE,iBACAlqE,EAAAmqE,WACAnqE,EAAAkD,QACAlD,EAAA6rE,QACA7rE,EAAAwD,QACAxD,EAAA8rE,OACA9rE,EAAAypE,IAAAwC,GACAjsE,EAAA8pE,IAAAoC,GACAlsE,EAAAujB,OACAvjB,EAAAgkB,SACAhkB,EAAAokB,cACApkB,EAAAykB,QAAAyb,GACAlgC,EAAAilB,SAAAonD,GACArsE,EAAAiyF,aAAA7sE,GACAplB,EAAAkyF,gBAAA3lB,GACAvsE,EAAAmyF,iBAAA3lB,GACAxsE,EAAAoyF,WAAAxlB,GACA5sE,EAAAqyF,YAAAxlB,GACA7sE,EAAAsyF,WAAAxlB,GACA9sE,EAAAuyF,YAAAxlB,GACA/sE,EAAAwyF,SAAAxlB,GACAhtE,EAAAyyF,UAAAxlB,GACAjtE,EAAA0yF,QAAAhiE,GACA1wB,EAAA2yF,SAAAnmE,GACAxsB,EAAA4yF,SAAA7hE,GACA/wB,EAAA6yF,UAAAtlB,GACAvtE,EAAA8yF,WAAA/hE,GACA/wB,EAAA+yF,YAAAxlB,GACAvtE,EAAAgzF,WAAAhiE,GACAhxB,EAAAizF,YAAAzlB,GACAxtE,EAAAkzF,YAAAhmB,GACAltE,EAAAmzF,aAAA1lB,EACAztE,GAAAozF,cAAAjmB,EACAntE,GAAAqzF,eAAA3lB,GACA1tE,EAAAszF,aAAAlmB,GACAptE,EAAAuzF,cAAA5lB,GACA3tE,EAAAwzF,WAAAnmB,GACArtE,EAAAyzF,YAAA7lB,GACA5tE,EAAA0zF,aAAApmB,GACAttE,EAAA2zF,cAAA9lB,GACA7tE,EAAA4zF,UAAA9lB,GACA9tE,EAAA6zF,WAAAnnE,GACA1sB,EAAA8zF,SAAAnjE,GACA3wB,EAAA+zF,UAAA/lB,GACAhuE,EAAAg0F,eAAAznB,GACAvsE,EAAAi0F,gBAAAznB,GACAxsE,EAAAk0F,UAAAtnB,GACA5sE,EAAAm0F,WAAAtnB,GACA7sE,EAAAiuE,aACAjuE,EAAAmuE,cACAnuE,EAAAouE,WACApuE,EAAAsuE,YACAtuE,EAAAkxB,UACAlxB,EAAAuuE,WACAvuE,EAAAo0F,QAAA7iE,GACAvxB,EAAAq0F,SAAAxlB,GACA7uE,EAAAuxB,aACAvxB,EAAA6uE,cACA7uE,EAAAwxB,aACAxxB,EAAA8uE,cACA9uE,EAAAwuE,cACAxuE,EAAA+uE,eACA/uE,EAAAyuE,gBACAzuE,EAAAgvE,iBACAhvE,EAAA0uE,eACA1uE,EAAAivE,gBACAjvE,EAAA2uE,aACA3uE,EAAAkvE,cACAlvE,EAAA4uE,eACA5uE,EAAAmvE,gBACAnvE,EAAAovE,YACApvE,EAAAsvE,aACAtvE,EAAAmxB,WACAnxB,EAAAwvE,YACAxvE,EAAAioB,gBACAjoB,EAAAs0F,oBAAAvsE,GACA/nB,EAAAywE,mBACAzwE,EAAAmxE,kBACAnxE,EAAAoxE,mBACApxE,EAAAqxE,kBACArxE,EAAAu0F,UAAA/iB,GACAxxE,EAAAw0F,SAAA/iB,GACAzxE,EAAAy0F,iBAAA5rE,GACA7oB,EAAA00F,wBAAAhjE,GACA1xB,EAAA20F,UAAApiE,GACAvyB,EAAA40F,WAAAzhE,GACAnzB,EAAA60F,cAAA7/D,GACAh1B,EAAA80F,YAAA//D,GACA/0B,EAAA+0F,SAAAjrF,GACA9J,EAAAg1F,aAAA/iE,GACAjyB,EAAAi1F,cAAA9iE,GACAnyB,EAAAk1F,SAAAtrF,GACA5J,EAAAm1F,UAAA7oF,GACAtM,EAAAo1F,cAAAv/D,GACA71B,EAAAq1F,cAAAl/D,GACAn2B,EAAAs1F,eAAAl/D,GACAp2B,EAAAu1F,UAAArxE,GACAlkB,EAAAw1F,SAAA7jB,GACA3xE,EAAAy1F,iBAAA7jB,GACA5xE,EAAA01F,kBAAA7jB,GACA7xE,EAAA21F,kBAAA7jB,GACA9xE,EAAA41F,iBAAA7jB,GACA/xE,EAAA61F,gBAAA79D,GACAh4B,EAAA81F,4BAAA9jB,GACAhyE,EAAA+1F,mBAAA3jB,GACApyE,EAAAg2F,gBAAA/jB,GACAjyE,EAAAi2F,gBAAA/jB,GACAlyE,EAAAk2F,mBAAA5jB,GACAtyE,EAAAm2F,iBAAA5jB,GACAvyE,EAAAo2F,mBAAA5jB,GACAxyE,EAAAq2F,kBAAA5jB,GACAzyE,EAAA8yE,WACA9yE,EAAAk6B,eACAl6B,EAAA04B,SACA14B,EAAA+yE,QAAAS,GACAxzE,EAAAs2C,SACAt2C,EAAA6yE,aACA7yE,EAAA0yE,cACA1yE,EAAA0C,UACA1C,EAAA2C,aACA3C,EAAAk/B,aACAl/B,EAAAgzE,YACAhzE,EAAA60E,eACA70E,EAAA23E,SACA33E,EAAA+3C,WACA/3C,EAAAo+B,UACAp+B,EAAAqtC,UACArtC,EAAA44C,aACA54C,EAAA+gC,cACA/gC,EAAAolC,WACAplC,EAAAqlC,aACArlC,EAAAslC,cACAtlC,EAAAulC,YACAvlC,EAAAw5E,WACAx5E,EAAAomC,aACApmC,EAAAypC,KAAA9lC,GACA3D,EAAAs2F,aAAA3b,GACA36E,EAAAipC,YAAAS,GACA1pC,EAAA86E,aACA96E,EAAAm7E,YACAn7E,EAAAkO,QACAlO,EAAAo8E,QAAAD,GACAn8E,EAAAu2F,cAAA5Z,GACA38E,EAAA8rC,eACA9rC,EAAA+rC,gBACA/rC,EAAAw2F,iBAAAtZ,GACAl9E,EAAAy2F,gBAAAva,GACAl8E,EAAA02F,kBAAAvZ,GACAn9E,EAAA22F,YAAAtZ,GACAr9E,EAAA42F,aAAAjZ,GACA39E,EAAA62F,UAAAxY,GACAr+E,EAAA82F,cAAArX,GACAz/E,EAAA+2F,gBAAAhY,GACA/+E,EAAAg3F,OAAAhX,GACAhgF,EAAAi3F,OAAAhX,GACAjgF,EAAAogF,QACApgF,EAAA24C,eACA34C,EAAAk3F,WAAAtqD,GACA5sC,EAAAyhF,WACAzhF,EAAAmiF,QACAniF,EAAAm3F,aAAAjjD,GACAl0C,EAAAo3F,cAAAx4E,GACA5e,EAAAw1C,SACAx1C,EAAAq1C,UACAr1C,EAAAu1C,UACAv1C,EAAAm1C,kBACAn1C,EAAAskF,SACAtkF,EAAAmlF,UACAnlF,EAAAq3F,UAAA7M,GACAxqF,EAAAs3F,aAAA7M,GACAzqF,EAAAu3F,QAAAxQ,GACA/mF,EAAAw3F,sBAAArM,GACAnrF,EAAAy3F,yBAAAxM,GACAjrF,EAAA03F,wBAAArM,GACArrF,EAAA23F,2BAAAvM,GACAprF,EAAA43F,UAAA5Q,GACAhnF,EAAA63F,YAAA3Q,GACAlnF,EAAA83F,UAAA1Q,GACApnF,EAAA+3F,cAAAxQ,GACAvnF,EAAAg4F,kBAAAzM,GACAvrF,EAAAi4F,qBAAAlrC,GACA/sD,EAAAk4F,kBAAA3N,GACAvqF,EAAAm4F,qBAAArsC,GACA9rD,EAAAo4F,oBAAA3M,GACAzrF,EAAAq4F,uBAAAnrC,GACAltD,EAAAs4F,YAAA1Z,GACA5+E,EAAAu4F,mBAAA/M,GACAxrF,EAAAw4F,sBAAAvrC,GACAjtD,EAAAy4F,YAAA/M,GACA1rF,EAAA04F,eAAArrC,GACArtD,EAAA24F,aAAAzzC,GACAllD,EAAA44F,eAAAjzC,GACA3lD,EAAA64F,YAAAlN,GACA3rF,EAAA84F,eAAApR,GACA1nF,EAAA+4F,UAAAvR,GACAxnF,EAAAg5F,YAAA1N,GACAtrF,EAAAi5F,eAAAxsC,GACAzsD,EAAAk5F,gBAAAtN,GACA5rF,EAAAm5F,mBAAA1rC,GACAztD,EAAAo5F,QAAAhR,GACApoF,EAAAq5F,cAAArwC,GACAhpD,EAAAs5F,qBAAA7uC,GACAzqD,EAAAu5F,YAAAn4C,GACAphD,EAAAw5F,iBAAA3N,GACA7rF,EAAAy5F,oBAAA/rC,GACA1tD,EAAAkpD,aACAlpD,EAAA05F,aAAApP,GACAtqF,EAAA25F,sBAAA7N,GACA9rF,EAAA45F,yBAAAjsC,GAEAptD,OAAAuD,eAAA9D,EAAA,cAA8C4D,OAAA","file":"post035.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PointWindow = undefined;\n\t\n\tvar _pointwindow = __webpack_require__(57);\n\t\n\tvar _pointwindow2 = _interopRequireDefault(_pointwindow);\n\t\n\tvar _d = __webpack_require__(60);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar windowSize = 5;\n\tvar maxPoints = 50;\n\tvar halfPt = 6;\n\tvar lineWidth = 2;\n\t\n\tvar canvasDom = document.getElementById('canvas');\n\tvar pointsDom = document.getElementById('points');\n\tvar minxDom = document.getElementById('minx');\n\tvar minyDom = document.getElementById('miny');\n\tvar maxxDom = document.getElementById('maxx');\n\tvar maxyDom = document.getElementById('maxy');\n\tvar w = parseInt(canvasDom.getAttribute('width'));\n\tvar h = parseInt(canvasDom.getAttribute('height'));\n\tvar ctx = canvasDom.getContext('2d');\n\t\n\tvar COLOR_ACTIVE = '#FFB30F';\n\tvar COLOR_EXTRA = '#437F97';\n\tvar COLOR_BORDER = '#FC020A';\n\t\n\tvar points = [];\n\tvar win = new _pointwindow2.default(windowSize);\n\t\n\tfunction drawCanvas() {\n\t  ctx.globalCompositeOperation = 'source-over';\n\t  ctx.clearRect(0, 0, w, h);\n\t  for (var i = 0; i < points.length; i++) {\n\t    ctx.fillStyle = i < windowSize ? COLOR_ACTIVE : COLOR_EXTRA;\n\t    ctx.fillRect(points[i][0] - halfPt, points[i][1] - halfPt, halfPt * 2, halfPt * 2);\n\t  }\n\t  var winW = win.maxX - win.minX;\n\t  var winH = win.maxY - win.minY;\n\t  ctx.strokeStyle = COLOR_BORDER;\n\t  ctx.lineWidth = lineWidth;\n\t  ctx.strokeRect(win.minX, win.minY, winW, winH);\n\t}\n\t\n\tfunction drawPoints() {\n\t  var elems = d3.select('#points').selectAll('span.point').data(points);\n\t\n\t  elems.enter().append('span').merge(elems).classed('point', true).classed('active', function (x, i) {\n\t    return i < windowSize;\n\t  }).html(function (x) {\n\t    return '(' + x[0] + ',' + x[1] + ')';\n\t  });\n\t\n\t  elems.exit().remove();\n\t}\n\t\n\tfunction drawWindows() {\n\t  var rows = d3.select('#windows').select('tbody').selectAll('tr').data(win.data());\n\t\n\t  var newrow = rows.enter().append('tr');\n\t\n\t  newrow.append('th').text(function (x) {\n\t    return x.label;\n\t  });\n\t\n\t  newrow.append('td');\n\t\n\t  rows.exit().remove();\n\t\n\t  var cells = d3.select('#windows').select('tbody').selectAll('tr').select('td').selectAll('div.entry').data(function (x) {\n\t    return x.data;\n\t  });\n\t\n\t  cells.enter().append('div').merge(cells).classed('entry', true).classed('active', function (x, i) {\n\t    return i == 0;\n\t  }).html(function (x) {\n\t    return '<span class=\"index\">' + x.index + ':</span> <span class=\"value\">' + x.value + '</span>';\n\t  });\n\t\n\t  cells.exit().remove();\n\t}\n\t\n\tfunction draw() {\n\t  drawCanvas();\n\t  drawPoints();\n\t  drawWindows();\n\t}\n\t\n\tcanvasDom.addEventListener('click', function (evt) {\n\t  points.splice(0, 0, [evt.offsetX, evt.offsetY]);\n\t  win.add(evt.offsetX, evt.offsetY);\n\t  while (points.length > maxPoints) {\n\t    points.pop();\n\t  }\n\t  draw();\n\t});\n\t\n\texports.PointWindow = _pointwindow2.default;\n\n/***/ },\n\n/***/ 57:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _slidingwindow = __webpack_require__(58);\n\t\n\tvar _slidingwindow2 = _interopRequireDefault(_slidingwindow);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PointWindow = function () {\n\t  function PointWindow(size) {\n\t    _classCallCheck(this, PointWindow);\n\t\n\t    this.minx_ = new _slidingwindow2.default(size, _slidingwindow2.default.Min);\n\t    this.miny_ = new _slidingwindow2.default(size, _slidingwindow2.default.Min);\n\t    this.maxx_ = new _slidingwindow2.default(size, _slidingwindow2.default.Max);\n\t    this.maxy_ = new _slidingwindow2.default(size, _slidingwindow2.default.Max);\n\t  }\n\t\n\t  _createClass(PointWindow, [{\n\t    key: 'add',\n\t    value: function add(x, y) {\n\t      this.minx_.add(x);\n\t      this.maxx_.add(x);\n\t      this.miny_.add(y);\n\t      this.maxy_.add(y);\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data() {\n\t      return [{ label: 'minx', data: this.minx_.toArray() }, { label: 'miny', data: this.miny_.toArray() }, { label: 'maxx', data: this.maxx_.toArray() }, { label: 'maxy', data: this.maxy_.toArray() }];\n\t    }\n\t  }, {\n\t    key: 'minX',\n\t    get: function get() {\n\t      return this.minx_.value || 0;\n\t    }\n\t  }, {\n\t    key: 'minY',\n\t    get: function get() {\n\t      return this.miny_.value || 0;\n\t    }\n\t  }, {\n\t    key: 'maxX',\n\t    get: function get() {\n\t      return this.maxx_.value || 0;\n\t    }\n\t  }, {\n\t    key: 'maxY',\n\t    get: function get() {\n\t      return this.maxy_.value || 0;\n\t    }\n\t  }]);\n\t\n\t  return PointWindow;\n\t}();\n\t\n\texports.default = PointWindow;\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _deque = __webpack_require__(59);\n\t\n\tvar _deque2 = _interopRequireDefault(_deque);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Entry = function Entry(index, value) {\n\t  _classCallCheck(this, Entry);\n\t\n\t  this.index = index;\n\t  this.value = value;\n\t};\n\t\n\tvar SlidingWindow = function () {\n\t  function SlidingWindow(size, compare) {\n\t    _classCallCheck(this, SlidingWindow);\n\t\n\t    this.deque_ = new _deque2.default();\n\t    this.count_ = 0;\n\t    this.size_ = size;\n\t    this.compare_ = compare;\n\t  }\n\t\n\t  _createClass(SlidingWindow, [{\n\t    key: 'add',\n\t    value: function add(item) {\n\t      var curr = this.deque_.peekTail();\n\t      while (curr && curr.index >= 0 && !this.compare_(curr.value, item)) {\n\t        this.deque_.popTail();\n\t        curr = this.deque_.peekTail();\n\t      }\n\t      this.deque_.pushTail(new Entry(this.count_, item));\n\t      this.count_++;\n\t      curr = this.deque_.peekHead();\n\t      while (curr && curr.index < this.count_ - this.size_) {\n\t        this.deque_.popHead();\n\t        curr = this.deque_.peekHead();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toArray',\n\t    value: function toArray() {\n\t      return this.deque_.toArray();\n\t    }\n\t  }, {\n\t    key: 'value',\n\t    get: function get() {\n\t      var head = this.deque_.peekHead();\n\t      return head && head.value || null;\n\t    }\n\t  }], [{\n\t    key: 'Max',\n\t    value: function Max(a, b) {\n\t      return a > b;\n\t    }\n\t  }, {\n\t    key: 'Min',\n\t    value: function Min(a, b) {\n\t      return a < b;\n\t    }\n\t  }]);\n\t\n\t  return SlidingWindow;\n\t}();\n\t\n\texports.default = SlidingWindow;\n\n/***/ },\n\n/***/ 59:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Item = function Item(value) {\n\t  _classCallCheck(this, Item);\n\t\n\t  this.value = value;\n\t  this.next = null;\n\t  this.prev = null;\n\t};\n\t\n\tvar Deque = function () {\n\t  function Deque() {\n\t    _classCallCheck(this, Deque);\n\t\n\t    this.head_ = null;\n\t    this.tail_ = null;\n\t  }\n\t\n\t  _createClass(Deque, [{\n\t    key: \"pushHead\",\n\t    value: function pushHead(i) {\n\t      var item = new Item(i);\n\t      item.next = this.head_;\n\t      if (this.head_) {\n\t        this.head_.prev = item;\n\t      }\n\t      this.head_ = item;\n\t      if (!this.tail_) {\n\t        this.tail_ = item;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"pushTail\",\n\t    value: function pushTail(i) {\n\t      var item = new Item(i);\n\t      item.prev = this.tail_;\n\t      if (this.tail_) {\n\t        this.tail_.next = item;\n\t      }\n\t      this.tail_ = item;\n\t      if (!this.head_) {\n\t        this.head_ = item;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"popHead\",\n\t    value: function popHead() {\n\t      var item = this.head_;\n\t      if (item && item.next) {\n\t        this.head_ = item.next;\n\t        item.next.prev = null;\n\t      } else {\n\t        this.head_ = null;\n\t        this.tail_ = null;\n\t      }\n\t      return item && item.value || null;\n\t    }\n\t  }, {\n\t    key: \"popTail\",\n\t    value: function popTail() {\n\t      var item = this.tail_;\n\t      if (item && item.prev) {\n\t        this.tail_ = item.prev;\n\t        item.prev.next = null;\n\t      } else {\n\t        this.head_ = null;\n\t        this.tail_ = null;\n\t      }\n\t      return item && item.value || null;\n\t    }\n\t  }, {\n\t    key: \"peekHead\",\n\t    value: function peekHead() {\n\t      return this.head_ && this.head_.value || null;\n\t    }\n\t  }, {\n\t    key: \"peekTail\",\n\t    value: function peekTail() {\n\t      return this.tail_ && this.tail_.value || null;\n\t    }\n\t  }, {\n\t    key: \"filter\",\n\t    value: function filter(test) {\n\t      var item = this.head_;\n\t      while (item !== null) {\n\t        if (test(item.value) === false) {\n\t          if (item.prev === null) {\n\t            this.head_ = item.next;\n\t          } else {\n\t            item.prev.next = item.next;\n\t          }\n\t          if (item.next === null) {\n\t            this.tail_ = item.prev;\n\t          } else {\n\t            item.next.prev = item.prev;\n\t          }\n\t        }\n\t        item = item.next;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"toArray\",\n\t    value: function toArray() {\n\t      var item = this.head_;\n\t      var array = [];\n\t      while (item != null) {\n\t        array.push(item.value);\n\t        item = item.next;\n\t      }\n\t      return array;\n\t    }\n\t  }]);\n\t\n\t  return Deque;\n\t}();\n\t\n\texports.default = Deque;\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.3.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = [];\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._.push(\"Z\");\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._.push(\n\t        \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._.push(\n\t          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t        );\n\t      }\n\t\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t      );\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._.push(\n\t        \"L\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t      );\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t  },\n\t  toString: function() {\n\t    return this._.join(\"\");\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\tvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t    minValue = maxValue = sumValue = nodes[i0].value;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (i1 = i0 + 1; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[i], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > i) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d, i) {\n\t  return i;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < n; ++i) {\n\t      count[i] = 0;\n\t    }\n\t\n\t    for (i = 0; i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      ++count[link.source.index], ++count[link.target.index];\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t    return dx || dy ? transform.translate(dx, dy) : transform;\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t    }\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(k, tx, ty) {\n\t  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * k + tx, y * k + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// post035.js","import PointWindow from './pointwindow';\nimport * as d3 from 'd3';\n\nconst windowSize = 5;\nconst maxPoints = 50;\nconst halfPt = 6;\nconst lineWidth = 2;\n\nconst canvasDom = document.getElementById('canvas');\nconst pointsDom = document.getElementById('points');\nconst minxDom = document.getElementById('minx');\nconst minyDom = document.getElementById('miny');\nconst maxxDom = document.getElementById('maxx');\nconst maxyDom = document.getElementById('maxy');\nconst w = parseInt(canvasDom.getAttribute('width'));\nconst h = parseInt(canvasDom.getAttribute('height'));\nconst ctx = canvasDom.getContext('2d');\n\nconst COLOR_ACTIVE = '#FFB30F';\nconst COLOR_EXTRA = '#437F97';\nconst COLOR_BORDER = '#FC020A';\n\nlet points = [];\nlet win = new PointWindow(windowSize);\n\nfunction drawCanvas() {\n  ctx.globalCompositeOperation = 'source-over';\n  ctx.clearRect(0, 0, w, h);\n  for (var i = 0; i < points.length; i++) {\n    ctx.fillStyle = (i < windowSize) ? COLOR_ACTIVE : COLOR_EXTRA;\n    ctx.fillRect(points[i][0] - halfPt, points[i][1] - halfPt, halfPt * 2, halfPt * 2);\n  }\n  var winW = win.maxX - win.minX;\n  var winH = win.maxY - win.minY;\n  ctx.strokeStyle = COLOR_BORDER;\n  ctx.lineWidth = lineWidth;\n  ctx.strokeRect(win.minX, win.minY, winW, winH);\n}\n\nfunction drawPoints() {\n  const elems = d3\n    .select('#points')\n    .selectAll('span.point')\n    .data(points);\n\n  elems\n    .enter()\n      .append('span')\n    .merge(elems)\n      .classed('point', true)\n      .classed('active', (x, i) => i < windowSize)\n      .html((x) => `(${x[0]},${x[1]})`);\n\n  elems.exit().remove();\n}\n\nfunction drawWindows() {\n  const rows = d3\n    .select('#windows')\n    .select('tbody')\n    .selectAll('tr')\n    .data(win.data());\n\n  const newrow = rows\n    .enter()\n      .append('tr');\n\n  newrow\n    .append('th')\n    .text((x) => x.label);\n\n  newrow\n    .append('td');\n\n  rows.exit().remove();\n\n  const cells = d3\n    .select('#windows')\n    .select('tbody')\n    .selectAll('tr')\n    .select('td')\n    .selectAll('div.entry')\n    .data((x) => x.data);\n\n  cells\n    .enter()\n      .append('div')\n    .merge(cells)\n      .classed('entry', true)\n      .classed('active', (x, i) => i == 0)\n      .html((x) => `<span class=\"index\">${x.index}:</span> <span class=\"value\">${x.value}</span>`);\n\n  cells\n    .exit()\n    .remove();\n}\n\nfunction draw() {\n  drawCanvas();\n  drawPoints();\n  drawWindows();\n}\n\ncanvasDom.addEventListener('click', function(evt) {\n  points.splice(0, 0, [evt.offsetX, evt.offsetY]);\n  win.add(evt.offsetX, evt.offsetY);\n  while (points.length > maxPoints) {\n    points.pop();\n  }\n  draw();\n});\n\nexport { PointWindow };\n\n\n\n// WEBPACK FOOTER //\n// ./src/post035/main.js","import SlidingWindow from './slidingwindow';\n\nexport default class PointWindow {\n  constructor(size) {\n    this.minx_ = new SlidingWindow(size, SlidingWindow.Min);\n    this.miny_ = new SlidingWindow(size, SlidingWindow.Min);\n    this.maxx_ = new SlidingWindow(size, SlidingWindow.Max);\n    this.maxy_ = new SlidingWindow(size, SlidingWindow.Max);\n  }\n\n  add(x, y) {\n    this.minx_.add(x);\n    this.maxx_.add(x);\n    this.miny_.add(y);\n    this.maxy_.add(y);\n  }\n\n  get minX() {\n    return this.minx_.value || 0;\n  }\n\n  get minY() {\n    return this.miny_.value || 0;\n  }\n\n  get maxX() {\n    return this.maxx_.value || 0;\n  }\n\n  get maxY() {\n    return this.maxy_.value || 0;\n  }\n\n  data() {\n    return [\n      { label: 'minx', data: this.minx_.toArray() },\n      { label: 'miny', data: this.miny_.toArray() },\n      { label: 'maxx', data: this.maxx_.toArray() },\n      { label: 'maxy', data: this.maxy_.toArray() }\n    ];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/post035/pointwindow.js","import Deque from '../common/deque';\n\nclass Entry {\n  constructor(index, value) {\n    this.index = index;\n    this.value = value;\n  }\n}\n\nexport default class SlidingWindow {\n  constructor(size, compare) {\n    this.deque_ = new Deque();\n    this.count_ = 0;\n    this.size_ = size;\n    this.compare_ = compare;\n  }\n\n  add(item) {\n    let curr = this.deque_.peekTail();\n    while (curr && curr.index >= 0 && !this.compare_(curr.value, item)) {\n      this.deque_.popTail();\n      curr = this.deque_.peekTail();\n    }\n    this.deque_.pushTail(new Entry(this.count_, item));\n    this.count_++;\n    curr = this.deque_.peekHead();\n    while (curr && curr.index < (this.count_ - this.size_)) {\n      this.deque_.popHead();\n      curr = this.deque_.peekHead();\n    }\n  }\n\n  get value() {\n    let head = this.deque_.peekHead();\n    return head && head.value || null;\n  }\n\n  toArray() {\n    return this.deque_.toArray();\n  }\n\n  static Max(a,b) { return a > b };\n  static Min(a,b) { return a < b };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/post035/slidingwindow.js","class Item {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nexport default class Deque {\n  constructor() {\n    this.head_ = null;\n    this.tail_ = null;\n  }\n\n  pushHead(i) {\n    const item = new Item(i);\n    item.next = this.head_;\n    if (this.head_) {\n      this.head_.prev = item;\n    }\n    this.head_ = item;\n    if (!this.tail_) {\n      this.tail_ = item;\n    }\n  }\n\n  pushTail(i) {\n    const item = new Item(i);\n    item.prev = this.tail_;\n    if (this.tail_) {\n      this.tail_.next = item;\n    }\n    this.tail_ = item;\n    if (!this.head_) {\n      this.head_ = item;\n    }\n  }\n\n  popHead() {\n    const item = this.head_;\n    if (item && item.next) {\n      this.head_ = item.next;\n      item.next.prev = null;\n    } else {\n      this.head_ = null;\n      this.tail_ = null;\n    }\n    return item && item.value || null;\n  }\n\n  popTail() {\n    const item = this.tail_;\n    if (item && item.prev) {\n      this.tail_ = item.prev;\n      item.prev.next = null;\n    } else {\n      this.head_ = null;\n      this.tail_ = null;\n    }\n    return item && item.value || null;\n  }\n\n  peekHead() {\n    return this.head_ && this.head_.value || null;\n  }\n\n  peekTail() {\n    return this.tail_ && this.tail_.value || null;\n  }\n\n  filter(test) {\n    let item = this.head_;\n    while (item !== null) {\n      if (test(item.value) === false) {\n        if (item.prev === null) {\n          this.head_ = item.next;\n        } else {\n          item.prev.next = item.next;\n        }\n        if (item.next === null) {\n          this.tail_ = item.prev;\n        } else {\n          item.next.prev = item.prev;\n        }\n      }\n      item = item.next;\n    }\n  }\n\n  toArray() {\n    let item = this.head_;\n    let array = [];\n    while (item != null) {\n      array.push(item.value);\n      item = item.next;\n    }\n    return array;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/deque.js","// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.3.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d, i) {\n  return i;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(k, tx, ty) {\n  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * k + tx, y * k + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 60\n// module chunks = 3"],"sourceRoot":""}