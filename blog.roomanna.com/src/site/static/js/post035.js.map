{"version":3,"sources":["webpack:///post035.js","webpack:///./src/post035/main.js","webpack:///./src/post035/pointwindow.js","webpack:///./src/post035/slidingwindow.js","webpack:///./src/common/deque.js","webpack:///./~/d3/build/d3.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","drawCanvas","ctx","globalCompositeOperation","clearRect","w","h","i","points","length","fillStyle","windowSize","COLOR_ACTIVE","COLOR_EXTRA","fillRect","halfPt","winW","win","maxX","minX","winH","maxY","minY","strokeStyle","COLOR_BORDER","lineWidth","strokeRect","drawPoints","elems","d3","select","selectAll","data","enter","append","merge","classed","style","x","text","exit","remove","drawWindows","rows","newrow","label","cells","value","index","draw","defineProperty","PointWindow","undefined","_pointwindow","_pointwindow2","_d","maxPoints","canvasDom","document","getElementById","parseInt","getAttribute","getContext","addEventListener","evt","splice","offsetX","offsetY","add","pop","57","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_slidingwindow","_slidingwindow2","size","this","minx_","Min","miny_","maxx_","Max","maxy_","y","toArray","get","58","_deque","_deque2","Entry","SlidingWindow","compare","deque_","count_","size_","compare_","item","_this","filter","pushTail","head","peekHead","popHead","a","b","59","Item","next","prev","Deque","head_","tail_","test","array","push","60","global","factory","ascendingComparator","f","d","ascending","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","Map","map$1","object","map","each","set","Array","isArray","o","n","createObject","setObject","createMap","setMap","Set","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","computeUpperHullIndexes","indexes","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","Infinity","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","c","end","apply","noabort","r","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","p","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","extend","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","createElement","cssRoot","documentElement","cssView","defaultView","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","indexOf","type","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","range","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","width","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","id","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","order","tickExit","tickEnter","attr","line","left","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","height","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","i1","sumValue","minValue","maxValue","newRatio","minRatio","i0","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","cross$1","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw"],"mappings":"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","file":"post035.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PointWindow = undefined;\n\t\n\tvar _pointwindow = __webpack_require__(57);\n\t\n\tvar _pointwindow2 = _interopRequireDefault(_pointwindow);\n\t\n\tvar _d = __webpack_require__(60);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar windowSize = 5;\n\tvar maxPoints = 50;\n\tvar halfPt = 6;\n\tvar lineWidth = 2;\n\t\n\tvar canvasDom = document.getElementById('canvas');\n\tvar pointsDom = document.getElementById('points');\n\tvar minxDom = document.getElementById('minx');\n\tvar minyDom = document.getElementById('miny');\n\tvar maxxDom = document.getElementById('maxx');\n\tvar maxyDom = document.getElementById('maxy');\n\tvar w = parseInt(canvasDom.getAttribute('width'));\n\tvar h = parseInt(canvasDom.getAttribute('height'));\n\tvar ctx = canvasDom.getContext('2d');\n\t\n\tvar COLOR_ACTIVE = '#FFB30F';\n\tvar COLOR_EXTRA = '#437F97';\n\tvar COLOR_BORDER = '#FC020A';\n\t\n\tvar points = [];\n\tvar win = new _pointwindow2.default(windowSize);\n\t\n\tfunction drawCanvas() {\n\t  ctx.globalCompositeOperation = 'source-over';\n\t  ctx.clearRect(0, 0, w, h);\n\t  for (var i = 0; i < points.length; i++) {\n\t    ctx.fillStyle = i < windowSize ? COLOR_ACTIVE : COLOR_EXTRA;\n\t    ctx.fillRect(points[i][0] - halfPt, points[i][1] - halfPt, halfPt * 2, halfPt * 2);\n\t  }\n\t  var winW = win.maxX - win.minX;\n\t  var winH = win.maxY - win.minY;\n\t  ctx.strokeStyle = COLOR_BORDER;\n\t  ctx.lineWidth = lineWidth;\n\t  ctx.strokeRect(win.minX, win.minY, winW, winH);\n\t}\n\t\n\tfunction drawPoints() {\n\t  var elems = d3.select('#points').selectAll('span.point').data(points);\n\t\n\t  elems.enter().append('span').merge(elems).classed('point', true).style('color', function (x, i) {\n\t    return i < windowSize ? COLOR_ACTIVE : COLOR_EXTRA;\n\t  }).text(function (x) {\n\t    return '(' + x[0] + ',' + x[1] + ')';\n\t  });\n\t\n\t  elems.exit().remove();\n\t}\n\t\n\tfunction drawWindows() {\n\t  var rows = d3.select('#windows').select('tbody').selectAll('tr').data(win.data());\n\t\n\t  var newrow = rows.enter().append('tr');\n\t\n\t  newrow.append('th').text(function (x) {\n\t    return x.label;\n\t  });\n\t\n\t  newrow.append('td');\n\t\n\t  rows.exit().remove();\n\t\n\t  var cells = d3.select('#windows').select('tbody').selectAll('tr').select('td').selectAll('span').data(function (x) {\n\t    return x.data;\n\t  });\n\t\n\t  cells.enter().append('span').merge(cells).classed('point', true).style('color', function (x, i) {\n\t    return i == 0 ? COLOR_BORDER : COLOR_EXTRA;\n\t  }).text(function (x) {\n\t    return '(' + x.value + ',' + x.index + ')';\n\t  });\n\t\n\t  cells.exit().remove();\n\t}\n\t\n\tfunction draw() {\n\t  drawCanvas();\n\t  drawPoints();\n\t  drawWindows();\n\t}\n\t\n\tcanvasDom.addEventListener('click', function (evt) {\n\t  points.splice(0, 0, [evt.offsetX, evt.offsetY]);\n\t  win.add(evt.offsetX, evt.offsetY);\n\t  while (points.length > maxPoints) {\n\t    points.pop();\n\t  }\n\t  draw();\n\t});\n\t\n\texports.PointWindow = _pointwindow2.default;\n\n/***/ },\n\n/***/ 57:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _slidingwindow = __webpack_require__(58);\n\t\n\tvar _slidingwindow2 = _interopRequireDefault(_slidingwindow);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PointWindow = function () {\n\t  function PointWindow(size) {\n\t    _classCallCheck(this, PointWindow);\n\t\n\t    this.minx_ = new _slidingwindow2.default(size, _slidingwindow2.default.Min);\n\t    this.miny_ = new _slidingwindow2.default(size, _slidingwindow2.default.Min);\n\t    this.maxx_ = new _slidingwindow2.default(size, _slidingwindow2.default.Max);\n\t    this.maxy_ = new _slidingwindow2.default(size, _slidingwindow2.default.Max);\n\t  }\n\t\n\t  _createClass(PointWindow, [{\n\t    key: 'add',\n\t    value: function add(x, y) {\n\t      this.minx_.add(x);\n\t      this.maxx_.add(x);\n\t      this.miny_.add(y);\n\t      this.maxy_.add(y);\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data() {\n\t      return [{ label: 'minx', data: this.minx_.toArray() }, { label: 'miny', data: this.miny_.toArray() }, { label: 'maxx', data: this.maxx_.toArray() }, { label: 'maxy', data: this.maxy_.toArray() }];\n\t    }\n\t  }, {\n\t    key: 'minX',\n\t    get: function get() {\n\t      return this.minx_.value || 0;\n\t    }\n\t  }, {\n\t    key: 'minY',\n\t    get: function get() {\n\t      return this.miny_.value || 0;\n\t    }\n\t  }, {\n\t    key: 'maxX',\n\t    get: function get() {\n\t      return this.maxx_.value || 0;\n\t    }\n\t  }, {\n\t    key: 'maxY',\n\t    get: function get() {\n\t      return this.maxy_.value || 0;\n\t    }\n\t  }]);\n\t\n\t  return PointWindow;\n\t}();\n\t\n\texports.default = PointWindow;\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _deque = __webpack_require__(59);\n\t\n\tvar _deque2 = _interopRequireDefault(_deque);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Entry = function Entry(index, value) {\n\t  _classCallCheck(this, Entry);\n\t\n\t  this.index = index;\n\t  this.value = value;\n\t};\n\t\n\tvar SlidingWindow = function () {\n\t  function SlidingWindow(size, compare) {\n\t    _classCallCheck(this, SlidingWindow);\n\t\n\t    this.deque_ = new _deque2.default();\n\t    this.count_ = 0;\n\t    this.size_ = size;\n\t    this.compare_ = compare;\n\t  }\n\t\n\t  _createClass(SlidingWindow, [{\n\t    key: 'add',\n\t    value: function add(item) {\n\t      var _this = this;\n\t\n\t      this.deque_.filter(function (x) {\n\t        return _this.compare_(x.value, item);\n\t      });\n\t      this.deque_.pushTail(new Entry(this.count_, item));\n\t      this.count_++;\n\t      var head = this.deque_.peekHead();\n\t      while (head && head.index < this.count_ - this.size_) {\n\t        this.deque_.popHead();\n\t        head = this.deque_.peekHead();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toArray',\n\t    value: function toArray() {\n\t      return this.deque_.toArray();\n\t    }\n\t  }, {\n\t    key: 'value',\n\t    get: function get() {\n\t      var head = this.deque_.peekHead();\n\t      return head && head.value || null;\n\t    }\n\t  }], [{\n\t    key: 'Max',\n\t    value: function Max(a, b) {\n\t      return a > b;\n\t    }\n\t  }, {\n\t    key: 'Min',\n\t    value: function Min(a, b) {\n\t      return a < b;\n\t    }\n\t  }]);\n\t\n\t  return SlidingWindow;\n\t}();\n\t\n\texports.default = SlidingWindow;\n\n/***/ },\n\n/***/ 59:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Item = function Item(value) {\n\t  _classCallCheck(this, Item);\n\t\n\t  this.value = value;\n\t  this.next = null;\n\t  this.prev = null;\n\t};\n\t\n\tvar Deque = function () {\n\t  function Deque() {\n\t    _classCallCheck(this, Deque);\n\t\n\t    this.head_ = null;\n\t    this.tail_ = null;\n\t  }\n\t\n\t  _createClass(Deque, [{\n\t    key: \"pushHead\",\n\t    value: function pushHead(i) {\n\t      var item = new Item(i);\n\t      item.next = this.head_;\n\t      if (this.head_) {\n\t        this.head_.prev = item;\n\t      }\n\t      this.head_ = item;\n\t      if (!this.tail_) {\n\t        this.tail_ = item;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"pushTail\",\n\t    value: function pushTail(i) {\n\t      var item = new Item(i);\n\t      item.prev = this.tail_;\n\t      if (this.tail_) {\n\t        this.tail_.next = item;\n\t      }\n\t      this.tail_ = item;\n\t      if (!this.head_) {\n\t        this.head_ = item;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"popHead\",\n\t    value: function popHead() {\n\t      var item = this.head_;\n\t      if (item && item.next) {\n\t        this.head_ = item.next;\n\t        item.next.prev = null;\n\t      } else {\n\t        this.head_ = null;\n\t        this.tail_ = null;\n\t      }\n\t      return item && item.value || null;\n\t    }\n\t  }, {\n\t    key: \"popTail\",\n\t    value: function popTail() {\n\t      var item = this.tail_;\n\t      if (item && item.prev) {\n\t        this.tail_ = item.prev;\n\t        item.prev.next = null;\n\t      } else {\n\t        this.head_ = null;\n\t        this.tail_ = null;\n\t      }\n\t      return item && item.value || null;\n\t    }\n\t  }, {\n\t    key: \"peekHead\",\n\t    value: function peekHead() {\n\t      return this.head_ && this.head_.value || null;\n\t    }\n\t  }, {\n\t    key: \"peekTail\",\n\t    value: function peekTail() {\n\t      return this.tail_ && this.tail_.value || null;\n\t    }\n\t  }, {\n\t    key: \"filter\",\n\t    value: function filter(test) {\n\t      var item = this.head_;\n\t      while (item !== null) {\n\t        if (test(item.value) === false) {\n\t          if (item.prev === null) {\n\t            this.head_ = item.next;\n\t          } else {\n\t            item.prev.next = item.next;\n\t          }\n\t          if (item.next === null) {\n\t            this.tail_ = item.prev;\n\t          } else {\n\t            item.next.prev = item.prev;\n\t          }\n\t        }\n\t        item = item.next;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"toArray\",\n\t    value: function toArray() {\n\t      var item = this.head_;\n\t      var array = [];\n\t      while (item != null) {\n\t        array.push(item.value);\n\t        item = item.next;\n\t      }\n\t      return array;\n\t    }\n\t  }]);\n\t\n\t  return Deque;\n\t}();\n\t\n\texports.default = Deque;\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.3.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = [];\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._.push(\"Z\");\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._.push(\n\t        \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._.push(\n\t          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t        );\n\t      }\n\t\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t      );\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._.push(\n\t        \"L\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t      );\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t  },\n\t  toString: function() {\n\t    return this._.join(\"\");\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\tvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t    minValue = maxValue = sumValue = nodes[i0].value;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (i1 = i0 + 1; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[i], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > i) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d, i) {\n\t  return i;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < n; ++i) {\n\t      count[i] = 0;\n\t    }\n\t\n\t    for (i = 0; i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      ++count[link.source.index], ++count[link.target.index];\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t    return dx || dy ? transform.translate(dx, dy) : transform;\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t    }\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(k, tx, ty) {\n\t  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * k + tx, y * k + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// post035.js","import PointWindow from './pointwindow';\nimport * as d3 from 'd3';\n\nconst windowSize = 5;\nconst maxPoints = 50;\nconst halfPt = 6;\nconst lineWidth = 2;\n\nconst canvasDom = document.getElementById('canvas');\nconst pointsDom = document.getElementById('points');\nconst minxDom = document.getElementById('minx');\nconst minyDom = document.getElementById('miny');\nconst maxxDom = document.getElementById('maxx');\nconst maxyDom = document.getElementById('maxy');\nconst w = parseInt(canvasDom.getAttribute('width'));\nconst h = parseInt(canvasDom.getAttribute('height'));\nconst ctx = canvasDom.getContext('2d');\n\nconst COLOR_ACTIVE = '#FFB30F';\nconst COLOR_EXTRA = '#437F97';\nconst COLOR_BORDER = '#FC020A';\n\nlet points = [];\nlet win = new PointWindow(windowSize);\n\nfunction drawCanvas() {\n  ctx.globalCompositeOperation = 'source-over';\n  ctx.clearRect(0, 0, w, h);\n  for (var i = 0; i < points.length; i++) {\n    ctx.fillStyle = (i < windowSize) ? COLOR_ACTIVE : COLOR_EXTRA;\n    ctx.fillRect(points[i][0] - halfPt, points[i][1] - halfPt, halfPt * 2, halfPt * 2);\n  }\n  var winW = win.maxX - win.minX;\n  var winH = win.maxY - win.minY;\n  ctx.strokeStyle = COLOR_BORDER;\n  ctx.lineWidth = lineWidth;\n  ctx.strokeRect(win.minX, win.minY, winW, winH);\n}\n\nfunction drawPoints() {\n  const elems = d3\n    .select('#points')\n    .selectAll('span.point')\n    .data(points);\n\n  elems\n    .enter()\n      .append('span')\n    .merge(elems)\n      .classed('point', true)\n      .style('color', (x, i) => i < windowSize ? COLOR_ACTIVE : COLOR_EXTRA)\n      .text((x) => `(${x[0]},${x[1]})`);\n\n  elems.exit().remove();\n}\n\nfunction drawWindows() {\n  const rows = d3\n    .select('#windows')\n    .select('tbody')\n    .selectAll('tr')\n    .data(win.data());\n\n  const newrow = rows\n    .enter()\n      .append('tr');\n\n  newrow\n    .append('th')\n    .text((x) => x.label);\n\n  newrow\n    .append('td');\n\n  rows.exit().remove();\n\n  const cells = d3\n    .select('#windows')\n    .select('tbody')\n    .selectAll('tr')\n    .select('td')\n    .selectAll('span')\n    .data((x) => x.data);\n\n  cells\n    .enter()\n      .append('span')\n    .merge(cells)\n      .classed('point', true)\n      .style('color', (x, i) => i == 0 ? COLOR_BORDER : COLOR_EXTRA)\n      .text((x) => `(${x.value},${x.index})`);\n\n  cells\n    .exit()\n    .remove();\n}\n\nfunction draw() {\n  drawCanvas();\n  drawPoints();\n  drawWindows();\n}\n\ncanvasDom.addEventListener('click', function(evt) {\n  points.splice(0, 0, [evt.offsetX, evt.offsetY]);\n  win.add(evt.offsetX, evt.offsetY);\n  while (points.length > maxPoints) {\n    points.pop();\n  }\n  draw();\n});\n\nexport { PointWindow };\n\n\n\n// WEBPACK FOOTER //\n// ./src/post035/main.js","import SlidingWindow from './slidingwindow';\n\nexport default class PointWindow {\n  constructor(size) {\n    this.minx_ = new SlidingWindow(size, SlidingWindow.Min);\n    this.miny_ = new SlidingWindow(size, SlidingWindow.Min);\n    this.maxx_ = new SlidingWindow(size, SlidingWindow.Max);\n    this.maxy_ = new SlidingWindow(size, SlidingWindow.Max);\n  }\n\n  add(x, y) {\n    this.minx_.add(x);\n    this.maxx_.add(x);\n    this.miny_.add(y);\n    this.maxy_.add(y);\n  }\n\n  get minX() {\n    return this.minx_.value || 0;\n  }\n\n  get minY() {\n    return this.miny_.value || 0;\n  }\n\n  get maxX() {\n    return this.maxx_.value || 0;\n  }\n\n  get maxY() {\n    return this.maxy_.value || 0;\n  }\n\n  data() {\n    return [\n      { label: 'minx', data: this.minx_.toArray() },\n      { label: 'miny', data: this.miny_.toArray() },\n      { label: 'maxx', data: this.maxx_.toArray() },\n      { label: 'maxy', data: this.maxy_.toArray() }\n    ];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/post035/pointwindow.js","import Deque from '../common/deque';\n\nclass Entry {\n  constructor(index, value) {\n    this.index = index;\n    this.value = value;\n  }\n}\n\nexport default class SlidingWindow {\n  constructor(size, compare) {\n    this.deque_ = new Deque();\n    this.count_ = 0;\n    this.size_ = size;\n    this.compare_ = compare;\n  }\n\n  add(item) {\n    this.deque_.filter((x) => this.compare_(x.value, item));\n    this.deque_.pushTail(new Entry(this.count_, item));\n    this.count_++;\n    let head = this.deque_.peekHead();\n    while (head && head.index < (this.count_ - this.size_)) {\n      this.deque_.popHead();\n      head = this.deque_.peekHead();\n    }\n  }\n\n  get value() {\n    let head = this.deque_.peekHead();\n    return head && head.value || null;\n  }\n\n  toArray() {\n    return this.deque_.toArray();\n  }\n\n  static Max(a,b) { return a > b };\n  static Min(a,b) { return a < b };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/post035/slidingwindow.js","class Item {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nexport default class Deque {\n  constructor() {\n    this.head_ = null;\n    this.tail_ = null;\n  }\n\n  pushHead(i) {\n    const item = new Item(i);\n    item.next = this.head_;\n    if (this.head_) {\n      this.head_.prev = item;\n    }\n    this.head_ = item;\n    if (!this.tail_) {\n      this.tail_ = item;\n    }\n  }\n\n  pushTail(i) {\n    const item = new Item(i);\n    item.prev = this.tail_;\n    if (this.tail_) {\n      this.tail_.next = item;\n    }\n    this.tail_ = item;\n    if (!this.head_) {\n      this.head_ = item;\n    }\n  }\n\n  popHead() {\n    const item = this.head_;\n    if (item && item.next) {\n      this.head_ = item.next;\n      item.next.prev = null;\n    } else {\n      this.head_ = null;\n      this.tail_ = null;\n    }\n    return item && item.value || null;\n  }\n\n  popTail() {\n    const item = this.tail_;\n    if (item && item.prev) {\n      this.tail_ = item.prev;\n      item.prev.next = null;\n    } else {\n      this.head_ = null;\n      this.tail_ = null;\n    }\n    return item && item.value || null;\n  }\n\n  peekHead() {\n    return this.head_ && this.head_.value || null;\n  }\n\n  peekTail() {\n    return this.tail_ && this.tail_.value || null;\n  }\n\n  filter(test) {\n    let item = this.head_;\n    while (item !== null) {\n      if (test(item.value) === false) {\n        if (item.prev === null) {\n          this.head_ = item.next;\n        } else {\n          item.prev.next = item.next;\n        }\n        if (item.next === null) {\n          this.tail_ = item.prev;\n        } else {\n          item.next.prev = item.prev;\n        }\n      }\n      item = item.next;\n    }\n  }\n\n  toArray() {\n    let item = this.head_;\n    let array = [];\n    while (item != null) {\n      array.push(item.value);\n      item = item.next;\n    }\n    return array;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/deque.js","// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.3.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d, i) {\n  return i;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(k, tx, ty) {\n  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * k + tx, y * k + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 60\n// module chunks = 3"],"sourceRoot":""}